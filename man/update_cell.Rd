% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wb_functions.R
\name{update_cell}
\alias{update_cell}
\title{Replace data cell(s)}
\usage{
update_cell(
  x,
  wb,
  sheet,
  cell,
  data_class,
  colNames = FALSE,
  removeCellStyle = FALSE
)
}
\arguments{
\item{x}{value you want to insert}

\item{wb}{the workbook you want to update}

\item{sheet}{the sheet you want to update}

\item{cell}{the cell you want to update in Excel connotation e.g. "A1"}

\item{data_class}{optional data class object}

\item{colNames}{if TRUE colNames are passed down}

\item{removeCellStyle}{keep the cell style?}
}
\description{
Minimal invasive update of cell(s) inside of imported workbooks.
}
\examples{
   xlsxFile <- system.file("extdata", "update_test.xlsx", package = "openxlsx2")
   wb <- wb_load(xlsxFile)

   # update Cells D4:D6 with 1:3
   wb <- update_cell(x = c(1:3), wb = wb, sheet = "Sheet1", cell = "D4:D6")

   # update Cells B3:D3 (names())
   wb <- update_cell(x = c("x", "y", "z"), wb = wb, sheet = "Sheet1", cell = "B3:D3")

   # update D4 again (single value this time)
   wb <- update_cell(x = 7, wb = wb, sheet = "Sheet1", cell = "D4")

   # add new column on the left of the existing workbook
   wb <- update_cell(x = 7, wb = wb, sheet = "Sheet1", cell = "A4")

   # add new row on the end of the existing workbook
   wb <- update_cell(x = 7, wb = wb, sheet = "Sheet1", cell = "A9")
   wb_to_df(wb)

}
