% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-workbook.R
\name{wbWorkbook}
\alias{wbWorkbook}
\title{R6 class for a Workbook}
\description{
R6 class for a Workbook

R6 class for a Workbook
}
\details{
A Workbook
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{sheet_names}}{sheet_names}

\item{\code{calcChain}}{calcChain}

\item{\code{charts}}{charts}

\item{\code{isChartSheet}}{isChartSheet}

\item{\code{colWidths}}{colWidths}

\item{\code{connections}}{connections}

\item{\code{Content_Types}}{Content_Types}

\item{\code{app}}{app}

\item{\code{core}}{core}

\item{\code{drawings}}{drawings}

\item{\code{drawings_rels}}{drawings_rels}

\item{\code{drawings_vml}}{drawings_vml}

\item{\code{embeddings}}{embeddings}

\item{\code{externalLinks}}{externalLinks}

\item{\code{externalLinksRels}}{externalLinksRels}

\item{\code{headFoot}}{headFoot}

\item{\code{media}}{media}

\item{\code{persons}}{persons}

\item{\code{pivotTables}}{pivotTables}

\item{\code{pivotTables.xml.rels}}{pivotTables.xml.rels}

\item{\code{pivotDefinitions}}{pivotDefinitions}

\item{\code{pivotRecords}}{pivotRecords}

\item{\code{pivotDefinitionsRels}}{pivotDefinitionsRels}

\item{\code{queryTables}}{queryTables}

\item{\code{rowHeights}}{rowHeights}

\item{\code{slicers}}{slicers}

\item{\code{slicerCaches}}{slicerCaches}

\item{\code{sharedStrings}}{sharedStrings}

\item{\code{styleObjects}}{styleObjects}

\item{\code{styles_mgr}}{styles_mgr}

\item{\code{styles_xml}}{styles_xml}

\item{\code{tables}}{tables}

\item{\code{tables.xml.rels}}{tables.xml.rels}

\item{\code{theme}}{theme}

\item{\code{vbaProject}}{vbaProject}

\item{\code{vml}}{vml}

\item{\code{vml_rels}}{vml_rels}

\item{\code{comments}}{comments}

\item{\code{threadComments}}{threadComments}

\item{\code{workbook}}{workbook}

\item{\code{workbook.xml.rels}}{workbook.xml.rels}

\item{\code{worksheets}}{worksheets}

\item{\code{worksheets_rels}}{worksheets_rels}

\item{\code{sheetOrder}}{sheetOrder}

\item{\code{path}}{path}

\item{\code{styleObjectsList}}{styleObjectsList}

\item{\code{creator}}{A character vector of creators}

\item{\code{title}}{title}

\item{\code{subject}}{subject}

\item{\code{category}}{category}

\item{\code{datetimeCreated}}{The datetime (as \code{POSIXt}) the workbook is
created.  Defaults to the current \code{Sys.time()} when the workbook object
is created, not when the Excel files are saved.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{wbWorkbook$new()}}
\item \href{#method-append}{\code{wbWorkbook$append()}}
\item \href{#method-append_sheets}{\code{wbWorkbook$append_sheets()}}
\item \href{#method-addWorksheet}{\code{wbWorkbook$addWorksheet()}}
\item \href{#method-cloneWorksheet}{\code{wbWorkbook$cloneWorksheet()}}
\item \href{#method-addChartSheet}{\code{wbWorkbook$addChartSheet()}}
\item \href{#method-save}{\code{wbWorkbook$save()}}
\item \href{#method-buildTable}{\code{wbWorkbook$buildTable()}}
\item \href{#method-createFontNode}{\code{wbWorkbook$createFontNode()}}
\item \href{#method-getBaseFont}{\code{wbWorkbook$getBaseFont()}}
\item \href{#method-setSheetName}{\code{wbWorkbook$setSheetName()}}
\item \href{#method-setRowHeights}{\code{wbWorkbook$setRowHeights()}}
\item \href{#method-createCols}{\code{wbWorkbook$createCols()}}
\item \href{#method-groupCols}{\code{wbWorkbook$groupCols()}}
\item \href{#method-groupRows}{\code{wbWorkbook$groupRows()}}
\item \href{#method-removeWorksheet}{\code{wbWorkbook$removeWorksheet()}}
\item \href{#method-addDXFS}{\code{wbWorkbook$addDXFS()}}
\item \href{#method-dataValidation}{\code{wbWorkbook$dataValidation()}}
\item \href{#method-dataValidation_list}{\code{wbWorkbook$dataValidation_list()}}
\item \href{#method-conditionalFormatting}{\code{wbWorkbook$conditionalFormatting()}}
\item \href{#method-addCellMerge}{\code{wbWorkbook$addCellMerge()}}
\item \href{#method-removeCellMerge}{\code{wbWorkbook$removeCellMerge()}}
\item \href{#method-freezePanes}{\code{wbWorkbook$freezePanes()}}
\item \href{#method-insertImage}{\code{wbWorkbook$insertImage()}}
\item \href{#method-addStyle}{\code{wbWorkbook$addStyle()}}
\item \href{#method-createNamedRegion}{\code{wbWorkbook$createNamedRegion()}}
\item \href{#method-print}{\code{wbWorkbook$print()}}
\item \href{#method-protectWorkbook}{\code{wbWorkbook$protectWorkbook()}}
\item \href{#method-setCreators}{\code{wbWorkbook$setCreators()}}
\item \href{#method-addCreators}{\code{wbWorkbook$addCreators()}}
\item \href{#method-removeCreators}{\code{wbWorkbook$removeCreators()}}
\item \href{#method-changeLastModifiedBy}{\code{wbWorkbook$changeLastModifiedBy()}}
\item \href{#method-clone}{\code{wbWorkbook$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates a new \code{wbWorkbook} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$new(
  creator = NULL,
  title = NULL,
  subject = NULL,
  category = NULL,
  datetimeCreated = Sys.time()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{creator}}{character vector of creators.  Duplicated are ignored.}

\item{\code{title}}{title}

\item{\code{subject}}{subject}

\item{\code{category}}{category}

\item{\code{datetimeCreated}}{The datetime (as \code{POSIXt}) the workbook is
created.  Defaults to the current \code{Sys.time()} when the workbook object
is created, not when the Excel files are saved.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a \code{wbWorkbook} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-append"></a>}}
\if{latex}{\out{\hypertarget{method-append}{}}}
\subsection{Method \code{append()}}{
Append a field. This method is intended for internal use
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$append(field, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{field}}{A valid field name}

\item{\code{value}}{A value for the field}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-append_sheets"></a>}}
\if{latex}{\out{\hypertarget{method-append_sheets}{}}}
\subsection{Method \code{append_sheets()}}{
Append to \code{self$workbook$sheets} This method is intended for internal use
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$append_sheets(value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{A value for \code{self$workbook$sheets}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addWorksheet"></a>}}
\if{latex}{\out{\hypertarget{method-addWorksheet}{}}}
\subsection{Method \code{addWorksheet()}}{
Add worksheet to the \code{wbWorkbook} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$addWorksheet(
  sheetName,
  showGridLines = TRUE,
  tabColour = NULL,
  zoom = 100,
  header = NULL,
  footer = NULL,
  oddHeader = header,
  oddFooter = footer,
  evenHeader = header,
  evenFooter = footer,
  firstHeader = header,
  firstFooter = footer,
  visible = c("true", "false", "hidden", "visible", "veryhidden"),
  hasDrawing = FALSE,
  paperSize = getOption("openxlsx.paperSize", default = 9),
  orientation = getOption("openxlsx.orientation", default = "portrait"),
  hdpi = getOption("openxlsx.hdpi", default = getOption("openxlsx.dpi", default = 300)),
  vdpi = getOption("openxlsx.vdpi", default = getOption("openxlsx.dpi", default = 300))
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheetName}}{sheetName}

\item{\code{showGridLines}}{showGridLines}

\item{\code{tabColour}}{tabColour}

\item{\code{zoom}}{zoom}

\item{\code{header}}{header}

\item{\code{footer}}{footer}

\item{\code{oddHeader}}{oddHeader}

\item{\code{oddFooter}}{oddFooter}

\item{\code{evenHeader}}{evenHeader}

\item{\code{evenFooter}}{evenFooter}

\item{\code{firstHeader}}{firstHeader}

\item{\code{firstFooter}}{firstFooter}

\item{\code{visible}}{visible}

\item{\code{hasDrawing}}{hasDrawing}

\item{\code{paperSize}}{paperSize}

\item{\code{orientation}}{orientation}

\item{\code{hdpi}}{hdpi}

\item{\code{vdpi}}{vdpi}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cloneWorksheet"></a>}}
\if{latex}{\out{\hypertarget{method-cloneWorksheet}{}}}
\subsection{Method \code{cloneWorksheet()}}{
Clone a workbooksheet
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$cloneWorksheet(sheetName, clonedSheet)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheetName}}{sheetName}

\item{\code{clonedSheet}}{clonedSheet}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addChartSheet"></a>}}
\if{latex}{\out{\hypertarget{method-addChartSheet}{}}}
\subsection{Method \code{addChartSheet()}}{
Add a chart sheet to the workbook
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$addChartSheet(sheetName, tabColour = NULL, zoom = 100)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheetName}}{sheetName}

\item{\code{tabColour}}{tabColour}

\item{\code{zoom}}{zoom}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-save"></a>}}
\if{latex}{\out{\hypertarget{method-save}{}}}
\subsection{Method \code{save()}}{
Save the workbook
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$save(path = self$path, overwrite = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{The path to save the workbook to}

\item{\code{overwrite}}{If \code{FALSE}, will not overwrite when \code{path} exists}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-buildTable"></a>}}
\if{latex}{\out{\hypertarget{method-buildTable}{}}}
\subsection{Method \code{buildTable()}}{
Build table
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$buildTable(
  sheet,
  colNames,
  ref,
  showColNames,
  tableStyle,
  tableName,
  withFilter,
  totalsRowCount = 0,
  showFirstColumn = 0,
  showLastColumn = 0,
  showRowStripes = 1,
  showColumnStripes = 0
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheet}}{sheet}

\item{\code{colNames}}{colNames}

\item{\code{ref}}{ref}

\item{\code{showColNames}}{showColNames}

\item{\code{tableStyle}}{tableStyle}

\item{\code{tableName}}{tableName}

\item{\code{withFilter}}{withFilter}

\item{\code{totalsRowCount}}{totalsRowCount}

\item{\code{showFirstColumn}}{showFirstColumn}

\item{\code{showLastColumn}}{showLastColumn}

\item{\code{showRowStripes}}{showRowStripes}

\item{\code{showColumnStripes}}{showColumnStripes}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorksheet} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-createFontNode"></a>}}
\if{latex}{\out{\hypertarget{method-createFontNode}{}}}
\subsection{Method \code{createFontNode()}}{
Create a font node from a style
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$createFontNode(style)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{style}}{style}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The font node as xml?
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getBaseFont"></a>}}
\if{latex}{\out{\hypertarget{method-getBaseFont}{}}}
\subsection{Method \code{getBaseFont()}}{
Get the base font
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$getBaseFont()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of of the font
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setSheetName"></a>}}
\if{latex}{\out{\hypertarget{method-setSheetName}{}}}
\subsection{Method \code{setSheetName()}}{
Sets a sheet name
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$setSheetName(sheet, newSheetName)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheet}}{Old sheet name}

\item{\code{newSheetName}}{New sheet name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setRowHeights"></a>}}
\if{latex}{\out{\hypertarget{method-setRowHeights}{}}}
\subsection{Method \code{setRowHeights()}}{
Sets a row height for a sheet
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$setRowHeights(sheet, rows, heights)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheet}}{sheet}

\item{\code{rows}}{rows}

\item{\code{heights}}{heights}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
description
creates column object for worksheet
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-createCols"></a>}}
\if{latex}{\out{\hypertarget{method-createCols}{}}}
\subsection{Method \code{createCols()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$createCols(sheet, n)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheet}}{sheet}

\item{\code{n}}{n}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-groupCols"></a>}}
\if{latex}{\out{\hypertarget{method-groupCols}{}}}
\subsection{Method \code{groupCols()}}{
Group cols
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$groupCols(sheet, cols, collapsed, levels = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheet}}{sheet}

\item{\code{cols}}{cols}

\item{\code{collapsed}}{collapsed}

\item{\code{levels}}{levels}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-groupRows"></a>}}
\if{latex}{\out{\hypertarget{method-groupRows}{}}}
\subsection{Method \code{groupRows()}}{
Group rows
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$groupRows(sheet, rows, collapsed, levels = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheet}}{sheet}

\item{\code{rows}}{rows}

\item{\code{collapsed}}{collapsed}

\item{\code{levels}}{levels}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-removeWorksheet"></a>}}
\if{latex}{\out{\hypertarget{method-removeWorksheet}{}}}
\subsection{Method \code{removeWorksheet()}}{
Remove a worksheet
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$removeWorksheet(sheet)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheet}}{The worksheet to delete}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addDXFS"></a>}}
\if{latex}{\out{\hypertarget{method-addDXFS}{}}}
\subsection{Method \code{addDXFS()}}{
Add DXFS?
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$addDXFS(style)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{style}}{style}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dataValidation"></a>}}
\if{latex}{\out{\hypertarget{method-dataValidation}{}}}
\subsection{Method \code{dataValidation()}}{
Set data validations for a sheet
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$dataValidation(
  sheet,
  startRow,
  endRow,
  startCol,
  endCol,
  type,
  operator,
  value,
  allowBlank,
  showInputMsg,
  showErrorMsg
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheet}}{sheet}

\item{\code{startRow}}{startRow}

\item{\code{endRow}}{endRow}

\item{\code{startCol}}{startCol}

\item{\code{endCol}}{endCol}

\item{\code{type}}{type}

\item{\code{operator}}{operator}

\item{\code{value}}{value}

\item{\code{allowBlank}}{allowBlank}

\item{\code{showInputMsg}}{showInputMsg}

\item{\code{showErrorMsg}}{showErrorMsg}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dataValidation_list"></a>}}
\if{latex}{\out{\hypertarget{method-dataValidation_list}{}}}
\subsection{Method \code{dataValidation_list()}}{
Set data validations for a sheet
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$dataValidation_list(
  sheet,
  startRow,
  endRow,
  startCol,
  endCol,
  value,
  allowBlank,
  showInputMsg,
  showErrorMsg
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheet}}{sheet}

\item{\code{startRow}}{startRow}

\item{\code{endRow}}{endRow}

\item{\code{startCol}}{startCol}

\item{\code{endCol}}{endCol}

\item{\code{value}}{value}

\item{\code{allowBlank}}{allowBlank}

\item{\code{showInputMsg}}{showInputMsg}

\item{\code{showErrorMsg}}{showErrorMsg}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-conditionalFormatting"></a>}}
\if{latex}{\out{\hypertarget{method-conditionalFormatting}{}}}
\subsection{Method \code{conditionalFormatting()}}{
Set conditional formatting for a sheet
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$conditionalFormatting(
  sheet,
  startRow,
  endRow,
  startCol,
  endCol,
  dxfId,
  formula,
  type,
  values,
  params
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheet}}{sheet}

\item{\code{startRow}}{startRow}

\item{\code{endRow}}{endRow}

\item{\code{startCol}}{startCol}

\item{\code{endCol}}{endCol}

\item{\code{dxfId}}{dxfId}

\item{\code{formula}}{formula}

\item{\code{type}}{type}

\item{\code{values}}{values}

\item{\code{params}}{params}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addCellMerge"></a>}}
\if{latex}{\out{\hypertarget{method-addCellMerge}{}}}
\subsection{Method \code{addCellMerge()}}{
Set cell merging for a sheet
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$addCellMerge(sheet, rows = NULL, cols = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheet}}{sheet}

\item{\code{rows, cols}}{Row and column specifications.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-removeCellMerge"></a>}}
\if{latex}{\out{\hypertarget{method-removeCellMerge}{}}}
\subsection{Method \code{removeCellMerge()}}{
Removes cell merging for a sheet
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$removeCellMerge(sheet, rows = NULL, cols = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheet}}{sheet}

\item{\code{rows, cols}}{Row and column specifications.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-freezePanes"></a>}}
\if{latex}{\out{\hypertarget{method-freezePanes}{}}}
\subsection{Method \code{freezePanes()}}{
Set freeze panes for a sheet
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$freezePanes(
  sheet,
  firstActiveRow = NULL,
  firstActiveCol = NULL,
  firstRow = FALSE,
  firstCol = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheet}}{sheet}

\item{\code{firstActiveRow}}{firstActiveRow}

\item{\code{firstActiveCol}}{firstActiveCol}

\item{\code{firstRow}}{firstRow}

\item{\code{firstCol}}{firstCol}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-insertImage"></a>}}
\if{latex}{\out{\hypertarget{method-insertImage}{}}}
\subsection{Method \code{insertImage()}}{
Insert an image into a sheet
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$insertImage(
  sheet,
  file,
  startRow,
  startCol,
  width,
  height,
  rowOffset = 0,
  colOffset = 0
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheet}}{sheet}

\item{\code{file}}{file}

\item{\code{startRow}}{startRow}

\item{\code{startCol}}{startCol}

\item{\code{width}}{width}

\item{\code{height}}{height}

\item{\code{rowOffset}}{rowOffset}

\item{\code{colOffset}}{colOffset}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addStyle"></a>}}
\if{latex}{\out{\hypertarget{method-addStyle}{}}}
\subsection{Method \code{addStyle()}}{
Add a style to a sheet
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$addStyle(sheet, style, rows, cols, stack, gridExpand = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheet}}{sheet}

\item{\code{style}}{style}

\item{\code{rows}}{rows}

\item{\code{cols}}{cols}

\item{\code{stack}}{stack}

\item{\code{gridExpand}}{gridExpand}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-createNamedRegion"></a>}}
\if{latex}{\out{\hypertarget{method-createNamedRegion}{}}}
\subsection{Method \code{createNamedRegion()}}{
Create a named region in a sheet
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$createNamedRegion(ref1, ref2, name, sheet, localSheetId = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ref1}}{ref1}

\item{\code{ref2}}{ref2}

\item{\code{name}}{name}

\item{\code{sheet}}{sheet}

\item{\code{localSheetId}}{localSheetId}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Prints the \code{wbWorkbook} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The \code{wbWorkbook} object, invisibly; called for its side-effects
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-protectWorkbook"></a>}}
\if{latex}{\out{\hypertarget{method-protectWorkbook}{}}}
\subsection{Method \code{protectWorkbook()}}{
Protect a workbook
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$protectWorkbook(
  protect = TRUE,
  lockStructure = FALSE,
  lockWindows = FALSE,
  password = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{protect}}{protect}

\item{\code{lockStructure}}{lockStructure}

\item{\code{lockWindows}}{lockWindows}

\item{\code{password}}{password}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setCreators"></a>}}
\if{latex}{\out{\hypertarget{method-setCreators}{}}}
\subsection{Method \code{setCreators()}}{
Set creator(s)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$setCreators(creators)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{creators}}{A character vector of creators to set.  Duplicates are
ignored.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addCreators"></a>}}
\if{latex}{\out{\hypertarget{method-addCreators}{}}}
\subsection{Method \code{addCreators()}}{
Add creator(s)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$addCreators(creators)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{creators}}{A character vector of creators to add.  Duplicates are
ignored.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-removeCreators"></a>}}
\if{latex}{\out{\hypertarget{method-removeCreators}{}}}
\subsection{Method \code{removeCreators()}}{
Remove creator(s)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$removeCreators(creators)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{creators}}{A character vector of creators to remove.  All duplicated
are removed.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-changeLastModifiedBy"></a>}}
\if{latex}{\out{\hypertarget{method-changeLastModifiedBy}{}}}
\subsection{Method \code{changeLastModifiedBy()}}{
Change the last modified by
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$changeLastModifiedBy(LastModifiedBy = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{LastModifiedBy}}{A new value}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{wbWorkbook} object, invisibly
Deep cloning method for workbooks.  This method also accesses
\verb{$clone(deep = TRUE)} methods for \code{R6} fields.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wbWorkbook$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
