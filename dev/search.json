[{"path":"/dev/articles/Update-from-openxlsx.html","id":"basic-read-and-write-functions","dir":"Articles","previous_headings":"","what":"Basic read and write functions","title":"Upgrade from openxlsx","text":"Welcome openxlsx2 update vignette. vignette take common code examples openxlsx show similar results can replicated openxlsx2. Thank taking look, let’s get started. previous openxlsx functions used . function calls, well camel-case, tried switch snake-case (still work progress, still function arguments use camel-case).","code":""},{"path":"/dev/articles/Update-from-openxlsx.html","id":"read-xlsx-or-xlsm-files","dir":"Articles","previous_headings":"Basic read and write functions","what":"Read xlsx or xlsm files","title":"Upgrade from openxlsx","text":"basic read function changed read.xlsx read_xlsx. Using default xlsx file included package: old syntax looked like : changed : can see, return spreadsheet return codes (e.g., #NUM) openxlsx2. Another thing see , return cell row rowname data frame returned. openxlsx2 return data frame selected size, even empty. preferred readWorksheet() become wb_read(). wrappers newly introduced function wb_to_df() provides options. read_xlsx() wb_read() created backward comparability.","code":"xlsxFile <- system.file(\"extdata\", \"readTest.xlsx\", package = \"openxlsx2\") # read in openxlsx openxlsx::read.xlsx(xlsxFile) # read in openxlsx2 openxlsx2::read_xlsx(xlsxFile) ##     Var1 Var2 NA  Var3  Var4       Var5         Var6    Var7 ## 2   TRUE    1 NA     1     a 2015-02-07 3209324 This #DIV/0! ## 3   TRUE   NA NA #NUM!     b 2015-02-06         <NA>    <NA> ## 4   TRUE    2 NA  1.34     c 2015-02-05         <NA>   #NUM! ## 5  FALSE    2 NA  <NA> #NUM!       <NA>         <NA>    <NA> ## 6  FALSE    3 NA  1.56     e       <NA>         <NA>    <NA> ## 7  FALSE    1 NA   1.7     f 2015-02-02         <NA>    <NA> ## 8     NA   NA NA  <NA>  <NA> 2015-02-01         <NA>    <NA> ## 9  FALSE    2 NA    23     h 2015-01-31         <NA>    <NA> ## 10 FALSE    3 NA  67.3     i 2015-01-30         <NA>    <NA> ## 11    NA    1 NA   123  <NA> 2015-01-29         <NA>    <NA>"},{"path":"/dev/articles/Update-from-openxlsx.html","id":"write-xlsx-files","dir":"Articles","previous_headings":"","what":"Write xlsx files","title":"Upgrade from openxlsx","text":"Basic writing openxlsx2 behaves identical openxlsx. Though aware overwrite optional parameter openxlsx2 just like functions like base::write.csv write onto existing file name, file replaced. Setting output temporary xlsx file previous write function looks like : new function looks quite similar:","code":"output <- temp_xlsx() # write in openxlsx openxlsx::write.xlsx(iris, file = output, colNames = TRUE) # write in openxlsx2 openxlsx2::write_xlsx(iris, file = output, colNames = TRUE)"},{"path":"/dev/articles/Update-from-openxlsx.html","id":"basic-workbook-functions","dir":"Articles","previous_headings":"","what":"Basic workbook functions","title":"Upgrade from openxlsx","text":"Workbook functions renamed begin wb_ plenty package, therefore looking man pages seems fastest way. Yet, begins loading workbook.","code":""},{"path":"/dev/articles/Update-from-openxlsx.html","id":"loading-a-workbook","dir":"Articles","previous_headings":"Basic workbook functions","what":"Loading a workbook","title":"Upgrade from openxlsx","text":"major feature openxlsx workbooks. Obviously remain central piece openxlsx2. Previous load : openxlsx2 loading changed : plenty functions interact workbooks describe every single one . detailed list can found references","code":"wb <- loadWorkbook(xlsxFile) wb <- wb_load(xlsxFile)"},{"path":"/dev/articles/Update-from-openxlsx.html","id":"styles","dir":"Articles","previous_headings":"Basic workbook functions","what":"Styles","title":"Upgrade from openxlsx","text":"One biggest user facing change removal stylesObject. following section use code addStyle openxlsx2 code looks something like : code uses chaining. prefer piping, provide chained functions prefix wb_ wb_add_worksheet(), wb_add_data(), wb_add_border() wb_set_col_widths() functions use pipes %>% |>. pipes code becomes aware chains modify object place pipes . can re-use styles wb_get_cell_style() wb_set_cell_style(). Abandoning stylesObject openxlsx2 huge benefit can import export spreadsheet without changing cell style. still possible modify cell style wb_add_border(), wb_add_fill(), wb_add_font() wb_add_numfmt(). Additional examples regarding styles can found styles vignette.","code":"## Create a new workbook wb <- createWorkbook(\"My name here\") addWorksheet(wb, \"Expenditure\", gridLines = FALSE) writeData(wb, sheet = 1, USPersonalExpenditure, rowNames = TRUE)  ## style for body bodyStyle <- createStyle(border = \"TopBottom\", borderColor = \"#4F81BD\") addStyle(wb, sheet = 1, bodyStyle, rows = 2:6, cols = 1:6, gridExpand = TRUE)  ## set column width for row names column setColWidths(wb, 1, cols = 1, widths = 21) border_color <- wb_color(hex = \"FF4F81BD\") wb <- wb_workbook(\"My name here\")$   add_worksheet(\"Expenditure\", gridLines = FALSE)$   add_data(x = USPersonalExpenditure, rowNames = TRUE)$   add_border( # add the outer and inner border     dims = \"A1:F6\",     top_border = \"thin\", top_color = border_color,     bottom_border = \"thin\", bottom_color = border_color,     inner_hgrid = \"thin\", inner_hcolor = border_color,     left_border = \"\", right_border = \"\"   )$   set_col_widths( # set column width     cols = 1:6,     widths = c(\"20\", rep(\"10\", 5))   )$ # remove the value in A1   add_data(dims = \"A1\", x = \"\") border_color <- wb_color(hex = \"FF4F81BD\") wb <- wb_workbook(\"My name here\") %>%   wb_add_worksheet(\"Expenditure\", gridLines = FALSE) %>%   wb_add_data(x = USPersonalExpenditure, rowNames = TRUE) %>%   wb_add_border( # add the outer and inner border     dims = \"A1:F6\",     top_border = \"thin\", top_color = border_color,     bottom_border = \"thin\", bottom_color = border_color,     inner_hgrid = \"thin\", inner_hcolor = border_color,     left_border = \"\", right_border = \"\"   ) %>%   wb_set_col_widths( # set column width     cols = 1:6,     widths = c(\"20\", rep(\"10\", 5))   ) %>% # remove the value in A1   wb_add_data(dims = \"A1\", x = \"\") wbp <- wb_workbook() %>% wb_add_worksheet() wbc <- wb_workbook()$add_worksheet()  # need to assign wbp wbp <- wbp %>% wb_add_data(x = iris) wbc$add_data(x = iris)"},{"path":"/dev/articles/Update-from-openxlsx.html","id":"conditional-formatting","dir":"Articles","previous_headings":"Basic workbook functions","what":"Conditional formatting","title":"Upgrade from openxlsx","text":"Extended examples conditional formatting can found conditional formatting vignette. minimal example following:","code":"# with chains wb <- wb_workbook()$   add_worksheet(\"a\")$   add_data(x = 1:4, colNames = FALSE)$   add_conditional_formatting(cols = 1, rows = 1:4, rule = \">2\")  # with pipes wb <- wb_workbook() %>%   wb_add_worksheet(\"a\") %>%   wb_add_data(x = 1:4, colNames = FALSE) %>%   wb_add_conditional_formatting(cols = 1, rows = 1:4, rule = \">2\")"},{"path":"/dev/articles/Update-from-openxlsx.html","id":"data-validation","dir":"Articles","previous_headings":"Basic workbook functions","what":"Data validation","title":"Upgrade from openxlsx","text":"Similar data validation updated improved. openxlsx code data validation looks openxlsx2 something like :","code":"wb <- createWorkbook() addWorksheet(wb, \"Sheet 1\") writeDataTable(wb, 1, x = iris[1:30, ]) dataValidation(wb, 1,   col = 1:3, rows = 2:31, type = \"whole\",   operator = \"between\", value = c(1, 9) ) # with chains wb <- wb_workbook()$   add_worksheet(\"Sheet 1\")$   add_data_table(1, x = iris[1:30, ])$   add_data_validation(1,     col = 1:3, rows = 2:31, type = \"whole\",     operator = \"between\", value = c(1, 9)   )  # with pipes wb <- wb_workbook() %>%   wb_add_worksheet(\"Sheet 1\") %>%   wb_add_data_table(1, x = iris[1:30, ]) %>%   wb_add_data_validation(1,     col = 1:3, rows = 2:31, type = \"whole\",     operator = \"between\", value = c(1, 9)   )"},{"path":"/dev/articles/Update-from-openxlsx.html","id":"saving","dir":"Articles","previous_headings":"Basic workbook functions","what":"Saving","title":"Upgrade from openxlsx","text":"Saving switched saveWorbook() wb_save() opening workbook switched openXL() wb_open().","code":""},{"path":"/dev/articles/Update-from-openxlsx.html","id":"invitation-to-contribute","dir":"Articles","previous_headings":"","what":"Invitation to contribute","title":"Upgrade from openxlsx","text":"put lot work openxls2 make useful needs, improving found useful openxlsx removing didn’t need. claim omniscient things can spreadsheet software, claim omniscient things can openxlsx2. package still development make promises stable API yet. may change reach version 1.0. Nevertheless, quite fond little package invite others try comment like course think missing something doesn’t work. openxlsx2 complex piece software certainly work bug-free, even best. want contribute development openxlsx2, please guest Github. Join open discussion, post fix issues write us mail.","code":""},{"path":"/dev/articles/conditional-formatting.html","id":"rule-applies-to-all-each-cell-in-range","dir":"Articles","previous_headings":"","what":"Rule applies to all each cell in range","title":"Conditional Formatting","text":"","code":"wb$add_worksheet(\"cellIs\") wb$add_data(\"cellIs\", -5:5) wb$add_data(\"cellIs\", LETTERS[1:11], startCol = 2) wb$add_conditional_formatting(   \"cellIs\",   cols = 1,   rows = 1:11,   rule = \"!=0\",   style = \"negStyle\" ) wb$add_conditional_formatting(   \"cellIs\",   cols = 1,   rows = 1:11,   rule = \"==0\",   style = \"posStyle\" )"},{"path":"/dev/articles/conditional-formatting.html","id":"highlight-row-dependent-on-first-cell-in-row","dir":"Articles","previous_headings":"","what":"Highlight row dependent on first cell in row","title":"Conditional Formatting","text":"","code":"wb$add_worksheet(\"Moving Row\") wb$add_data(\"Moving Row\", -5:5) wb$add_data(\"Moving Row\", LETTERS[1:11], startCol = 2) wb$add_conditional_formatting(   \"Moving Row\",   cols = 1:2,   rows = 1:11,   rule = \"$A1<0\",   style = \"negStyle\" ) wb$add_conditional_formatting(   \"Moving Row\",   cols = 1:2,   rows = 1:11,   rule = \"$A1>0\",   style = \"posStyle\" )"},{"path":"/dev/articles/conditional-formatting.html","id":"highlight-column-dependent-on-first-cell-in-column","dir":"Articles","previous_headings":"","what":"Highlight column dependent on first cell in column","title":"Conditional Formatting","text":"","code":"wb$add_worksheet(\"Moving Col\") wb$add_data(\"Moving Col\", -5:5) wb$add_data(\"Moving Col\", LETTERS[1:11], startCol = 2) wb$add_conditional_formatting(   \"Moving Col\",   cols = 1:2,   rows = 1:11,   rule = \"A$1<0\",   style = \"negStyle\" ) wb$add_conditional_formatting(   \"Moving Col\",   cols = 1:2,   rows = 1:11,   rule = \"A$1>0\",   style = \"posStyle\" )"},{"path":"/dev/articles/conditional-formatting.html","id":"highlight-entire-range-cols-x-rows-dependent-only-on-cell-a1","dir":"Articles","previous_headings":"","what":"Highlight entire range cols X rows dependent only on cell A1","title":"Conditional Formatting","text":"","code":"wb$add_worksheet(\"Dependent on\") wb$add_data(\"Dependent on\", -5:5) wb$add_data(\"Dependent on\", LETTERS[1:11], startCol = 2) wb$add_conditional_formatting(   \"Dependent on\",   cols = 1:2,   rows = 1:11,   rule = \"$A$1 < 0\",   style = \"negStyle\" ) wb$add_conditional_formatting(   \"Dependent on\",   cols = 1:2,   rows = 1:11,   rule = \"$A$1>0\",   style = \"posStyle\" )"},{"path":"/dev/articles/conditional-formatting.html","id":"highlight-cells-in-column-1-based-on-value-in-column-2","dir":"Articles","previous_headings":"","what":"Highlight cells in column 1 based on value in column 2","title":"Conditional Formatting","text":"","code":"wb$add_data(\"Dependent on\", data.frame(x = 1:10, y = runif(10)), startRow = 15) wb$add_conditional_formatting(   \"Dependent on\",   cols = 1,   rows = 16:25,   rule = \"B16<0.5\",   style = \"negStyle\" ) wb$add_conditional_formatting(   \"Dependent on\",   cols = 1,   rows = 16:25,   rule = \"B16>=0.5\",   style = \"posStyle\" )"},{"path":"/dev/articles/conditional-formatting.html","id":"highlight-duplicates-using-default-style","dir":"Articles","previous_headings":"","what":"Highlight duplicates using default style","title":"Conditional Formatting","text":"","code":"wb$add_worksheet(\"Duplicates\") wb$add_data(\"Duplicates\", sample(LETTERS[1:15], size = 10, replace = TRUE)) wb$add_conditional_formatting(   \"Duplicates\",   cols = 1,   rows = 1:10,   type = \"duplicatedValues\" )"},{"path":"/dev/articles/conditional-formatting.html","id":"cells-containing-text","dir":"Articles","previous_headings":"","what":"Cells containing text","title":"Conditional Formatting","text":"","code":"fn <- function(x) paste(sample(LETTERS, 10), collapse = \"-\") wb$add_worksheet(\"containsText\") wb$add_data(\"containsText\", sapply(1:10, fn)) wb$add_conditional_formatting(   \"containsText\",   cols = 1,   rows = 1:10,   type = \"containsText\",   rule = \"A\" ) wb$add_worksheet(\"notcontainsText\")"},{"path":"/dev/articles/conditional-formatting.html","id":"cells-not-containing-text","dir":"Articles","previous_headings":"","what":"Cells not containing text","title":"Conditional Formatting","text":"","code":"fn <- function(x) paste(sample(LETTERS, 10), collapse = \"-\") wb$add_data(\"notcontainsText\", sapply(1:10, fn)) wb$add_conditional_formatting(   \"notcontainsText\",   cols = 1,   rows = 1:10,   type = \"notContainsText\",   rule = \"A\" )"},{"path":"/dev/articles/conditional-formatting.html","id":"cells-begins-with-text","dir":"Articles","previous_headings":"","what":"Cells begins with text","title":"Conditional Formatting","text":"","code":"fn <- function(x) paste(sample(LETTERS, 10), collapse = \"-\") wb$add_worksheet(\"beginsWith\") wb$add_data(\"beginsWith\", sapply(1:100, fn)) wb$add_conditional_formatting(   \"beginsWith\",   cols = 1,   rows = 1:100,   type = \"beginsWith\",   rule = \"A\" )"},{"path":"/dev/articles/conditional-formatting.html","id":"cells-ends-with-text","dir":"Articles","previous_headings":"","what":"Cells ends with text","title":"Conditional Formatting","text":"","code":"fn <- function(x) paste(sample(LETTERS, 10), collapse = \"-\") wb$add_worksheet(\"endsWith\") wb$add_data(\"endsWith\", sapply(1:100, fn)) wb$add_conditional_formatting(   \"endsWith\",   cols = 1,   rows = 1:100,   type = \"endsWith\",   rule = \"A\" )"},{"path":"/dev/articles/conditional-formatting.html","id":"colorscale-colors-cells-based-on-cell-value","dir":"Articles","previous_headings":"","what":"Colorscale colors cells based on cell value","title":"Conditional Formatting","text":"Yep, color scale image. Rule vector colors length 2 3 (hex color colors()). rule NULL, min max cells used. Rule must length style L.","code":"df <- read_xlsx(system.file(\"extdata\", \"readTest.xlsx\", package = \"openxlsx2\"), sheet = 5) wb$add_worksheet(\"colorScale\", zoom = 30) wb$add_data(\"colorScale\", df, colNames = FALSE) ## write data.frame wb$add_conditional_formatting(   \"colorScale\",   cols = seq_along(df),   rows = seq_len(nrow(df)),   style = c(\"black\", \"white\"),   rule = c(0, 255),   type = \"colorScale\" ) wb$set_col_widths(\"colorScale\", cols = seq_along(df), widths = 1.07) wb$set_row_heights(\"colorScale\", rows = seq_len(nrow(df)), heights = 7.5)"},{"path":"/dev/articles/conditional-formatting.html","id":"databars","dir":"Articles","previous_headings":"","what":"Databars","title":"Conditional Formatting","text":"","code":"wb$add_worksheet(\"databar\") ## Databars wb$add_data(\"databar\", -5:5, startCol = 1) wb <- wb_add_conditional_formatting(   wb,   \"databar\",   cols = 1,   rows = 1:11,   type = \"dataBar\" ) ## Default colors  wb$add_data(\"databar\", -5:5, startCol = 3) wb <- wb_add_conditional_formatting(   wb,   \"databar\",   cols = 3,   rows = 1:11,   type = \"dataBar\",   params = list(     showValue = FALSE,     gradient = FALSE   ) ) ## Default colors  wb$add_data(\"databar\", -5:5, startCol = 5) wb <- wb_add_conditional_formatting(   wb,   \"databar\",   cols = 5,   rows = 1:11,   type = \"dataBar\",   style = c(\"#a6a6a6\"),   params = list(showValue = FALSE) )  wb$add_data(\"databar\", -5:5, startCol = 7) wb <- wb_add_conditional_formatting(   wb,   \"databar\",   cols = 7,   rows = 1:11,   type = \"dataBar\",   style = c(\"red\"),   params = list(     showValue = TRUE,     gradient = FALSE   ) )  # custom color wb$add_data(\"databar\", -5:5, startCol = 9) wb <- wb_add_conditional_formatting(   wb,   \"databar\",   cols = 9,   rows = 1:11,   type = \"dataBar\",   style = c(\"#a6a6a6\", \"#a6a6a6\"),   params = list(showValue = TRUE, gradient = FALSE) )  # with rule wb$add_data(x = -5:5, startCol = 11) wb <- wb_add_conditional_formatting(   wb,   \"databar\",   cols = 11,   rows = 1:11,   type = \"dataBar\",   rule = c(0, 5),   style = c(\"#a6a6a6\", \"#a6a6a6\"),   params = list(showValue = TRUE, gradient = FALSE) )"},{"path":"/dev/articles/conditional-formatting.html","id":"between","dir":"Articles","previous_headings":"","what":"Between","title":"Conditional Formatting","text":"Highlight cells interval [-2, 2]","code":"wb$add_worksheet(\"between\") wb$add_data(\"between\", -5:5) wb$add_conditional_formatting(   \"between\",   cols = 1,   rows = 1:11,   type = \"between\",   rule = c(-2, 2) ) wb$add_worksheet(\"topN\")"},{"path":"/dev/articles/conditional-formatting.html","id":"top-n","dir":"Articles","previous_headings":"","what":"Top N","title":"Conditional Formatting","text":"Highlight top 5 values column x Highlight top 20 percentage column y","code":"wb$add_data(\"topN\", data.frame(x = 1:10, y = rnorm(10))) wb$add_conditional_formatting(   \"topN\",   cols = 1,   rows = 2:11,   style = \"posStyle\",   type = \"topN\",   params = list(rank = 5) ) wb$add_conditional_formatting(   \"topN\",   cols = 2,   rows = 2:11,   style = \"posStyle\",   type = \"topN\",   params = list(rank = 20, percent = TRUE) ) wb$add_worksheet(\"bottomN\")"},{"path":"/dev/articles/conditional-formatting.html","id":"bottom-n","dir":"Articles","previous_headings":"","what":"Bottom N","title":"Conditional Formatting","text":"Highlight bottom 5 values column x Highlight bottom 20 percentage column y","code":"wb$add_data(\"bottomN\", data.frame(x = 1:10, y = rnorm(10))) wb$add_conditional_formatting(   \"bottomN\",   cols = 1,   rows = 2:11,   style = \"negStyle\",   type = \"bottomN\",   params = list(rank = 5) ) wb$add_conditional_formatting(   \"bottomN\",   cols = 2,   rows = 2:11,   style = \"negStyle\",   type = \"bottomN\",   params = list(rank = 20, percent = TRUE) ) wb$add_worksheet(\"logical operators\")"},{"path":"/dev/articles/conditional-formatting.html","id":"logical-operators","dir":"Articles","previous_headings":"","what":"Logical Operators","title":"Conditional Formatting","text":"can use Excels logical Operators","code":"wb$add_data(\"logical operators\", 1:10) wb$add_conditional_formatting(   \"logical operators\",   cols = 1,   rows = 1:10,   rule = \"OR($A1=1,$A1=3,$A1=5,$A1=7)\" )"},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"importing-data","dir":"Articles","previous_headings":"","what":"Importing data","title":"openxlsx2 basic manual","text":"Coming openxlsx might know read.xlsx() (two functions, one files one workbooks) readWorkbook(). Functions different things, mostly . openxlsx2 tried best reduce complexity hood user well. openxlsx2 replaced read_xlsx(), wb_read() share underlying function wb_to_df(). example use example data provided package. can locate “inst/extdata” folder. files included package source can open calculation software well.","code":""},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"basic-import","dir":"Articles","previous_headings":"Importing data","what":"Basic import","title":"openxlsx2 basic manual","text":"begin readTest.xlsx file telling R find file system object contains path xlsx file pass file function read workbook R output created data frame contains data types date, logical, numeric character. function import file R, wb_to_df() provides similar options openxlsx functions read.xlsx() readWorkbook() new functions go options. might noticed, return column xlsx file row name data frame returned. Per default first sheet workbook imported. want switch , either provide sheet parameter correct index provide sheet name.","code":"xlsxFile <- system.file(\"extdata\", \"readTest.xlsx\", package = \"openxlsx2\") # import workbook wb_to_df(xlsxFile) #>     Var1 Var2 NA  Var3  Var4       Var5         Var6    Var7 #> 2   TRUE    1 NA     1     a 2015-02-07 3209324 This #DIV/0! #> 3   TRUE   NA NA #NUM!     b 2015-02-06         <NA>    <NA> #> 4   TRUE    2 NA  1.34     c 2015-02-05         <NA>   #NUM! #> 5  FALSE    2 NA  <NA> #NUM!       <NA>         <NA>    <NA> #> 6  FALSE    3 NA  1.56     e       <NA>         <NA>    <NA> #> 7  FALSE    1 NA   1.7     f 2015-02-02         <NA>    <NA> #> 8     NA   NA NA  <NA>  <NA> 2015-02-01         <NA>    <NA> #> 9  FALSE    2 NA    23     h 2015-01-31         <NA>    <NA> #> 10 FALSE    3 NA  67.3     i 2015-01-30         <NA>    <NA> #> 11    NA    1 NA   123  <NA> 2015-01-29         <NA>    <NA>"},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"colnames---first-row-as-column-name","dir":"Articles","previous_headings":"Importing data","what":"colNames - first row as column name","title":"openxlsx2 basic manual","text":"previous example first imported row used column name data frame. default behavior, always wanted expected. Therefore behavior can disabled user.","code":"# do not convert first row to colNames wb_to_df(xlsxFile, colNames = FALSE) #>        A    B  C     D     E          F            G       H #> 1     NA Var2 NA  Var3  Var4       Var5         Var6    Var7 #> 2   TRUE    1 NA     1     a 2015-02-07 3209324 This #DIV/0! #> 3   TRUE <NA> NA #NUM!     b 2015-02-06         <NA>    <NA> #> 4   TRUE    2 NA  1.34     c 2015-02-05         <NA>   #NUM! #> 5  FALSE    2 NA  <NA> #NUM!       <NA>         <NA>    <NA> #> 6  FALSE    3 NA  1.56     e       <NA>         <NA>    <NA> #> 7  FALSE    1 NA   1.7     f 2015-02-02         <NA>    <NA> #> 8     NA <NA> NA  <NA>  <NA> 2015-02-01         <NA>    <NA> #> 9  FALSE    2 NA    23     h 2015-01-31         <NA>    <NA> #> 10 FALSE    3 NA  67.3     i 2015-01-30         <NA>    <NA> #> 11    NA    1 NA   123  <NA> 2015-01-29         <NA>    <NA>"},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"detectdates---convert-cells-to-r-dates","dir":"Articles","previous_headings":"Importing data","what":"detectDates - convert cells to R dates","title":"openxlsx2 basic manual","text":"creators openxml standard well known mistakenly treating something date openxlsx2 built ways identify cell date try convert value , unfortunately always trivial task might fail. case provide option disable date conversion entirely. case underlying numerical value returned.","code":"# do not try to identify dates in the data wb_to_df(xlsxFile, detectDates = FALSE) #>     Var1 Var2 NA  Var3  Var4  Var5         Var6    Var7 #> 2   TRUE    1 NA     1     a 42042 3209324 This #DIV/0! #> 3   TRUE   NA NA #NUM!     b 42041         <NA>    <NA> #> 4   TRUE    2 NA  1.34     c 42040         <NA>   #NUM! #> 5  FALSE    2 NA  <NA> #NUM!    NA         <NA>    <NA> #> 6  FALSE    3 NA  1.56     e    NA         <NA>    <NA> #> 7  FALSE    1 NA   1.7     f 42037         <NA>    <NA> #> 8     NA   NA NA  <NA>  <NA> 42036         <NA>    <NA> #> 9  FALSE    2 NA    23     h 42035         <NA>    <NA> #> 10 FALSE    3 NA  67.3     i 42034         <NA>    <NA> #> 11    NA    1 NA   123  <NA> 42033         <NA>    <NA>"},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"showformula---show-formulas-instead-of-results","dir":"Articles","previous_headings":"Importing data","what":"showFormula - show formulas instead of results","title":"openxlsx2 basic manual","text":"Sometimes things might feel . can openxml files updating formula results sheets unless opened software provides functionality certain tabular calculation software. Therefore user might interested underlying functions see going sheet. Using showFormula possible","code":"# return the underlying Excel formula instead of their values wb_to_df(xlsxFile, showFormula = TRUE) #>     Var1 Var2 NA  Var3  Var4       Var5                Var6  Var7 #> 2   TRUE    1 NA     1     a 2015-02-07 \"3209324\" & \" This\"   1/0 #> 3   TRUE   NA NA #NUM!     b 2015-02-06                <NA>  <NA> #> 4   TRUE    2 NA  1.34     c 2015-02-05                <NA> #NUM! #> 5  FALSE    2 NA  <NA> #NUM!       <NA>                <NA>  <NA> #> 6  FALSE    3 NA  1.56     e       <NA>                <NA>  <NA> #> 7  FALSE    1 NA   1.7     f 2015-02-02                <NA>  <NA> #> 8     NA   NA NA  <NA>  <NA> 2015-02-01                <NA>  <NA> #> 9  FALSE    2 NA    23     h 2015-01-31                <NA>  <NA> #> 10 FALSE    3 NA  67.3     i 2015-01-30                <NA>  <NA> #> 11    NA    1 NA   123  <NA> 2015-01-29                <NA>  <NA>"},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"dims---read-specific-dimension","dir":"Articles","previous_headings":"Importing data","what":"dims - read specific dimension","title":"openxlsx2 basic manual","text":"Sometimes entire worksheet contains much data, case provide functions read selected dimension range. range consists either specific cell like “A1” cell range notion used openxml standard","code":"# read dimension withot colNames wb_to_df(xlsxFile, dims = \"A2:C5\", colNames = FALSE) #>       A  B  C #> 2  TRUE  1 NA #> 3  TRUE NA NA #> 4  TRUE  2 NA #> 5 FALSE  2 NA"},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"cols---read-selected-columns","dir":"Articles","previous_headings":"Importing data","what":"cols - read selected columns","title":"openxlsx2 basic manual","text":"want read specific cell, cell range can use column attribute. attribute takes numeric vector argument","code":"# read selected cols wb_to_df(xlsxFile, cols = c(1:2, 7)) #>     Var1 Var2         Var6 #> 2   TRUE    1 3209324 This #> 3   TRUE   NA         <NA> #> 4   TRUE    2         <NA> #> 5  FALSE    2         <NA> #> 6  FALSE    3         <NA> #> 7  FALSE    1         <NA> #> 8     NA   NA         <NA> #> 9  FALSE    2         <NA> #> 10 FALSE    3         <NA> #> 11    NA    1         <NA>"},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"rows---read-selected-rows","dir":"Articles","previous_headings":"Importing data","what":"rows - read selected rows","title":"openxlsx2 basic manual","text":"goes rows. can select using numeric vectors","code":"# read selected rows wb_to_df(xlsxFile, rows = c(1, 4, 6)) #>    Var1 Var2 NA Var3 Var4       Var5 Var6  Var7 #> 4  TRUE    2 NA 1.34    c 2015-02-05   NA #NUM! #> 6 FALSE    3 NA 1.56    e       <NA>   NA  <NA>"},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"convert---convert-input-to-guessed-type","dir":"Articles","previous_headings":"Importing data","what":"convert - convert input to guessed type","title":"openxlsx2 basic manual","text":"xml exists difference value types. values per default characters. provide numerics, logicals dates, openxlsx2 every software dealing xlsx files make assumptions cell type. especially tricky due notion worksheets. Unlike data frame, worksheet can wild mix types data. Even though conversion process character date numeric rather solid, sometimes user might want see data without conversion applied. might useful cases something unexpected happened import created warnings. case can look raw input data. want disable date detection well, please see entry .","code":"# convert characters to numerics and date (logical too?) wb_to_df(xlsxFile, convert = FALSE) #>     Var1 Var2   NA  Var3  Var4       Var5         Var6    Var7 #> 2   TRUE    1 <NA>     1     a 2015-02-07 3209324 This #DIV/0! #> 3   TRUE <NA> <NA> #NUM!     b 2015-02-06         <NA>    <NA> #> 4   TRUE    2 <NA>  1.34     c 2015-02-05         <NA>   #NUM! #> 5  FALSE    2 <NA>  <NA> #NUM!       <NA>         <NA>    <NA> #> 6  FALSE    3 <NA>  1.56     e       <NA>         <NA>    <NA> #> 7  FALSE    1 <NA>   1.7     f 2015-02-02         <NA>    <NA> #> 8   <NA> <NA> <NA>  <NA>  <NA> 2015-02-01         <NA>    <NA> #> 9  FALSE    2 <NA>    23     h 2015-01-31         <NA>    <NA> #> 10 FALSE    3 <NA>  67.3     i 2015-01-30         <NA>    <NA> #> 11  <NA>    1 <NA>   123  <NA> 2015-01-29         <NA>    <NA>"},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"skipemptyrows---remove-empty-rows","dir":"Articles","previous_headings":"Importing data","what":"skipEmptyRows - remove empty rows","title":"openxlsx2 basic manual","text":"Even though openxlsx2 imports everything requested, sometimes might helpful remove empty lines data. might either left empty intentional empty formatted, cell value removed afterwards. added mostly backward comparability, default changed FALSE. behavior changed bit well. Previously empty cells removed prior conversion R data frames, now removed conversion removed completely empty","code":"# erase empty Rows from dataset wb_to_df(xlsxFile, sheet = 3, skipEmptyRows = TRUE) |> head() #>          Date     value      word  bool  wordZ2 #> 7  2014-04-28 0.8390764 N-U-B-R-A FALSE FALSE-Z #> 8  2014-04-27 0.8863800 N-Z-P-S-Y  TRUE  TRUE-Z #> 9  2014-04-26 0.5741314 C-G-D-X-H  TRUE  TRUE-Z #> 10 2014-04-25 0.1366065      <NA> FALSE FALSE-Z #> 11 2014-04-24 0.3692582 B-K-A-O-W  TRUE  TRUE-Z #> 12 2014-04-23        NA H-P-G-O-K  TRUE  TRUE-Z"},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"skipemptycols---remove-empty-columns","dir":"Articles","previous_headings":"Importing data","what":"skipEmptyCols - remove empty columns","title":"openxlsx2 basic manual","text":"columns","code":"# erase empty Cols from dataset wb_to_df(xlsxFile, skipEmptyCols = TRUE) #>     Var1 Var2  Var3  Var4       Var5         Var6    Var7 #> 2   TRUE    1     1     a 2015-02-07 3209324 This #DIV/0! #> 3   TRUE   NA #NUM!     b 2015-02-06         <NA>    <NA> #> 4   TRUE    2  1.34     c 2015-02-05         <NA>   #NUM! #> 5  FALSE    2  <NA> #NUM!       <NA>         <NA>    <NA> #> 6  FALSE    3  1.56     e       <NA>         <NA>    <NA> #> 7  FALSE    1   1.7     f 2015-02-02         <NA>    <NA> #> 8     NA   NA  <NA>  <NA> 2015-02-01         <NA>    <NA> #> 9  FALSE    2    23     h 2015-01-31         <NA>    <NA> #> 10 FALSE    3  67.3     i 2015-01-30         <NA>    <NA> #> 11    NA    1   123  <NA> 2015-01-29         <NA>    <NA>"},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"rownames---keep-rownames-from-input","dir":"Articles","previous_headings":"Importing data","what":"rowNames - keep rownames from input","title":"openxlsx2 basic manual","text":"Sometimes data source might provide rownames well. case can openxlsx2 treat first column rowname","code":"# convert first row to rownames wb_to_df(xlsxFile, sheet = 3, dims = \"C6:G9\", rowNames = TRUE) #>                value      word  bool  wordZ2 #> 2014-04-28 0.8390764 N-U-B-R-A FALSE FALSE-Z #> 2014-04-27 0.8863800 N-Z-P-S-Y  TRUE  TRUE-Z #> 2014-04-26 0.5741314 C-G-D-X-H  TRUE  TRUE-Z"},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"types---convert-column-to-specific-type","dir":"Articles","previous_headings":"Importing data","what":"types - convert column to specific type","title":"openxlsx2 basic manual","text":"user know better software type expect worksheet, can provided via types. parameter takes named numeric. 0 character, 1 numeric 2 date","code":"# define type of the data.frame wb_to_df(xlsxFile, cols = c(1, 4), types = c(\"Var1\" = 0, \"Var3\" = 1)) #>     Var1   Var3 #> 2   TRUE   1.00 #> 3   TRUE    NaN #> 4   TRUE   1.34 #> 5  FALSE     NA #> 6  FALSE   1.56 #> 7  FALSE   1.70 #> 8   <NA>     NA #> 9  FALSE  23.00 #> 10 FALSE  67.30 #> 11  <NA> 123.00"},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"startrow---where-to-begin","dir":"Articles","previous_headings":"Importing data","what":"startRow - where to begin","title":"openxlsx2 basic manual","text":"Often creator worksheet used lot creativity data begin first row, instead begins somewhere else. define row begin reading, define via startRow parameter","code":"# start in row 5 wb_to_df(xlsxFile, startRow = 5, colNames = FALSE) #>        A  B  C      D     E          F  G  H #> 5  FALSE  2 NA     NA #NUM!       <NA> NA NA #> 6  FALSE  3 NA   1.56     e       <NA> NA NA #> 7  FALSE  1 NA   1.70     f 2015-02-02 NA NA #> 8     NA NA NA     NA  <NA> 2015-02-01 NA NA #> 9  FALSE  2 NA  23.00     h 2015-01-31 NA NA #> 10 FALSE  3 NA  67.30     i 2015-01-30 NA NA #> 11    NA  1 NA 123.00  <NA> 2015-01-29 NA NA"},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"na-strings---define-missing-values","dir":"Articles","previous_headings":"Importing data","what":"na.strings - define missing values","title":"openxlsx2 basic manual","text":"“#N/” string, often user faced custom missing values values interested. strings can passed character vector via na.strings","code":"# na string wb_to_df(xlsxFile, na.strings = \"\") #>     Var1 Var2 NA  Var3  Var4       Var5         Var6    Var7 #> 2   TRUE    1 NA     1     a 2015-02-07 3209324 This #DIV/0! #> 3   TRUE   NA NA #NUM!     b 2015-02-06         <NA>    #N/A #> 4   TRUE    2 NA  1.34     c 2015-02-05         <NA>   #NUM! #> 5  FALSE    2 NA  <NA> #NUM!       <NA>         <NA>    <NA> #> 6  FALSE    3 NA  1.56     e       <NA>         <NA>    <NA> #> 7  FALSE    1 NA   1.7     f 2015-02-02         <NA>    <NA> #> 8     NA   NA NA  <NA>  <NA> 2015-02-01         <NA>    <NA> #> 9  FALSE    2 NA    23     h 2015-01-31         <NA>    <NA> #> 10 FALSE    3 NA  67.3     i 2015-01-30         <NA>    <NA> #> 11    NA    1 NA   123  <NA> 2015-01-29         <NA>    <NA>"},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"importing-as-workbook","dir":"Articles","previous_headings":"Importing data","what":"Importing as workbook","title":"openxlsx2 basic manual","text":"addition importing directly xlsx xlsm files, openxlsx2 provides wbWorkbook class used importing modifying entire openxml files R. workbook class heart openxlsx2 probably reason reading manual first place. Importing file workbook looks like : additional options wb_load() provides internal use: sheet loads selected sheet workbook data_only reads data parts workbook ignores additional graphics pivot tables. functions create workbook objects can used read data, recommend end users use . Especially intend re-export workbook afterwards. workbook imported, provide several functions interact modify (wb_to_df() function mentioned works way imported workbook). possible add new sheets remove sheets, well add remove data. R-plots can inserted also style workbook can changed, new fonts, background colors number formats. wealth options explained man pages additional style vignette (vignettes follow).","code":"# the file we are going to load xlsxFile <- system.file(\"extdata\", \"loadExample.xlsx\", package = \"openxlsx2\") # loading the file into the workbook wb <- wb_load(file = xlsxFile)"},{"path":[]},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"exporting-data-frames-or-vectors","dir":"Articles","previous_headings":"Exporting data","what":"Exporting data frames or vectors","title":"openxlsx2 basic manual","text":"want export data frame R, can use write_xlsx() create xlsx file. file can tweaked . man page provides various options (explanation examples follow).","code":"write_xlsx(mtcars, \"mtcars.xlsx\")"},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"exporting-wbworkbooks","dir":"Articles","previous_headings":"Exporting data","what":"Exporting wbWorkbooks","title":"openxlsx2 basic manual","text":"Imported workbooks can saved xlsx xlsm files wrapper wb_save() wb$save(). functions take filename optional Overwrite option. latter set, optional guard provided check file want write already exists. careful, optional. default save file replace existing file. course, Windows, files locked (example, opened another process) replaced.","code":"# replace the existing file wb$save(\"mtcars.xlsx\")  # do not overwrite the exisisting file try(wb$save(\"mtcars.xlsx\", overwrite = FALSE))"},{"path":"/dev/articles/openxlsx2_basic_manual.html","id":"a-note-on-speed-and-memory-usage","dir":"Articles","previous_headings":"","what":"A note on speed and memory usage","title":"openxlsx2 basic manual","text":"current state openxlsx2 reasonably fast. , works well reasonably large input data reading writing. may work well data tests limits openxml specification. Things may slow R side things, performance usability depend speed size local operating system’s CPU memory. Note () loading, openxlsx2 usually needs read entire input file pugixml convert long data frame(s), wb_to_df() converts one long data frame two data frames construct output object (ii) adding data workbook, openxlsx2 reshapes input data frame long data frame stores workbook, writes entire worksheet pugixml file written complete. Applying cell styles, date conversions etc. slow process finally sheets zipped provide xlsx output. Therefore, faced unreasonably large dataset, either give enough time, use another package write xlsx output (openxlsx2 written intention working maximum memory efficiency), means use ways store data (binary file formats database). However, always happy improve, found way improve currently , please let us know open issue pull request.","code":""},{"path":"/dev/articles/openxlsx2_charts_manual.html","id":"section","dir":"Articles","previous_headings":"","what":"openxlsx2 charts manual","title":"openxlsx2 charts manual","text":"","code":"library(openxlsx2) # openxlsx2 >= 0.4 for mschart and rvg support  ## create a workbook wb <- wb_workbook()"},{"path":"/dev/articles/openxlsx2_charts_manual.html","id":"add-plot-to-workbook","dir":"Articles","previous_headings":"","what":"Add plot to workbook","title":"openxlsx2 charts manual","text":"can include image PNG JPEG format. Simply open device save output pass worksheet wb_add_image().","code":"myplot <- tempfile(fileext = \".jpg\") jpeg(myplot) print(plot(AirPassengers)) #> NULL dev.off() #> agg_png  #>       2  # Add basic plots to the workbook wb$add_worksheet(\"add_image\")$add_image(file = myplot)"},{"path":"/dev/articles/openxlsx2_charts_manual.html","id":"add-ggplot2-plot-to-workbook","dir":"Articles","previous_headings":"","what":"Add {ggplot2} plot to workbook","title":"openxlsx2 charts manual","text":"can include ggplot2 plots similar include openxlsx. Call plot first afterwards use wb_add_plot().","code":"if (requireNamespace(\"ggplot2\")) {  library(ggplot2)  print(ggplot(mtcars, aes(x = mpg, fill = as.factor(gear))) +   ggtitle(\"Distribution of Gas Mileage\") +   geom_density(alpha = I(.5)))  # Add ggplot to the workbook wb$add_worksheet(\"add_plot\")$   add_plot(width = 5, height = 3.5, fileType = \"png\", units = \"in\")  } #> Loading required namespace: ggplot2 #> Loading required namespace: testthat"},{"path":"/dev/articles/openxlsx2_charts_manual.html","id":"add-plot-via-rvg","dir":"Articles","previous_headings":"","what":"Add plot via {rvg}","title":"openxlsx2 charts manual","text":"want vector graphics can modified spreadsheet software dml_xlsx() device comes handy. can pass output via wb_add_drawing().","code":"if (requireNamespace(\"ggplot2\") && requireNamespace(\"rvg\")) {  library(rvg)  ## create rvg example tmp <- tempfile(fileext = \".xml\") dml_xlsx(file =  tmp, fonts = list(sans = \"Bradley Hand\")) print(ggplot(data = iris,        mapping = aes(x = Sepal.Length, y = Petal.Width)) +   geom_point() + labs(title = \"With font Bradley Hand\") +   theme_minimal(base_family = \"sans\", base_size = 18)) dev.off()  # Add rvg to the workbook wb$add_worksheet(\"add_drawing\")$   add_drawing(xml = tmp)$   add_drawing(xml = tmp, dims = NULL)  } #> Loading required namespace: rvg"},{"path":"/dev/articles/openxlsx2_charts_manual.html","id":"add-mschart-plots","dir":"Articles","previous_headings":"","what":"Add {mschart} plots","title":"openxlsx2 charts manual","text":"want native open xml charts, look mschart. Create one chart files pass workbook wb_add_mschart(). two options possible. 1. Either default mschart output identical one officer. Passing data object let mschart prepare data. case wb_add_mschart() add new data region. 2. Passing wb_data() object mschart. object contains references data worksheet allows using data “”.","code":"if (requireNamespace(\"mschart\")) {  library(mschart) # mschart >= 0.4 for openxlsx2 support  ## create chart from mschart object (this creates new input data) mylc <- ms_linechart(   data = browser_ts,   x = \"date\",   y = \"freq\",   group = \"browser\" )  wb$add_worksheet(\"add_mschart\")$add_mschart(dims = \"A10:G25\", graph = mylc)   ## create chart referencing worksheet cells as input # write data starting at B2 wb$add_worksheet(\"add_mschart - wb_data\")$   add_data(x = mtcars, dims = \"B2\")$   add_data(x = data.frame(name = rownames(mtcars)), dims = \"A2\")  # create wb_data object this will tell this mschart # from this PR to create a file corresponding to openxlsx2 dat <- wb_data(wb, dims = \"A2:G10\")  # create a few mscharts scatter_plot <- ms_scatterchart(   data = dat,   x = \"mpg\",   y = c(\"disp\", \"hp\") )  bar_plot <- ms_barchart(   data = dat,   x = \"name\",   y = c(\"disp\", \"hp\") )  area_plot <- ms_areachart(   data = dat,   x = \"name\",   y = c(\"disp\", \"hp\") )  line_plot <- ms_linechart(   data = dat,   x = \"name\",   y = c(\"disp\", \"hp\"),   labels = c(\"disp\", \"hp\") )  # add the charts to the data wb <- wb %>%   wb_add_mschart(dims = \"F4:L20\", graph = scatter_plot) %>%   wb_add_mschart(dims = \"F21:L37\", graph = bar_plot) %>%   wb_add_mschart(dims = \"M4:S20\", graph = area_plot) %>%   wb_add_mschart(dims = \"M21:S37\", graph = line_plot)  # add chartsheet wb <- wb %>%   wb_add_chartsheet() %>%   wb_add_mschart(graph = scatter_plot)  } #> Loading required namespace: mschart"},{"path":"/dev/articles/openxlsx2_formulas_manual.html","id":"simple-formulas","dir":"Articles","previous_headings":"","what":"Simple formulas","title":"openxlsx2 formulas manual","text":"","code":"wb <- wb_workbook()$add_worksheet()$   add_data(x = head(cars))$   add_formula(dims = \"D2\", x = \"SUM(A2, B2)\")$   add_formula(dims = \"D3\", x = \"A2 + B2\") # wb$open()"},{"path":"/dev/articles/openxlsx2_formulas_manual.html","id":"array-formulas","dir":"Articles","previous_headings":"","what":"Array formulas","title":"openxlsx2 formulas manual","text":"","code":"wb <- wb_workbook()$add_worksheet()$   add_data(x = head(cars))$   add_formula(dims = \"C2:C7\", x = \"A2:A7 * B2:B7\", array = TRUE) # wb$open()"},{"path":"/dev/articles/openxlsx2_formulas_manual.html","id":"array-formulas-creating-multiple-fields","dir":"Articles","previous_headings":"","what":"Array formulas creating multiple fields","title":"openxlsx2 formulas manual","text":"example want use MMULT() creates matrix multiplication. requires us write array formula specify region output written . Similar coefficients linear regression","code":"m1 <- matrix(1:6, ncol = 2) m2 <- matrix(7:12, nrow = 2)  wb <- wb_workbook()$add_worksheet()$   add_data(x = m1, startCol = 1)$   add_data(x = m2, startCol = 4)$   add_formula(dims = \"H2:J4\", x = \"MMULT(A2:B4, D2:F3)\", array = TRUE) # wb$open() # we expect to find this in D1:E1 coef(lm(head(cars))) #> (Intercept)        dist  #>   5.2692308   0.1153846 wb <- wb_workbook()$add_worksheet()$   add_data(x = head(cars))$   add_formula(dims = \"D2:E2\", x = \"LINEST(A2:A7, B2:B7, TRUE)\", array = TRUE) # wb$open()"},{"path":"/dev/articles/openxlsx2_formulas_manual.html","id":"cm-formulas","dir":"Articles","previous_headings":"","what":"cm formulas","title":"openxlsx2 formulas manual","text":"Similar array formulas, cell metadata formulas hide user array formulas. Using implemented openxlsx2 > 0.6.1:","code":"wb <- wb_workbook()$add_worksheet()$   add_data(x = head(cars))$   add_formula(dims = \"D2\", x = 'SUM(ABS(A2:A7))', cm = TRUE) #> Warning in write_data2(wb = wb, sheet = sheet, data = x, name = name, colNames #> = colNames, : modifications with cm formulas are experimental. use at own risk # wb$open()"},{"path":[]},{"path":"/dev/articles/openxlsx2_formulas_manual.html","id":"datatable-formula-differences","dir":"Articles","previous_headings":"dataTable formulas1","what":"dataTable formula differences","title":"openxlsx2 formulas manual","text":"Given basic table like , similarly basic formula “Total_Sales” “=A2 * C2” row value changing row. implementation formula using wb_add_formula() look (taken current documentation) lets say ’ve read data assigned table “company_sales” create workbook, worksheet, use wb_add_data_table(). One advantages open xml dataTable syntax don’t specify row numbers columns letters. table also grows dynamically, adding new rows new data appended extending formulas new rows. dataTable named columns can use instead letters. writing formulas within dataTable use following syntax [@[column_name]] reference current row. “Total_Sales” formula written open xml dataTable look like ; =[@[SalesPrice]] * [@[SalesQuantity]] writing formula outside dataTable reference table name. case lets say table name ‘daily_sales’ =daily_sales[@[SalesPrice]] * daily_sales[@[SalesQuantity]] However, pass text formula written cause error syntax open xml requires selecting current row different. open xml dataTable formula looks like : Now can see open xml replaces [@[SalesPrice]] daily_sales[[#Row],[SalesPrice]] must use syntax writing formulas dataTable open workbook view table created can see formula worked. can also see replaced [#Row] @. completion, formula wrote appears ;","code":"## creating example data example_data <- data.frame(     SalesPrice = c(20, 30, 40),     COGS = c(5, 11, 13),     SalesQuantity = c(1, 2, 3) )  ## write in the formula example_data$Total_Sales  <- paste(paste0(\"A\", 1:3 + 1L), paste0(\"C\", 1:3 + 1L), sep = \" + \") ## add the formula class class(example_data$Total_Sales) <- c(class(example_data$Total_Sales), \"formula\")  ## write a workbook wb <- wb_workbook()$   add_worksheet(\"Total Sales\")$   add_data_table(x = example_data) <calculatedColumnFormula>   daily_sales[[#This Row],[SalesPrice]]*daily_sales[[#ThisRow],[SalesQuantity]] <\/calculatedColumnFormula> ## Because we want the `dataTable` formula to propagate down the entire column of the data ## we can assign the formula by itself to any column and allow that single string to be repeated for each row.  ## creating example data example_data <-   data.frame(     SalesPrice = c(20, 30, 40),     COGS = c(5, 11, 13),     SalesQuantity = c(1, 2, 3)   )  ## base R method example_data$GrossProfit       <- \"daily_sales[[#This Row],[SalesPrice]] - daily_sales[[#This Row],[COGS]]\" example_data$Total_COGS        <- \"daily_sales[[#This Row],[COGS]] * daily_sales[[#This Row],[SalesQuantity]]\" example_data$Total_Sales       <- \"daily_sales[[#This Row],[SalesPrice]] * daily_sales[[#This Row],[SalesQuantity]]\" example_data$Total_GrossProfit <- \"daily_sales[[#This Row],[Total_Sales]] - daily_sales[[#This Row],[Total_COGS]]\"  class(example_data$GrossProfit)       <- c(class(example_data$GrossProfit),       \"formula\") class(example_data$Total_COGS)        <- c(class(example_data$Total_COGS),        \"formula\") class(example_data$Total_Sales)       <- c(class(example_data$Total_Sales),       \"formula\") class(example_data$Total_GrossProfit) <- c(class(example_data$Total_GrossProfit), \"formula\") wb$   add_worksheet('Daily Sales')$   add_data_table(     x          = example_data,     tableStyle = \"TableStyleMedium2\",     tableName  = 'daily_sales'   ) #### sum dataTable examples wb$add_worksheet('sum_examples')  ### Note: dataTable formula do not need to be used inside of dataTables. dataTable formula are for referencing the data within the dataTable. sum_examples <- data.frame(     description = c(\"sum_SalesPrice\", \"sum_product_Price_Quantity\"),     formula = c(       \"sum(daily_sales[[#Data],[SalesPrice]])\",       \"sum(daily_sales[[#Data],[SalesPrice]] * daily_sales[[#Data],[SalesQuantity]])\"     )   ) class(sum_examples$formula) <- c(class(sum_examples$formula), \"formula\")  wb$add_data(x = sum_examples)  #### dataTable referencing wb$add_worksheet('dt_references')  ### Adding the headers by themselves. wb$add_formula(   x = \"daily_sales[[#Headers],[SalesPrice]:[Total_GrossProfit]]\", )  ### Adding the raw data by reference and selecting them directly. wb$add_formula(   x = \"daily_sales[[#Data],[SalesPrice]:[Total_GrossProfit]]\",   startRow = 2 ) # wb$open()"},{"path":[]},{"path":"/dev/articles/openxlsx2_style_manual.html","id":"colors-text-rotation-and-number-formats","dir":"Articles","previous_headings":"Styling showcase","what":"Colors, text rotation and number formats","title":"openxlsx2 style manual","text":"show two ways create styled tables openxlsx2 one using high level functions style worksheet areas one using bare metal approach creating identical table. show ways create styles openxlsx2 show build functions create functions. example , increased column width.","code":""},{"path":"/dev/articles/openxlsx2_style_manual.html","id":"the-quick-way-using-high-level-functions","dir":"Articles","previous_headings":"Styling showcase > Colors, text rotation and number formats","what":"the quick way: using high level functions","title":"openxlsx2 style manual","text":"","code":"# add some dummy data set.seed(123) mat <- matrix(rnorm(28 * 28, mean = 44444, sd = 555), ncol = 28) colnames(mat) <- make.names(seq_len(ncol(mat))) border_col <- wb_color(theme = 1) border_sty <- \"thin\"  # prepare workbook with data and formated first row wb <- wb_workbook() %>%   wb_add_worksheet(\"test\") %>%   wb_add_data(x = mat) %>%   wb_add_border(dims = \"A1:AB1\",     top_color = border_col, top_border = border_sty,     bottom_color = border_col, bottom_border = border_sty,     left_color = border_col, left_border = border_sty,     right_color = border_col, right_border = border_sty,     inner_hcolor = border_col, inner_hgrid = border_sty   ) %>%   wb_add_fill(dims = \"A1:AB1\", color = wb_color(hex = \"FF334E6F\")) %>%   wb_add_font(dims = \"A1:AB1\", name = \"Arial\", bold = TRUE, color = wb_color(hex = \"FFFFFFFF\"), size = 20) %>%   wb_add_cell_style(dims = \"A1:AB1\", horizontal = \"center\", textRotation = 45)  # create various number formats x <- c(   0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,   37, 38, 39, 40, 45, 46, 47, 48, 49 )  # apply the styles for (i in seq_along(x)) {   cell <- sprintf(\"%s2:%s29\", int2col(i), int2col(i))   wb <- wb %>% wb_add_numfmt(dims = cell, numfmt = x[i]) }  # wb$open()"},{"path":"/dev/articles/openxlsx2_style_manual.html","id":"the-long-way-using-bare-metal-functions","dir":"Articles","previous_headings":"Styling showcase > Colors, text rotation and number formats","what":"the long way: using bare metal functions","title":"openxlsx2 style manual","text":"","code":"# create workbook wb <- wb_workbook() %>% wb_add_worksheet(\"test\")  # add some dummy data to the worksheet set.seed(123) mat <- matrix(rnorm(28 * 28, mean = 44444, sd = 555), ncol = 28) colnames(mat) <- make.names(seq_len(ncol(mat))) wb$add_data(x = mat, colNames = TRUE)  # create a border style and assign it to the workbook black <- wb_color(hex = \"FF000000\") new_border <- create_border(   bottom = \"thin\", bottom_color = black,   top = \"thin\", top_color = black,   left = \"thin\", left_color = black,   right = \"thin\", right_color = black ) wb$styles_mgr$add(new_border, \"new_border\")   # create a fill style and assign it to the workbook new_fill <- create_fill(patternType = \"solid\", fgColor = wb_color(hex = \"FF334E6F\")) wb$styles_mgr$add(new_fill, \"new_fill\")  # create a font style and assign it to the workbook new_font <- create_font(sz = 20, name = \"Arial\", b = TRUE, color = wb_color(hex = \"FFFFFFFF\")) wb$styles_mgr$add(new_font, \"new_font\")  # create a new cell style, that uses the fill, the font and the border style new_cellxfs <- create_cell_style(   numFmtId = 0,   horizontal = \"center\",   textRotation = 45,   fillId = wb$styles_mgr$get_fill_id(\"new_fill\"),   fontId = wb$styles_mgr$get_font_id(\"new_font\"),   borderId = wb$styles_mgr$get_border_id(\"new_border\") ) # assign this style to the workbook wb$styles_mgr$add(new_cellxfs, \"new_styles\")  # assign the new cell style to the header row of our data set cell <- sprintf(\"A1:%s1\", int2col(nrow(mat))) wb <- wb %>% wb_set_cell_style(   dims = cell,   style = wb$styles_mgr$get_xf_id(\"new_styles\") )  ## style the cells with some builtin format codes (no new numFmt entry is needed) # add builtin style ids x <- c(   1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,   37, 38, 39, 40, 45, 46, 47, 48, 49 )  # create styles new_cellxfs <- create_cell_style(numFmtId = x, horizontal = \"center\")  # assign the styles to the workbook for (i in seq_along(x)) {   wb$styles_mgr$add(new_cellxfs[i], paste0(\"new_style\", i)) }  # new styles are 1:28 new_styles <- wb$styles_mgr$get_xf() for (i in as.integer(new_styles$id[new_styles$name %in% paste0(\"new_style\", seq_along(x))])) {   cell <- sprintf(\"%s2:%s29\", int2col(i), int2col(i))   wb <- wb %>% wb_set_cell_style(dims = cell, style = i) }  # assign a custom tabColor wb$worksheets[[1]]$sheetPr <- xml_node_create(   \"sheetPr\",   xml_children = xml_node_create(     \"tabColor\",     xml_attributes = wb_color(hex = \"FF00FF00\")   ) )  # # look at the beauty you've created # wb_open(wb)"},{"path":"/dev/articles/openxlsx2_style_manual.html","id":"working-with-number-formats","dir":"Articles","previous_headings":"","what":"Working with number formats","title":"openxlsx2 style manual","text":"Per default openxlsx2 pick number formats selected R classes.","code":""},{"path":"/dev/articles/openxlsx2_style_manual.html","id":"numfmts","dir":"Articles","previous_headings":"Working with number formats","what":"numfmts","title":"openxlsx2 style manual","text":"","code":"## Create Workbook object and add worksheets wb <- wb_workbook() wb$add_worksheet(\"S1\") wb$add_worksheet(\"S2\")  df <- data.frame(   \"Date\" = Sys.Date() - 0:19,   \"T\" = TRUE, \"F\" = FALSE,   \"Time\" = Sys.time() - 0:19 * 60 * 60,   \"Cash\" = paste(\"$\", 1:20), \"Cash2\" = 31:50,   \"hLink\" = \"https://CRAN.R-project.org/\",   \"Percentage\" = seq(0, 1, length.out = 20),   \"TinyNumbers\" = runif(20) / 1E9, stringsAsFactors = FALSE )  ## openxlsx will apply default Excel styling for these classes class(df$Cash) <- c(class(df$Cash), \"currency\") class(df$Cash2) <- c(class(df$Cash2), \"accounting\") class(df$hLink) <- \"hyperlink\" class(df$Percentage) <- c(class(df$Percentage), \"percentage\") class(df$TinyNumbers) <- c(class(df$TinyNumbers), \"scientific\")  wb$add_data(\"S1\", x = df, startRow = 4, rowNames = FALSE) wb$add_data_table(\"S2\", x = df, startRow = 4, rowNames = FALSE)"},{"path":"/dev/articles/openxlsx2_style_manual.html","id":"numfmts2","dir":"Articles","previous_headings":"Working with number formats","what":"numfmts2","title":"openxlsx2 style manual","text":"addition, can set style picked using openxlsx2 options.","code":"wb <- wb_workbook() wb <- wb_add_worksheet(wb, \"test\")  options(\"openxlsx2.dateFormat\" = \"yyyy\") options(\"openxlsx2.datetimeFormat\" = \"yyyy-mm-dd\") options(\"openxlsx2.numFmt\" = \"€ #.0\")  df <- data.frame(   \"Date\" = Sys.Date() - 0:19,   \"T\" = TRUE, \"F\" = FALSE,   \"Time\" = Sys.time() - 0:19 * 60 * 60,   \"Cash\" = paste(\"$\", 1:20), \"Cash2\" = 31:50,   \"hLink\" = \"https://CRAN.R-project.org/\",   \"Percentage\" = seq(0, 1, length.out = 20),   \"TinyNumbers\" = runif(20) / 1E9, stringsAsFactors = FALSE,   \"numeric\" = 1 )  ## openxlsx will apply default Excel styling for these classes class(df$Cash) <- c(class(df$Cash), \"currency\") class(df$Cash2) <- c(class(df$Cash2), \"accounting\") class(df$hLink) <- \"hyperlink\" class(df$Percentage) <- c(class(df$Percentage), \"percentage\") class(df$TinyNumbers) <- c(class(df$TinyNumbers), \"scientific\")  wb$add_data(\"test\", df)"},{"path":[]},{"path":"/dev/articles/openxlsx2_style_manual.html","id":"wb_set_col_widths","dir":"Articles","previous_headings":"Modifying the column widths","what":"wb_set_col_widths","title":"openxlsx2 style manual","text":"","code":"wb <- wb_workbook() %>%   wb_add_worksheet() %>%   wb_add_data(x = mtcars, rowNames = TRUE)  cols <- 1:12 wb <- wb %>% wb_set_col_widths(cols = cols, widths = \"auto\")"},{"path":[]},{"path":"/dev/articles/openxlsx2_style_manual.html","id":"add-borders","dir":"Articles","previous_headings":"Adding borders","what":"add borders","title":"openxlsx2 style manual","text":"","code":"wb <- wb_workbook() # full inner grid wb$add_worksheet(\"S1\", gridLines = FALSE)$add_data(x = mtcars) wb$add_border(   dims = \"A2:K33\",   inner_hgrid = \"thin\", inner_hcolor = wb_color(hex = \"FF808080\"),   inner_vgrid = \"thin\", inner_vcolor = wb_color(hex = \"FF808080\") ) # only horizontal grid wb$add_worksheet(\"S2\", gridLines = FALSE)$add_data(x = mtcars) wb$add_border(dims = \"A2:K33\", inner_hgrid = \"thin\", inner_hcolor = wb_color(hex = \"FF808080\")) # only vertical grid wb$add_worksheet(\"S3\", gridLines = FALSE)$add_data(x = mtcars) wb$add_border(dims = \"A2:K33\", inner_vgrid = \"thin\", inner_vcolor = wb_color(hex = \"FF808080\")) # no inner grid wb$add_worksheet(\"S4\", gridLines = FALSE)$add_data(x = mtcars) wb$add_border(\"S4\", dims = \"A2:K33\")"},{"path":"/dev/articles/openxlsx2_style_manual.html","id":"styled-table","dir":"Articles","previous_headings":"Adding borders","what":"styled table","title":"openxlsx2 style manual","text":"show two ways create styled tables openxlsx2 one using high level functions style worksheet areas one using bare metal approach creating identical table.","code":""},{"path":"/dev/articles/openxlsx2_style_manual.html","id":"the-quick-way-using-high-level-functions-1","dir":"Articles","previous_headings":"Adding borders > styled table","what":"the quick way: using high level functions","title":"openxlsx2 style manual","text":"","code":"# add some dummy data to the worksheet mat <- matrix(1:4, ncol = 2, nrow = 2) colnames(mat) <- make.names(seq_len(ncol(mat)))  wb <- wb_workbook() %>%   wb_add_worksheet(\"test\") %>%   wb_add_data(x = mat, colNames = TRUE, startCol = 2, startRow = 2) %>%   # center first row   wb_add_cell_style(dims = \"B2:C2\", horizontal = \"center\") %>%   # add border for first row   wb_add_border(     dims = \"B2:C2\",     bottom_color = wb_color(theme = 1), bottom_border = \"thin\",     top_color = wb_color(theme = 1), top_border = \"double\",     left_border = NULL, right_border = NULL   ) %>%   # add border for last row   wb_add_border(     dims = \"B4:C4\",     bottom_color = wb_color(theme = 1), bottom_border = \"double\",     top_border = NULL, left_border = NULL, right_border = NULL   )"},{"path":"/dev/articles/openxlsx2_style_manual.html","id":"the-long-way-creating-everything-from-the-bone","dir":"Articles","previous_headings":"Adding borders > styled table","what":"the long way: creating everything from the bone","title":"openxlsx2 style manual","text":"","code":"# add some dummy data to the worksheet mat <- matrix(1:4, ncol = 2, nrow = 2) colnames(mat) <- make.names(seq_len(ncol(mat)))  wb <- wb_workbook() %>%   wb_add_worksheet(\"test\") %>%   wb_add_data(x = mat, startCol = 2, startRow = 2)  # create a border style and assign it to the workbook black <- wb_color(hex = \"FF000000\") top_border <- create_border(   top = \"double\", top_color = black,   bottom = \"thin\", bottom_color = black )  bottom_border <- create_border(bottom = \"double\", bottom_color = black)  wb$styles_mgr$add(top_border, \"top_border\") wb$styles_mgr$add(bottom_border, \"bottom_border\")  # create a new cell style, that uses the fill, the font and the border style top_cellxfs <- create_cell_style(   numFmtId = 0,   horizontal = \"center\",   borderId = wb$styles_mgr$get_border_id(\"top_border\") ) bottom_cellxfs <- create_cell_style(   numFmtId = 0,   borderId = wb$styles_mgr$get_border_id(\"bottom_border\") )  # assign this style to the workbook wb$styles_mgr$add(top_cellxfs, \"top_styles\") wb$styles_mgr$add(bottom_cellxfs, \"bottom_styles\")  # assign the new cell style to the header row of our data set cell <- \"B2:C2\" wb <- wb %>% wb_set_cell_style(dims = cell, style = wb$styles_mgr$get_xf_id(\"top_styles\")) cell <- \"B4:C4\" wb <- wb %>% wb_set_cell_style(dims = cell, style = wb$styles_mgr$get_xf_id(\"bottom_styles\"))"},{"path":"/dev/articles/openxlsx2_style_manual.html","id":"use-workbook-colors-and-modify-them","dir":"Articles","previous_headings":"","what":"Use workbook colors and modify them","title":"openxlsx2 style manual","text":"loop apply tint attribute fill color Tint variations theme colors.","code":"wb <- wb_workbook() %>% wb_add_worksheet(\"S1\")  tints <- seq(-0.9, 0.9, by = 0.1)  for (i in 0:9) {   for (tnt in tints) {     col <- paste0(int2col(i + 1), which(tints %in% tnt))      if (tnt == 0) {       wb <- wb %>% wb_add_fill(dims = col, color = wb_color(theme = i))     } else {       wb <- wb %>% wb_add_fill(dims = col, color = wb_color(theme = i, tint = tnt))     }   } }"},{"path":"/dev/articles/openxlsx2_style_manual.html","id":"copy-cell-styles","dir":"Articles","previous_headings":"","what":"Copy cell styles","title":"openxlsx2 style manual","text":"possible copy styles several cells . following example, styles cells formatted workbook applied previously empty cell range. careful though, wb_get_cell_style() returns styles, make sure copy-copy-dimensions match meaningful way.","code":"wb <- wb_load(system.file(\"extdata\", \"oxlsx2_sheet.xlsx\", package = \"openxlsx2\")) %>%   wb_set_cell_style(1, \"A30:G35\", wb_get_cell_style(., 1, \"A10:G15\")) # wb_open(wb)"},{"path":"/dev/articles/openxlsx2_style_manual.html","id":"style-strings","dir":"Articles","previous_headings":"","what":"Style strings","title":"openxlsx2 style manual","text":"Using fmt_txt() possible style strings independently cell containing string. shown possible combine multiple styles together longer string. even possible use fmt_txt() na.strings:","code":"txt <- paste(   fmt_txt(\"Embracing the full potential of \"),   fmt_txt(\"openxlsx2\", bold = TRUE, size = 16),   fmt_txt(\" with \"),   fmt_txt(\"fmt_txt()\", font = \"Courier\"),   fmt_txt(\" !\") ) wb <- wb_workbook()$add_worksheet()$add_data(x = txt) df <- mtcars df[df < 4] <- NA  na_red <- fmt_txt(\"N/A\", color = wb_color(\"red\"), italic = TRUE, bold = TRUE)  wb <- wb_workbook()$add_worksheet()$add_data(x = df, na.strings = na_red)"},{"path":"/dev/articles/openxlsx2_style_manual.html","id":"create-custom-table-styles","dir":"Articles","previous_headings":"","what":"Create custom table styles","title":"openxlsx2 style manual","text":"create_tablestyle() possible create table styles. function uses create_dxfs_style() (just like spreadsheet software ). Therefore, quite user-friendly. following example shows function creates red table style. various dxfs styles must created assigned workbook (similar styles used conditional formatting). create_tablestyle() styles assigned table style elements. table style created, must also assigned workbook. can use workbook like table style.","code":"# a red table style dx0 <- create_dxfs_style(   border = TRUE,   left_color = wb_color(\"red\"),   right_color = NULL, right_style = NULL,   top_color = NULL, top_style = NULL,   bottom_color = NULL, bottom_style = NULL )  dx1 <- create_dxfs_style(   border = TRUE,   left_color = wb_color(\"red\"),   right_color = NULL, right_style = NULL,   top_color = NULL, top_style = NULL,   bottom_color = NULL, bottom_style = NULL )  dx2 <- create_dxfs_style(   border = TRUE,   top_color = wb_color(\"red\"),   left_color = NULL, left_style = NULL,   right_color = NULL, right_style = NULL,   bottom_color = NULL, bottom_style = NULL )  dx3 <- create_dxfs_style(   border = TRUE,   top_color = wb_color(\"red\"),   left_color = NULL, left_style = NULL,   right_color = NULL, right_style = NULL,   bottom_color = NULL, bottom_style = NULL )  dx4 <- create_dxfs_style(   text_bold = TRUE )  dx5 <- create_dxfs_style(   text_bold = TRUE )  dx6 <- create_dxfs_style(   font_color = wb_color(\"red\"),   text_bold = TRUE,   border = TRUE,   top_style = \"double\",   left_color = NULL, left_style = NULL,   right_color = NULL, right_style = NULL,   bottom_color = NULL, bottom_style = NULL )  dx7 <- create_dxfs_style(   font_color = wb_color(\"white\"),   text_bold = TRUE,   bgFill = wb_color(\"red\"),   fgColor = wb_color(\"red\") )  dx8 <- create_dxfs_style(   border = TRUE,   left_color = wb_color(\"red\"),   top_color = wb_color(\"red\"),   right_color = wb_color(\"red\"),   bottom_color = wb_color(\"red\") )   wb <- wb_workbook() %>%   wb_add_worksheet(gridLines = FALSE)  wb$add_style(dx0) wb$add_style(dx1) wb$add_style(dx2) wb$add_style(dx3) wb$add_style(dx4) wb$add_style(dx5) wb$add_style(dx6) wb$add_style(dx7) wb$add_style(dx8)  # finally create the table xml <- create_tablestyle(   name               = \"red_table\",   wholeTable         = wb$styles_mgr$get_dxf_id(\"dx8\"),   headerRow          = wb$styles_mgr$get_dxf_id(\"dx7\"),   totalRow           = wb$styles_mgr$get_dxf_id(\"dx6\"),   firstColumn        = wb$styles_mgr$get_dxf_id(\"dx5\"),   lastColumn         = wb$styles_mgr$get_dxf_id(\"dx4\"),   firstRowStripe     = wb$styles_mgr$get_dxf_id(\"dx3\"),   secondRowStripe    = wb$styles_mgr$get_dxf_id(\"dx2\"),   firstColumnStripe  = wb$styles_mgr$get_dxf_id(\"dx1\"),   secondColumnStripe = wb$styles_mgr$get_dxf_id(\"dx0\") )   wb$add_style(xml)  # create a table and apply the custom style wb <- wb %>%   wb_add_data_table(x = mtcars, tableStyle = \"red_table\")"},{"path":"/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jordan Mark Barbone. Author. Jan Marvin Garbuszus. Author, maintainer. openxlsx authors. Copyright holder.            openxlsx package Arseny Kapoulkine. Contributor, copyright holder.            Author included pugixml code","code":""},{"path":"/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"(2023). openxlsx2: Read, Write Edit 'xlsx' Files. R package version 0.7.0.9000. URL https://github.com/JanMarvin/openxlsx2.","code":"@Manual{,   title = {openxlsx2: Read, Write and Edit 'xlsx' Files},   year = {2023},   note = {R package version 0.7.0.9000},   url = {https://github.com/JanMarvin/openxlsx2}, }"},{"path":"/dev/index.html","id":"openxlsx2","dir":"","previous_headings":"","what":"Read, Write and Edit xlsx Files","title":"Read, Write and Edit xlsx Files","text":"R package modern reinterpretation widely used popular openxlsx package. Similar predecessor, simplifies creation xlsx files providing clean interface writing, designing editing worksheets. Based powerful XML library focusing modern programming flows pipes chains, openxlsx2 allows break many new ground. Even though project already well progressed supports features known appreciated predecessor, may still open gaps one place. quick warning: stable version 1.0 may still changes API.","code":""},{"path":"/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Read, Write and Edit xlsx Files","text":"can install stable version openxlsx2 : can install development version openxlsx2 GitHub : r-universe :","code":"install.packages('openxlsx2') # install.packages(\"remotes\") remotes::install_github(\"JanMarvin/openxlsx2\") # Enable repository from janmarvin options(repos = c(   janmarvin = 'https://janmarvin.r-universe.dev',   CRAN = 'https://cloud.r-project.org')) # Download and install openxlsx2 in R install.packages('openxlsx2')"},{"path":"/dev/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Read, Write and Edit xlsx Files","text":"openxlsx2 aims swiss knife working openxml spreadsheet formats xlsx xlsm (formats spreadsheet software supported). offer two different variants work openxlsx2. first one simply work R objects. possible read (read_xlsx()) write (write_xlsx()) data files. offer number options commands support various features openxml format, including reading writing named ranges tables. Furthermore, several ways read certain information openxml spreadsheet without opened spreadsheet software , e.g. get contained sheet names tables. second variant openxlsx2 offers work called wbWorkbook objects. openxml file read corresponding wbWorkbook object (wb_load()) new one created (wb_workbook()). Afterwards object can modified using various functions. example, worksheets can added removed, layout cells entire worksheets can changed, cells can modified (overwritten rewritten). Afterwards wbWorkbook objects can written openxml files processed suitable spreadsheet software. Many examples work openxlsx2 manual pages vignettes. can find :","code":"vignette(package = \"openxlsx2\")"},{"path":"/dev/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Read, Write and Edit xlsx Files","text":"basic example shows solve common problem:","code":"library(openxlsx2) # read xlsx or xlsm files path <- system.file(\"extdata/readTest.xlsx\", package = \"openxlsx2\") read_xlsx(path) #>     Var1 Var2 NA  Var3  Var4       Var5         Var6    Var7 #> 2   TRUE    1 NA     1     a 2015-02-07 3209324 This #DIV/0! #> 3   TRUE   NA NA #NUM!     b 2015-02-06         <NA>    <NA> #> 4   TRUE    2 NA  1.34     c 2015-02-05         <NA>   #NUM! #> 5  FALSE    2 NA  <NA> #NUM!       <NA>         <NA>    <NA> #> 6  FALSE    3 NA  1.56     e       <NA>         <NA>    <NA> #> 7  FALSE    1 NA   1.7     f 2015-02-02         <NA>    <NA> #> 8     NA   NA NA  <NA>  <NA> 2015-02-01         <NA>    <NA> #> 9  FALSE    2 NA    23     h 2015-01-31         <NA>    <NA> #> 10 FALSE    3 NA  67.3     i 2015-01-30         <NA>    <NA> #> 11    NA    1 NA   123  <NA> 2015-01-29         <NA>    <NA>  # or import workbooks wb <- wb_load(path) wb #> A Workbook object. #>   #> Worksheets: #>  Sheets: Sheet1 Sheet2 Sheet 3 Sheet 4 Sheet 5 Sheet 6 1 11 111 1111 11111 111111  #>  Write order: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12  # read a data frame wb_to_df(wb) #>     Var1 Var2 NA  Var3  Var4       Var5         Var6    Var7 #> 2   TRUE    1 NA     1     a 2015-02-07 3209324 This #DIV/0! #> 3   TRUE   NA NA #NUM!     b 2015-02-06         <NA>    <NA> #> 4   TRUE    2 NA  1.34     c 2015-02-05         <NA>   #NUM! #> 5  FALSE    2 NA  <NA> #NUM!       <NA>         <NA>    <NA> #> 6  FALSE    3 NA  1.56     e       <NA>         <NA>    <NA> #> 7  FALSE    1 NA   1.7     f 2015-02-02         <NA>    <NA> #> 8     NA   NA NA  <NA>  <NA> 2015-02-01         <NA>    <NA> #> 9  FALSE    2 NA    23     h 2015-01-31         <NA>    <NA> #> 10 FALSE    3 NA  67.3     i 2015-01-30         <NA>    <NA> #> 11    NA    1 NA   123  <NA> 2015-01-29         <NA>    <NA>  # and save temp <- temp_xlsx() if (interactive()) wb_save(wb, temp)  ## or create one yourself wb <- wb_workbook() # add a worksheet wb$add_worksheet(\"sheet\") # add some data wb$add_data(\"sheet\", cars) # open it in your default spreadsheet software if (interactive()) wb$open()"},{"path":"/dev/index.html","id":"authors-and-contributions","dir":"","previous_headings":"","what":"Authors and contributions","title":"Read, Write and Edit xlsx Files","text":"full list authors made package possible greatful, please see: feel like included list, please let us know. something contribute, welcome. something working expected, open issues solved issue, open pull request. Please respectful aware volunteers fun unpaid free time. work problems time need.","code":"system.file(\"AUTHORS\", package = \"openxlsx2\")"},{"path":"/dev/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Read, Write and Edit xlsx Files","text":"package licensed MIT license based openxlsx (Alexander Walker Philipp Schauberger; COPYRIGHT 2014-2022) pugixml (Arseny Kapoulkine; COPYRIGHT 2006-2022). released MIT license.","code":""},{"path":"/dev/reference/Hyperlink.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new hyperlink object — wb_hyperlink","title":"Create a new hyperlink object — wb_hyperlink","text":"Create new hyperlink object","code":""},{"path":"/dev/reference/Hyperlink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new hyperlink object — wb_hyperlink","text":"","code":"wb_hyperlink()"},{"path":"/dev/reference/as_xml.html","id":null,"dir":"Reference","previous_headings":"","what":"loads character string to pugixml and returns an externalptr — as_xml","title":"loads character string to pugixml and returns an externalptr — as_xml","text":"loads character string pugixml returns externalptr","code":""},{"path":"/dev/reference/as_xml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"loads character string to pugixml and returns an externalptr — as_xml","text":"","code":"as_xml(x, ...)"},{"path":"/dev/reference/as_xml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"loads character string to pugixml and returns an externalptr — as_xml","text":"x input xml ... additional arguments passed read_xml()","code":""},{"path":"/dev/reference/as_xml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"loads character string to pugixml and returns an externalptr — as_xml","text":"might useful larger documents single nodes shortened otherwise full tree reimported. unsure case. useful, printing nodes larger tree, exported characters (point time convert xml R)","code":""},{"path":"/dev/reference/as_xml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"loads character string to pugixml and returns an externalptr — as_xml","text":"","code":"tmp_xlsx <- tempfile() xlsxFile <- system.file(\"extdata\", \"readTest.xlsx\", package = \"openxlsx2\") unzip(xlsxFile, exdir = tmp_xlsx)  wb <- wb_load(xlsxFile) styles_xml <- sprintf(\"%s/xl/styles.xml\", tmp_xlsx)  # is external pointer sxml <- read_xml(styles_xml)  # is character font <- xml_node(sxml, \"styleSheet\", \"fonts\", \"font\")  # is again external pointer as_xml(font) #> <font> #>  <sz val=\"11\" /> #>  <color theme=\"1\" /> #>  <name val=\"Calibri\" /> #>  <family val=\"2\" /> #>  <scheme val=\"minor\" /> #> <\/font> #> <font> #>  <b /> #>  <sz val=\"11\" /> #>  <color indexed=\"8\" /> #>  <name val=\"Calibri\" /> #>  <family val=\"2\" /> #> <\/font> #> <font> #>  <sz val=\"11\" /> #>  <color indexed=\"8\" /> #>  <name val=\"Calibri\" /> #>  <family val=\"2\" /> #> <\/font> #> <font> #>  <sz val=\"10\" /> #>  <color rgb=\"FF000000\" /> #>  <name val=\"Lucida Console\" /> #>  <family val=\"3\" /> #> <\/font>"},{"path":"/dev/reference/cell_style.html","id":null,"dir":"Reference","previous_headings":"","what":"get and set cell style — cell_style","title":"get and set cell style — cell_style","text":"get set cell style","code":""},{"path":"/dev/reference/cell_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get and set cell style — cell_style","text":"","code":"wb_get_cell_style(wb, sheet = current_sheet(), dims)  wb_set_cell_style(wb, sheet = current_sheet(), dims, style)"},{"path":"/dev/reference/cell_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get and set cell style — cell_style","text":"wb wb sheet sheet dims dims style style","code":""},{"path":"/dev/reference/cell_style.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get and set cell style — cell_style","text":"wb_get_cell_style returns style id character wb_set_cell_style returns workbook invisible","code":""},{"path":"/dev/reference/cell_style.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get and set cell style — cell_style","text":"","code":"# set a style in b1 wb <- wb_workbook()$add_worksheet()$   add_numfmt(dims = \"B1\", numfmt = \"#,0\")  # get style from b1 to assign it to a1 numfmt <- wb$get_cell_style(dims = \"B1\")  # assign style to a1 wb$set_cell_style(dims = \"A1\", style = numfmt)"},{"path":"/dev/reference/clean_worksheet_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean worksheet name — clean_worksheet_name","title":"Clean worksheet name — clean_worksheet_name","text":"Cleans worksheet name removing legal characters.","code":""},{"path":"/dev/reference/clean_worksheet_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean worksheet name — clean_worksheet_name","text":"","code":"clean_worksheet_name(x, replacement = \" \")"},{"path":"/dev/reference/clean_worksheet_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean worksheet name — clean_worksheet_name","text":"x vector, coerced character replacement single value replace illegal characters .","code":""},{"path":"/dev/reference/clean_worksheet_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean worksheet name — clean_worksheet_name","text":"x bad characters removed","code":""},{"path":"/dev/reference/clean_worksheet_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean worksheet name — clean_worksheet_name","text":"Illegal characters considered \\, /, ?, *, :, [, ].  must intentionally removed worksheet names prior creating new worksheet.","code":""},{"path":"/dev/reference/cleanup.html","id":null,"dir":"Reference","previous_headings":"","what":"clean sheet (remove all values) — cleanup","title":"clean sheet (remove all values) — cleanup","text":"clean sheet (remove values)","code":""},{"path":"/dev/reference/cleanup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clean sheet (remove all values) — cleanup","text":"","code":"wb_clean_sheet(   wb,   sheet = current_sheet(),   dims = NULL,   numbers = TRUE,   characters = TRUE,   styles = TRUE,   merged_cells = TRUE )  delete_data(wb, sheet, cols, rows)"},{"path":"/dev/reference/cleanup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"clean sheet (remove all values) — cleanup","text":"wb workbook sheet sheet clean dims spreadsheet dimensions (optional) numbers remove numbers characters remove characters styles remove styles merged_cells remove merged_cells cols numeric column vector rows numeric row vector","code":""},{"path":"/dev/reference/col2int.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Excel column to integer — col2int","title":"Convert Excel column to integer — col2int","text":"Converts Excel column label integer.","code":""},{"path":"/dev/reference/col2int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Excel column to integer — col2int","text":"","code":"col2int(x)"},{"path":"/dev/reference/col2int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Excel column to integer — col2int","text":"x character vector","code":""},{"path":"/dev/reference/col2int.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Excel column to integer — col2int","text":"","code":"col2int(LETTERS) #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26"},{"path":"/dev/reference/comment.html","id":null,"dir":"Reference","previous_headings":"","what":"Create, write and remove comments — create_comment","title":"Create, write and remove comments — create_comment","text":"comment functions (create, write remove) allow modification comments. newer Excels called notes, called comments openxml. Modification Excel now calls comment (openxml calls threadedComments) yet possible","code":""},{"path":"/dev/reference/comment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create, write and remove comments — create_comment","text":"","code":"create_comment(   text,   author = Sys.info()[[\"user\"]],   style = NULL,   visible = TRUE,   width = 2,   height = 4 )  write_comment(   wb,   sheet,   col = NULL,   row = NULL,   comment,   xy = NULL,   dims = rowcol_to_dim(row, col) )  remove_comment(   wb,   sheet,   col = NULL,   row = NULL,   gridExpand = TRUE,   dims = NULL )  wb_add_comment(   wb,   sheet = current_sheet(),   col = NULL,   row = NULL,   dims = rowcol_to_dim(row, col),   comment )  wb_remove_comment(   wb,   sheet = current_sheet(),   col = NULL,   row = NULL,   dims = rowcol_to_dims(row, col),   gridExpand = TRUE )"},{"path":"/dev/reference/comment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create, write and remove comments — create_comment","text":"text Comment text. Character vector. author Author comment. Character vector length 1 style Style object list style objects length comment vector. visible TRUE FALSE. comment visible. width Textbox integer width number cells height Textbox integer height number cells wb workbook object sheet worksheet workbook col column apply comment row row apply comment comment comment apply worksheet xy alternative specifying col row individually.  vector form c(col, row). dims Optional row column spreadsheet dimension, e.g. \"A1\" gridExpand Remove comments inside grid. Similar dims \"A1:B2\"","code":""},{"path":"/dev/reference/comment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create, write and remove comments — create_comment","text":"wbWorkbook object wbWorkbook object","code":""},{"path":"/dev/reference/comment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create, write and remove comments — create_comment","text":"","code":"wb <- wb_workbook() wb$add_worksheet(\"Sheet 1\")  # write comment without author c1 <- create_comment(text = \"this is a comment\", author = \"\") write_comment(wb, 1, col = \"B\", row = 10, comment = c1)  # Write another comment with author information c2 <- create_comment(text = \"this is another comment\", author = \"Marco Polo\") write_comment(wb, 1, col = \"C\", row = 10, comment = c2)  # write a styled comment with system author s1 <- create_font(b = \"true\", color = wb_color(hex = \"FFFF0000\"), sz = \"12\") s2 <- create_font(color = wb_color(hex = \"FF000000\"), sz = \"9\") c3 <- create_comment(text = c(\"This Part Bold red\\n\\n\", \"This part black\"), style = c(s1, s2))  write_comment(wb, 1, col = 6, row = 3, comment = c3)  # remove the first comment remove_comment(wb, 1, col = \"B\", row = 10)"},{"path":"/dev/reference/convertToExcelDate.html","id":null,"dir":"Reference","previous_headings":"","what":"convert back to ExcelDate — convertToExcelDate","title":"convert back to ExcelDate — convertToExcelDate","text":"convert back ExcelDate","code":""},{"path":"/dev/reference/convertToExcelDate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert back to ExcelDate — convertToExcelDate","text":"","code":"convertToExcelDate(df, date1904 = FALSE)"},{"path":"/dev/reference/convertToExcelDate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert back to ExcelDate — convertToExcelDate","text":"df dataframe date1904 take different origin","code":""},{"path":"/dev/reference/convertToExcelDate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert back to ExcelDate — convertToExcelDate","text":"","code":"xlsxFile <- system.file(\"extdata\", \"readTest.xlsx\", package = \"openxlsx2\")  wb1 <- wb_load(xlsxFile)  df <- wb_to_df(wb1)  # conversion is done on dataframes only  convertToExcelDate(df = df[\"Var5\"], date1904 = FALSE) #>     Var5 #> 2  42042 #> 3  42041 #> 4  42040 #> 5     NA #> 6     NA #> 7  42037 #> 8  42036 #> 9  42035 #> 10 42034 #> 11 42033"},{"path":"/dev/reference/convert_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert from excel date, datetime or hms number to R Date type — convert_date","title":"Convert from excel date, datetime or hms number to R Date type — convert_date","text":"Convert excel date number R Date type","code":""},{"path":"/dev/reference/convert_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert from excel date, datetime or hms number to R Date type — convert_date","text":"","code":"convert_date(x, origin = \"1900-01-01\", ...)  convert_datetime(x, origin = \"1900-01-01\", ...)  convert_hms(x)"},{"path":"/dev/reference/convert_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert from excel date, datetime or hms number to R Date type — convert_date","text":"x vector integers origin date. Default value Windows Excel 2010 ... additional parameters passed .Date()","code":""},{"path":"/dev/reference/convert_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert from excel date, datetime or hms number to R Date type — convert_date","text":"Excel stores dates number days origin day","code":""},{"path":[]},{"path":"/dev/reference/convert_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert from excel date, datetime or hms number to R Date type — convert_date","text":"","code":"## 2014 April 21st to 25th convert_date(c(41750, 41751, 41752, 41753, 41754, NA)) #> [1] \"2014-04-21\" \"2014-04-22\" \"2014-04-23\" \"2014-04-24\" \"2014-04-25\" #> [6] NA           convert_date(c(41750.2, 41751.99, NA, 41753)) #> [1] \"2014-04-21\" \"2014-04-22\" NA           \"2014-04-24\" ## 2014-07-01, 2014-06-30, 2014-06-29 x <- c(41821.8127314815, 41820.8127314815, NA, 41819, NaN) convert_datetime(x) #> [1] \"2014-07-01 19:30:20 UTC\" \"2014-06-30 19:30:20 UTC\" #> [3] NA                        \"2014-06-29 00:00:00 UTC\" #> [5] NA                        convert_datetime(x, tz = \"Australia/Perth\") #> [1] \"2014-07-01 11:30:20 UTC\" \"2014-06-30 11:30:20 UTC\" #> [3] NA                        \"2014-06-28 16:00:00 UTC\" #> [5] NA                        convert_datetime(x, tz = \"UTC\") #> [1] \"2014-07-01 19:30:20 UTC\" \"2014-06-30 19:30:20 UTC\" #> [3] NA                        \"2014-06-29 00:00:00 UTC\" #> [5] NA                        ## 12:13:14 x <- 0.50918982 convert_hms(x) #> [1] \"12:13:14\""},{"path":"/dev/reference/create_border.html","id":null,"dir":"Reference","previous_headings":"","what":"create border — create_border","title":"create border — create_border","text":"Border styles can following: \"thin\", \"thick\", \"slantDashDot\", \"none\", \"mediumDashed\", \"mediumDashDot\", \"medium\", \"hair\", \"double\", \"dotted\", \"dashed\", \"dashedDotDot\", \"dashDot\" Border colors following type: c(rgb=\"FF000000\")","code":""},{"path":"/dev/reference/create_border.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create border — create_border","text":"","code":"create_border(   diagonalDown = \"\",   diagonalUp = \"\",   outline = \"\",   bottom = NULL,   bottom_color = NULL,   diagonal = NULL,   diagonal_color = NULL,   end = \"\",   horizontal = \"\",   left = NULL,   left_color = NULL,   right = NULL,   right_color = NULL,   start = \"\",   top = NULL,   top_color = NULL,   vertical = \"\",   ... )"},{"path":"/dev/reference/create_border.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create border — create_border","text":"diagonalDown x diagonalUp x outline x bottom X bottom_color X diagonal X diagonal_color X, end x, horizontal x left x left_color x right x right_color x start x top x top_color x vertical x ... x","code":""},{"path":"/dev/reference/create_cell_style.html","id":null,"dir":"Reference","previous_headings":"","what":"create_cell_style — create_cell_style","title":"create_cell_style — create_cell_style","text":"create_cell_style","code":""},{"path":"/dev/reference/create_cell_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_cell_style — create_cell_style","text":"","code":"create_cell_style(   borderId = \"\",   fillId = \"\",   fontId = \"\",   numFmtId = \"\",   pivotButton = \"\",   quotePrefix = \"\",   xfId = \"\",   horizontal = \"\",   indent = \"\",   justifyLastLine = \"\",   readingOrder = \"\",   relativeIndent = \"\",   shrinkToFit = \"\",   textRotation = \"\",   vertical = \"\",   wrapText = \"\",   extLst = \"\",   hidden = \"\",   locked = \"\" )"},{"path":"/dev/reference/create_cell_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_cell_style — create_cell_style","text":"borderId dummy fillId dummy fontId dummy numFmtId numFmt ID builtin style pivotButton dummy quotePrefix dummy xfId dummy horizontal alignment can \"\", \"center\", \"right\" indent dummy justifyLastLine dummy readingOrder dummy relativeIndent dummy shrinkToFit dummy textRotation dummy vertical alignment can \"\", \"center\", \"right\" wrapText dummy extLst dummy hidden dummy locked dummy","code":""},{"path":[]},{"path":"/dev/reference/create_dxfs_style.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a custom formatting style — create_dxfs_style","title":"Create a custom formatting style — create_dxfs_style","text":"Create new style apply worksheet cells. Created styles assigned workbook use ","code":""},{"path":"/dev/reference/create_dxfs_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a custom formatting style — create_dxfs_style","text":"","code":"create_dxfs_style(   font_name = NULL,   font_size = NULL,   font_color = NULL,   numFmt = NULL,   border = NULL,   border_color = wb_color(getOption(\"openxlsx2.borderColor\", \"black\")),   border_style = getOption(\"openxlsx2.borderStyle\", \"thin\"),   bgFill = NULL,   fgColor = NULL,   text_bold = NULL,   text_strike = NULL,   text_italic = NULL,   text_underline = NULL,   ... )"},{"path":"/dev/reference/create_dxfs_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a custom formatting style — create_dxfs_style","text":"font_name name font. Note font name validated. fontName NULL, workbook base font used. (Defaults Calibri) font_size Font size. numeric greater 0. fontSize NULL, workbook base font size used. (Defaults 11) font_color Color text cell.  valid hex color beginning \"#\" one colors(). fontColor NULL, workbook base font colors used. (Defaults black) numFmt Cell formatting. custom openxml format border NULL TRUE border_color \"black\" border_style \"thin\" bgFill Cell background fill color. fgColor Cell foreground fill color. text_bold bold text_strike strikeout text_italic italic text_underline underline 1, true, single double ... ...","code":""},{"path":"/dev/reference/create_dxfs_style.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a custom formatting style — create_dxfs_style","text":"dxfs style node","code":""},{"path":"/dev/reference/create_dxfs_style.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a custom formatting style — create_dxfs_style","text":"possible override border_color border_style left, right, top, bottom_color, left, right, top, bottom_style.","code":""},{"path":[]},{"path":"/dev/reference/create_dxfs_style.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a custom formatting style — create_dxfs_style","text":"","code":"# do not apply anthing style1 <- create_dxfs_style()  # change font color and background color style2 <- create_dxfs_style(   font_color = wb_color(hex = \"FF9C0006\"),   bgFill = wb_color(hex = \"FFFFC7CE\") )  # change font (type, size and color) and background # the old default in openxlsx and openxlsx2 <= 0.3 style3 <- create_dxfs_style(   font_name = \"Calibri\",   font_size = 11,   font_color = wb_color(hex = \"FF9C0006\"),   bgFill = wb_color(hex = \"FFFFC7CE\") )  ## See package vignettes for further examples"},{"path":"/dev/reference/create_fill.html","id":null,"dir":"Reference","previous_headings":"","what":"create fill — create_fill","title":"create fill — create_fill","text":"create fill","code":""},{"path":"/dev/reference/create_fill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create fill — create_fill","text":"","code":"create_fill(   gradientFill = \"\",   patternType = \"\",   bgColor = NULL,   fgColor = NULL,   ... )"},{"path":"/dev/reference/create_fill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create fill — create_fill","text":"gradientFill complex fills patternType various: default \"none\", also \"solid\", color like \"gray125\" bgColor hex8 color alpha, red, green, blue patternFill fgColor hex8 color alpha, red, green, blue patternFill ... ...","code":""},{"path":"/dev/reference/create_font.html","id":null,"dir":"Reference","previous_headings":"","what":"create font format — create_font","title":"create font format — create_font","text":"create font format","code":""},{"path":"/dev/reference/create_font.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create font format — create_font","text":"","code":"create_font(   b = \"\",   charset = \"\",   color = wb_color(hex = \"FF000000\"),   condense = \"\",   extend = \"\",   family = \"2\",   i = \"\",   name = \"Calibri\",   outline = \"\",   scheme = \"minor\",   shadow = \"\",   strike = \"\",   sz = \"11\",   u = \"\",   vertAlign = \"\",   ... )"},{"path":"/dev/reference/create_font.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create font format — create_font","text":"b bold charset charset color rgb color: default \"FF000000\" condense condense extend extend family font family: default \"2\" italic name font name: default \"Calibri\" outline outline scheme font scheme: default \"minor\" shadow shadow strike strike sz font size: default \"11\", u underline vertAlign vertical alignment ... ...","code":""},{"path":"/dev/reference/create_font.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create font format — create_font","text":"","code":"font <- create_font() # openxml has the alpha value leading hex8 <- unlist(xml_attr(read_xml(font), \"font\", \"color\")) hex8 <- paste0(\"#\", substr(hex8, 3, 8), substr(hex8, 1,2))  # # write test color # col <- crayon::make_style(col2rgb(hex8, alpha = TRUE)) # cat(col(\"Test\"))"},{"path":"/dev/reference/create_hyperlink.html","id":null,"dir":"Reference","previous_headings":"","what":"create Excel hyperlink string — create_hyperlink","title":"create Excel hyperlink string — create_hyperlink","text":"Wrapper create internal hyperlink string pass write_formula(). Either link external urls local files straight cells local Excel sheets.","code":""},{"path":"/dev/reference/create_hyperlink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create Excel hyperlink string — create_hyperlink","text":"","code":"create_hyperlink(sheet, row = 1, col = 1, text = NULL, file = NULL)"},{"path":"/dev/reference/create_hyperlink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create Excel hyperlink string — create_hyperlink","text":"sheet Name worksheet row integer row number hyperlink link col column number letter hyperlink link text display text file Excel file name point . NULL hyperlink internal.","code":""},{"path":[]},{"path":"/dev/reference/create_hyperlink.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create Excel hyperlink string — create_hyperlink","text":"","code":"## Writing internal hyperlinks wb <- wb_workbook() wb$add_worksheet(\"Sheet1\") wb$add_worksheet(\"Sheet2\") wb$add_worksheet(\"Sheet 3\") wb$add_data(sheet = 3, x = iris)  ## External Hyperlink x <- c(\"https://www.google.com\", \"https://www.google.com.au\") names(x) <- c(\"google\", \"google Aus\") class(x) <- \"hyperlink\"  wb$add_data(sheet = 1, x = x, startCol = 10)   ## Internal Hyperlink - create hyperlink formula manually write_formula(   wb, \"Sheet1\",   x = '=HYPERLINK(\\\"#Sheet2!B3\\\", \"Text to Display - Link to Sheet2\")',   startCol = 3 ) #> A Workbook object. #>   #> Worksheets: #>  Sheets: Sheet1 Sheet2 Sheet 3  #>  Write order: 1, 2, 3  ## Internal - No text to display using create_hyperlink() function write_formula(   wb, \"Sheet1\",   startRow = 1,   x = create_hyperlink(sheet = \"Sheet 3\", row = 1, col = 2) ) #> A Workbook object. #>   #> Worksheets: #>  Sheets: Sheet1 Sheet2 Sheet 3  #>  Write order: 1, 2, 3  ## Internal - Text to display write_formula(   wb, \"Sheet1\",   startRow = 2,   x = create_hyperlink(     sheet = \"Sheet 3\", row = 1, col = 2,     text = \"Link to Sheet 3\"   ) ) #> A Workbook object. #>   #> Worksheets: #>  Sheets: Sheet1 Sheet2 Sheet 3  #>  Write order: 1, 2, 3  ## Link to file - No text to display write_formula(   wb, \"Sheet1\",   startRow = 4,   x = create_hyperlink(     sheet = \"testing\", row = 3, col = 10,     file = system.file(\"extdata\", \"loadExample.xlsx\", package = \"openxlsx2\")   ) ) #> A Workbook object. #>   #> Worksheets: #>  Sheets: Sheet1 Sheet2 Sheet 3  #>  Write order: 1, 2, 3  ## Link to file - Text to display write_formula(   wb, \"Sheet1\",   startRow = 3,   x = create_hyperlink(     sheet = \"testing\", row = 3, col = 10,     file = system.file(\"extdata\", \"loadExample.xlsx\", package = \"openxlsx2\"),     text = \"Link to File.\"   ) ) #> A Workbook object. #>   #> Worksheets: #>  Sheets: Sheet1 Sheet2 Sheet 3  #>  Write order: 1, 2, 3  ## Link to external file - Text to display write_formula(   wb, \"Sheet1\",   startRow = 10, startCol = 1,   x = '=HYPERLINK(\"[C:/Users]\", \"Link to an external file\")' ) #> A Workbook object. #>   #> Worksheets: #>  Sheets: Sheet1 Sheet2 Sheet 3  #>  Write order: 1, 2, 3  ## Link to internal file x = create_hyperlink(text = \"test.png\", file = \"D:/somepath/somepicture.png\") write_formula(wb, \"Sheet1\", startRow = 11, startCol = 1, x = x) #> A Workbook object. #>   #> Worksheets: #>  Sheets: Sheet1 Sheet2 Sheet 3  #>  Write order: 1, 2, 3"},{"path":"/dev/reference/create_numfmt.html","id":null,"dir":"Reference","previous_headings":"","what":"create number format — create_numfmt","title":"create number format — create_numfmt","text":"create number format","code":""},{"path":"/dev/reference/create_numfmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create number format — create_numfmt","text":"","code":"create_numfmt(numFmtId, formatCode)"},{"path":"/dev/reference/create_numfmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create number format — create_numfmt","text":"numFmtId id formatCode format code","code":""},{"path":"/dev/reference/create_sparklines.html","id":null,"dir":"Reference","previous_headings":"","what":"create sparklines used in add_sparline() — create_sparklines","title":"create sparklines used in add_sparline() — create_sparklines","text":"create sparklines used add_sparline()","code":""},{"path":"/dev/reference/create_sparklines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create sparklines used in add_sparline() — create_sparklines","text":"","code":"create_sparklines(   sheet = current_sheet(),   dims,   sqref,   type = NULL,   negative = NULL,   displayEmptyCellsAs = \"gap\",   markers = NULL,   high = NULL,   low = NULL,   first = NULL,   last = NULL,   colorSeries = wb_color(hex = \"FF376092\"),   colorNegative = wb_color(hex = \"FFD00000\"),   colorAxis = wb_color(hex = \"FFD00000\"),   colorMarkers = wb_color(hex = \"FFD00000\"),   colorFirst = wb_color(hex = \"FFD00000\"),   colorLast = wb_color(hex = \"FFD00000\"),   colorHigh = wb_color(hex = \"FFD00000\"),   colorLow = wb_color(hex = \"FFD00000\") )"},{"path":"/dev/reference/create_sparklines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create sparklines used in add_sparline() — create_sparklines","text":"sheet sheet dims dims sqref sqref type type negative negative displayEmptyCellsAs displayEmptyCellsAs markers markers add marker line high highlight highest value low highlight lowest value first highlight first value last highlight last value colorSeries colorSeries colorNegative colorNegative colorAxis colorAxis colorMarkers colorMarkers colorFirst colorFirst colorLast colorLast colorHigh colorHigh colorLow colorLow","code":""},{"path":"/dev/reference/create_sparklines.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"create sparklines used in add_sparline() — create_sparklines","text":"colors predefined rgb. Maybe theme colors can used .","code":""},{"path":"/dev/reference/create_sparklines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create sparklines used in add_sparline() — create_sparklines","text":"","code":"# create sparklineGroup sparklines <- c(   create_sparklines(\"Sheet 1\", \"A3:L3\", \"M3\", type = \"column\", first = \"1\"),   create_sparklines(\"Sheet 1\", \"A2:L2\", \"M2\", markers = \"1\"),   create_sparklines(\"Sheet 1\", \"A4:L4\", \"M4\", type = \"stacked\", negative = \"1\") )  t1 <- AirPassengers t2 <- do.call(cbind, split(t1, cycle(t1))) dimnames(t2) <- dimnames(.preformat.ts(t1))  wb <- wb_workbook()$   add_worksheet(\"Sheet 1\")$   add_data(x = t2)$   add_sparklines(sparklines = sparklines)"},{"path":"/dev/reference/create_tablestyle.html","id":null,"dir":"Reference","previous_headings":"","what":"create tableStyle — create_tablestyle","title":"create tableStyle — create_tablestyle","text":"create tableStyle","code":""},{"path":"/dev/reference/create_tablestyle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create tableStyle — create_tablestyle","text":"","code":"create_tablestyle(   name,   wholeTable = NULL,   headerRow = NULL,   totalRow = NULL,   firstColumn = NULL,   lastColumn = NULL,   firstRowStripe = NULL,   secondRowStripe = NULL,   firstColumnStripe = NULL,   secondColumnStripe = NULL,   firstHeaderCell = NULL,   lastHeaderCell = NULL,   firstTotalCell = NULL,   lastTotalCell = NULL )"},{"path":"/dev/reference/create_tablestyle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create tableStyle — create_tablestyle","text":"name name wholeTable wholeTable headerRow headerRow totalRow totalRow firstColumn firstColumn lastColumn lastColumn firstRowStripe firstRowStripe secondRowStripe secondRowStripe firstColumnStripe firstColumnStripe secondColumnStripe secondColumnStripe firstHeaderCell firstHeaderCell lastHeaderCell lastHeaderCell firstTotalCell firstTotalCell lastTotalCell lastTotalCell","code":""},{"path":"/dev/reference/dataframe_to_dims.html","id":null,"dir":"Reference","previous_headings":"","what":"create dimensions from dataframe — dataframe_to_dims","title":"create dimensions from dataframe — dataframe_to_dims","text":"create dimensions dataframe","code":""},{"path":"/dev/reference/dataframe_to_dims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create dimensions from dataframe — dataframe_to_dims","text":"","code":"dataframe_to_dims(df)"},{"path":"/dev/reference/dataframe_to_dims.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create dimensions from dataframe — dataframe_to_dims","text":"df dataframe spreadsheet columns rows","code":""},{"path":"/dev/reference/dataframe_to_dims.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create dimensions from dataframe — dataframe_to_dims","text":"","code":"{   df <- dims_to_dataframe(\"A1:D5;F1:F6;D8\", fill = TRUE)   dataframe_to_dims(df) } #> [1] \"A1:D6;A8:D8;F1:F6;F8:F8\""},{"path":"/dev/reference/dims_to_dataframe.html","id":null,"dir":"Reference","previous_headings":"","what":"create dataframe from dimensions — dims_to_dataframe","title":"create dataframe from dimensions — dims_to_dataframe","text":"create dataframe dimensions","code":""},{"path":"/dev/reference/dims_to_dataframe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create dataframe from dimensions — dims_to_dataframe","text":"","code":"dims_to_dataframe(dims, fill = FALSE)"},{"path":"/dev/reference/dims_to_dataframe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create dataframe from dimensions — dims_to_dataframe","text":"dims Character vector expected dimension. fill TRUE, fills dataframe variables","code":""},{"path":"/dev/reference/dims_to_dataframe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create dataframe from dimensions — dims_to_dataframe","text":"","code":"{   dims_to_dataframe(\"A1:B2\") } #>      A    B #> 1 <NA> <NA> #> 2 <NA> <NA>"},{"path":"/dev/reference/fmt_txt.html","id":null,"dir":"Reference","previous_headings":"","what":"format strings independent of the cell style. — fmt_txt","title":"format strings independent of the cell style. — fmt_txt","text":"format strings independent cell style.","code":""},{"path":"/dev/reference/fmt_txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"format strings independent of the cell style. — fmt_txt","text":"","code":"fmt_txt(   x,   bold = FALSE,   italic = FALSE,   underline = FALSE,   strike = FALSE,   size = NULL,   color = NULL,   font = NULL,   charset = NULL,   outline = NULL,   vertAlign = NULL )"},{"path":"/dev/reference/fmt_txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"format strings independent of the cell style. — fmt_txt","text":"x string part string bold bold italic italic underline underline strike strike size font size color wbColor color font font font name charset integer value table outline TRUE FALSE vertAlign baseline, superscript, subscript","code":""},{"path":"/dev/reference/fmt_txt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"format strings independent of the cell style. — fmt_txt","text":"result xml string. possible paste multiple fmt_txt() strings together create string differing styles.","code":""},{"path":"/dev/reference/fmt_txt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"format strings independent of the cell style. — fmt_txt","text":"","code":"fmt_txt(\"bar\", underline = TRUE) #> [1] \"<r><rPr><u/><\/rPr><t>bar<\/t><\/r>\""},{"path":"/dev/reference/get_cell_refs.html","id":null,"dir":"Reference","previous_headings":"","what":"Return excel cell coordinates from (x,y) coordinates — get_cell_refs","title":"Return excel cell coordinates from (x,y) coordinates — get_cell_refs","text":"Return excel cell coordinates (x,y) coordinates","code":""},{"path":"/dev/reference/get_cell_refs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return excel cell coordinates from (x,y) coordinates — get_cell_refs","text":"","code":"get_cell_refs(cellCoords)"},{"path":"/dev/reference/get_cell_refs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return excel cell coordinates from (x,y) coordinates — get_cell_refs","text":"cellCoords data.frame two columns coordinate pairs.","code":""},{"path":"/dev/reference/get_cell_refs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return excel cell coordinates from (x,y) coordinates — get_cell_refs","text":"Excel alphanumeric cell reference","code":""},{"path":"/dev/reference/get_cell_refs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return excel cell coordinates from (x,y) coordinates — get_cell_refs","text":"","code":"get_cell_refs(data.frame(1, 2)) #> [1] \"B1\" # \"B1\" get_cell_refs(data.frame(1:3, 2:4)) #> [1] \"B1\" \"C2\" \"D3\" # \"B1\" \"C2\" \"D3\""},{"path":"/dev/reference/get_date_origin.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the date origin an xlsx file is using — get_date_origin","title":"Get the date origin an xlsx file is using — get_date_origin","text":"Return date origin used internally xlsx xlsm file","code":""},{"path":"/dev/reference/get_date_origin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the date origin an xlsx file is using — get_date_origin","text":"","code":"get_date_origin(xlsxFile, origin = FALSE)"},{"path":"/dev/reference/get_date_origin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the date origin an xlsx file is using — get_date_origin","text":"xlsxFile xlsx xlsm file wbWorkbook object. origin return origin instead character string.","code":""},{"path":"/dev/reference/get_date_origin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the date origin an xlsx file is using — get_date_origin","text":"One \"1900-01-01\" \"1904-01-01\".","code":""},{"path":"/dev/reference/get_date_origin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the date origin an xlsx file is using — get_date_origin","text":"Excel stores dates number days either 1904-01-01 1900-01-01. function checks date origin used Excel file returns can used convert_date()","code":""},{"path":[]},{"path":"/dev/reference/get_date_origin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the date origin an xlsx file is using — get_date_origin","text":"","code":"## create a file with some dates temp <- temp_xlsx() write_xlsx(as.Date(\"2015-01-10\") - (0:4), file = temp) m <- read_xlsx(temp)  ## convert to dates do <- get_date_origin(system.file(\"extdata\", \"readTest.xlsx\", package = \"openxlsx2\")) convert_date(m[[1]], do) #> [1] \"1945-01-07\" \"1945-01-06\" \"1945-01-05\" \"1945-01-04\"  get_date_origin(wb_workbook()) #> [1] \"1900-01-01\" get_date_origin(wb_workbook(), origin = TRUE) #> [1] 25569"},{"path":"/dev/reference/guess_col_type.html","id":null,"dir":"Reference","previous_headings":"","what":"function to estimate the column type.\n0 = character, 1 = numeric, 2 = date. — guess_col_type","title":"function to estimate the column type.\n0 = character, 1 = numeric, 2 = date. — guess_col_type","text":"function estimate column type. 0 = character, 1 = numeric, 2 = date.","code":""},{"path":"/dev/reference/guess_col_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to estimate the column type.\n0 = character, 1 = numeric, 2 = date. — guess_col_type","text":"","code":"guess_col_type(tt)"},{"path":"/dev/reference/guess_col_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"function to estimate the column type.\n0 = character, 1 = numeric, 2 = date. — guess_col_type","text":"tt dataframe produced wb_to_df()","code":""},{"path":"/dev/reference/int2col.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert integer to Excel column — int2col","title":"Convert integer to Excel column — int2col","text":"Converts integer Excel column label.","code":""},{"path":"/dev/reference/int2col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert integer to Excel column — int2col","text":"","code":"int2col(x)"},{"path":"/dev/reference/int2col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert integer to Excel column — int2col","text":"x numeric vector","code":""},{"path":"/dev/reference/int2col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert integer to Excel column — int2col","text":"","code":"int2col(1:10) #>  [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\""},{"path":"/dev/reference/named_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Create / delete a named region — named_region","title":"Create / delete a named region — named_region","text":"Create / delete named region Return vector named regions xlsx file Workbook object","code":""},{"path":"/dev/reference/named_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create / delete a named region — named_region","text":"","code":"wb_add_named_region(   wb,   sheet = current_sheet(),   cols,   rows,   name,   localSheet = FALSE,   overwrite = FALSE,   comment = NULL,   customMenu = NULL,   description = NULL,   is_function = NULL,   functionGroupId = NULL,   help = NULL,   hidden = NULL,   localName = NULL,   publishToServer = NULL,   statusBar = NULL,   vbProcedure = NULL,   workbookParameter = NULL,   xml = NULL )  wb_remove_named_region(wb, sheet = current_sheet(), name = NULL)  get_named_regions(x)  wb_get_named_regions(x, tables = FALSE)"},{"path":"/dev/reference/named_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create / delete a named region — named_region","text":"wb workbook object sheet name index worksheet cols Numeric vector specifying columns include region rows Numeric vector specifying rows include region name Name region. character vector length 1. Note region names musts case-insensitive unique. localSheet TRUE named region local sheet overwrite Boolean. Overwrite exists? Default FALSE comment description text named region customMenu customMenu (unknown xml feature) description description (unknown xml feature) is_function function (unknown xml feature) functionGroupId function group id (unknown xml feature) help help (unknown xml feature) hidden hidden named region hidden localName localName (unknown xml feature) publishToServer publish server (unknown xml feature) statusBar status bar (unknown xml feature) vbProcedure wbProcedure (unknown xml feature) workbookParameter workbookParameter (unknown xml feature) xml xml (unknown xml feature) x xlsx file Workbook object tables add tables ","code":""},{"path":"/dev/reference/named_region.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create / delete a named region — named_region","text":"Region given : min(cols):max(cols) X min(rows):max(rows)","code":""},{"path":[]},{"path":"/dev/reference/named_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create / delete a named region — named_region","text":"","code":"## create named regions wb <- wb_workbook() wb$add_worksheet(\"Sheet 1\")  ## specify region wb$add_data(sheet = 1, x = iris, startCol = 1, startRow = 1) wb$add_named_region(   sheet = 1,   name = \"iris\",   rows = seq_len(nrow(iris) + 1),   cols = seq_along(iris) )   ## using write_data 'name' argument wb$add_data(sheet = 1, x = iris, name = \"iris2\", startCol = 10)  out_file <- temp_xlsx() wb_save(wb, out_file, overwrite = TRUE)  ## see named regions wb_get_named_regions(wb) ## From Workbook object #>    name                 value  sheets  coords id local sheet #> 1  iris 'Sheet 1'!$A$1:$E$151 Sheet 1 A1:E151  1     0     1 #> 2 iris2     'Sheet 1'!J1:N151 Sheet 1 J1:N151  2     0     1 wb_get_named_regions(out_file) ## From xlsx file #>    name                 value  sheets  coords id local sheet #> 1  iris 'Sheet 1'!$A$1:$E$151 Sheet 1 A1:E151  1     0     1 #> 2 iris2     'Sheet 1'!J1:N151 Sheet 1 J1:N151  2     0     1  ## delete one wb$remove_named_region(name = \"iris2\") wb_get_named_regions(wb) #>   name                 value  sheets  coords id local sheet #> 1 iris 'Sheet 1'!$A$1:$E$151 Sheet 1 A1:E151  1     0     1  ## read named regions df <- read_xlsx(wb, namedRegion = \"iris\") head(df) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 2          5.1         3.5          1.4         0.2  setosa #> 3          4.9         3.0          1.4         0.2  setosa #> 4          4.7         3.2          1.3         0.2  setosa #> 5          4.6         3.1          1.5         0.2  setosa #> 6          5.0         3.6          1.4         0.2  setosa #> 7          5.4         3.9          1.7         0.4  setosa  df <- read_xlsx(out_file, namedRegion = \"iris2\") head(df) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 2          5.1         3.5          1.4         0.2  setosa #> 3          4.9         3.0          1.4         0.2  setosa #> 4          4.7         3.2          1.3         0.2  setosa #> 5          4.6         3.1          1.5         0.2  setosa #> 6          5.0         3.6          1.4         0.2  setosa #> 7          5.4         3.9          1.7         0.4  setosa ## create named regions wb <- wb_workbook() wb$add_worksheet(\"Sheet 1\")  ## specify region wb$add_data(sheet = 1, x = iris, startCol = 1, startRow = 1) wb$add_named_region(   sheet = 1,   name = \"iris\",   rows = seq_len(nrow(iris) + 1),   cols = seq_along(iris) )   ## using write_data 'name' argument to create a named region wb$add_data(sheet = 1, x = iris, name = \"iris2\", startCol = 10)  out_file <- temp_xlsx() wb$save(out_file, overwrite = TRUE)  ## see named regions wb_get_named_regions(wb) ## From Workbook object #>    name                 value  sheets  coords id local sheet #> 1  iris 'Sheet 1'!$A$1:$E$151 Sheet 1 A1:E151  1     0     1 #> 2 iris2     'Sheet 1'!J1:N151 Sheet 1 J1:N151  2     0     1 wb_get_named_regions(out_file) ## From xlsx file #>    name                 value  sheets  coords id local sheet #> 1  iris 'Sheet 1'!$A$1:$E$151 Sheet 1 A1:E151  1     0     1 #> 2 iris2     'Sheet 1'!J1:N151 Sheet 1 J1:N151  2     0     1  ## read named regions df <- read_xlsx(wb, namedRegion = \"iris\") head(df) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 2          5.1         3.5          1.4         0.2  setosa #> 3          4.9         3.0          1.4         0.2  setosa #> 4          4.7         3.2          1.3         0.2  setosa #> 5          4.6         3.1          1.5         0.2  setosa #> 6          5.0         3.6          1.4         0.2  setosa #> 7          5.4         3.9          1.7         0.4  setosa  df <- read_xlsx(out_file, namedRegion = \"iris2\") head(df) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 2          5.1         3.5          1.4         0.2  setosa #> 3          4.9         3.0          1.4         0.2  setosa #> 4          4.7         3.2          1.3         0.2  setosa #> 5          4.6         3.1          1.5         0.2  setosa #> 6          5.0         3.6          1.4         0.2  setosa #> 7          5.4         3.9          1.7         0.4  setosa"},{"path":"/dev/reference/openxlsx2.html","id":null,"dir":"Reference","previous_headings":"","what":"xlsx reading, writing and editing. — openxlsx2","title":"xlsx reading, writing and editing. — openxlsx2","text":"R package modern reinterpretation widely used popular openxlsx package. Similar predecessor, simplifies creation xlsx files providing clean interface writing, designing editing worksheets. Based powerful XML library focusing modern programming flows pipes chains, openxlsx2 allows break many new ground.","code":""},{"path":"/dev/reference/openxlsx2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"xlsx reading, writing and editing. — openxlsx2","text":"openxlsx package uses global options simplify formatting: options(\"openxlsx2.borderColor\" = \"black\") options(\"openxlsx2.borderStyle\" = \"thin\") options(\"openxlsx2.dateFormat\" = \"mm/dd/yyyy\") options(\"openxlsx2.datetimeFormat\" = \"yyyy-mm-dd hh:mm:ss\") options(\"openxlsx2.numFmt\" = NULL) options(\"openxlsx2.paperSize\" = 9) ## A4 options(\"openxlsx2.orientation\" = \"portrait\") ## page orientation options(\"openxlsx2.sheet.default_name\" = \"Sheet\") options(\"openxlsx2.rightToLeft\" = NULL) default, openxlsx2 uses American English word color (written 'o' instead British English 'ou'). However, spellings supported. documentation uses 'color', function also accept 'color'. However, indicated autocompletion.","code":""},{"path":"/dev/reference/openxlsx2.html","id":"authors-and-contributions","dir":"Reference","previous_headings":"","what":"Authors and contributions","title":"xlsx reading, writing and editing. — openxlsx2","text":"full list authors made package possible greatful, please see:   feel like included list, please let us know. something contribute, welcome. something working expected, open issues solved issue, open pull request. Please respectful aware volunteers fun unpaid free time. work problems time need.","code":"system.file(\"AUTHORS\", package = \"openxlsx2\")"},{"path":"/dev/reference/openxlsx2.html","id":"license","dir":"Reference","previous_headings":"","what":"License","title":"xlsx reading, writing and editing. — openxlsx2","text":"package licensed MIT license based openxlsx (Alexander Walker Philipp Schauberger; COPYRIGHT 2014-2022) pugixml (Arseny Kapoulkine; COPYRIGHT 2006-2022). released MIT license.","code":""},{"path":[]},{"path":"/dev/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/dev/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/dev/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/dev/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/dev/reference/print.pugi_xml.html","id":null,"dir":"Reference","previous_headings":"","what":"print pugi_xml — print.pugi_xml","title":"print pugi_xml — print.pugi_xml","text":"print pugi_xml","code":""},{"path":"/dev/reference/print.pugi_xml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print pugi_xml — print.pugi_xml","text":"","code":"# S3 method for pugi_xml print(x, indent = \" \", raw = FALSE, attr_indent = FALSE, ...)"},{"path":"/dev/reference/print.pugi_xml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print pugi_xml — print.pugi_xml","text":"x something print indent indent used default \" \" raw print raw text attr_indent print attributes indented new line ... please check","code":""},{"path":"/dev/reference/print.pugi_xml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"print pugi_xml — print.pugi_xml","text":"","code":"# a pointer   x <- read_xml(\"<a><b/><\/a>\")   print(x) #> <a> #>  <b /> #> <\/a>   print(x, raw = TRUE) #> <a><b/><\/a>"},{"path":"/dev/reference/pugixml.html","id":null,"dir":"Reference","previous_headings":"","what":"xml_node — pugixml","title":"xml_node — pugixml","text":"returns xml values character","code":""},{"path":"/dev/reference/pugixml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xml_node — pugixml","text":"","code":"xml_node(xml, level1 = NULL, level2 = NULL, level3 = NULL, ...)  xml_node_name(xml, level1 = NULL, level2 = NULL, ...)  xml_value(xml, level1 = NULL, level2 = NULL, level3 = NULL, ...)  xml_attr(xml, level1 = NULL, level2 = NULL, level3 = NULL, ...)"},{"path":"/dev/reference/pugixml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xml_node — pugixml","text":"xml something xml level1 please check level2 please check level3 please check ... additional arguments passed read_xml()","code":""},{"path":"/dev/reference/pugixml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"xml_node — pugixml","text":"function returns XML nodes used openxlsx2. theory returned pointers well, yet implemented. level provided, nodes level1 returned","code":""},{"path":"/dev/reference/pugixml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xml_node — pugixml","text":"","code":"x <- read_xml(\"<a><b/><\/a>\")   # return a   xml_node(x, \"a\") #> [1] \"<a><b/><\/a>\"   # return b. requires the path to the node   xml_node(x, \"a\", \"b\") #> [1] \"<b/>\"   xml_node_name(\"<a/>\") #> [1] \"a\"   xml_node_name(\"<a><b/><\/a>\", \"a\") #> [1] \"b\"   x <- read_xml(\"<a>1<\/a>\")   xml_value(x, \"a\") #> [1] \"1\"    x <- read_xml(\"<a><b r=\\\"1\\\">2<\/b><\/a>\")   xml_value(x, \"a\", \"b\") #> [1] \"2\"    x <- read_xml(\"<a a=\\\"1\\\" b=\\\"2\\\">1<\/a>\")   xml_attr(x, \"a\") #> [[1]] #>   a   b  #> \"1\" \"2\"  #>     x <- read_xml(\"<a><b r=\\\"1\\\">2<\/b><\/a>\")   xml_attr(x, \"a\", \"b\") #> [[1]] #>   r  #> \"1\"  #>    x <- read_xml(\"<a a=\\\"1\\\" b=\\\"2\\\">1<\/a>\")   xml_attr(x, \"a\") #> [[1]] #>   a   b  #> \"1\" \"2\"  #>     x <- read_xml(\"<b><a a=\\\"1\\\" b=\\\"2\\\"/><\/b>\")   xml_attr(x, \"b\", \"a\") #> [[1]] #>   a   b  #> \"1\" \"2\"  #>"},{"path":"/dev/reference/read_sheet_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get names of worksheets — read_sheet_names","title":"Get names of worksheets — read_sheet_names","text":"Returns worksheet names within xlsx file","code":""},{"path":"/dev/reference/read_sheet_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get names of worksheets — read_sheet_names","text":"","code":"read_sheet_names(file)"},{"path":"/dev/reference/read_sheet_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get names of worksheets — read_sheet_names","text":"file xlsx xlsm file.","code":""},{"path":"/dev/reference/read_sheet_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get names of worksheets — read_sheet_names","text":"Character vector worksheet names.","code":""},{"path":"/dev/reference/read_sheet_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get names of worksheets — read_sheet_names","text":"","code":"read_sheet_names(system.file(\"extdata\", \"readTest.xlsx\", package = \"openxlsx2\")) #>  [1] \"Sheet1\"  \"Sheet2\"  \"Sheet 3\" \"Sheet 4\" \"Sheet 5\" \"Sheet 6\" \"1\"       #>  [8] \"11\"      \"111\"     \"1111\"    \"11111\"   \"111111\""},{"path":"/dev/reference/read_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Read from an Excel file or Workbook object — read_xlsx","title":"Read from an Excel file or Workbook object — read_xlsx","text":"Read data Excel file Workbook object data.frame","code":""},{"path":"/dev/reference/read_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read from an Excel file or Workbook object — read_xlsx","text":"","code":"read_xlsx(   xlsxFile,   sheet,   startRow = 1,   startCol = NULL,   rowNames = FALSE,   colNames = TRUE,   skipEmptyRows = FALSE,   skipEmptyCols = FALSE,   rows = NULL,   cols = NULL,   detectDates = TRUE,   namedRegion,   na.strings = \"#N/A\",   na.numbers = NA,   check.names = FALSE,   sep.names = \".\",   fillMergedCells = FALSE,   ... )"},{"path":"/dev/reference/read_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read from an Excel file or Workbook object — read_xlsx","text":"xlsxFile xlsx file, Workbook object URL xlsx file. sheet name index sheet read data . startRow first row begin looking data. startCol first column begin looking data. rowNames TRUE, first column data used row names. colNames TRUE, first row data used column names. skipEmptyRows TRUE, empty rows skipped else empty rows first row containing data return row NAs. skipEmptyCols TRUE, empty columns skipped. rows numeric vector specifying rows Excel file read. NULL, rows read. cols numeric vector specifying columns Excel file read. NULL, columns read. detectDates TRUE, attempt recognize dates perform conversion. namedRegion named region Workbook. NULL startRow, rows cols parameters ignored. na.strings character vector strings interpreted NA. Blank cells returned NA. na.numbers numeric vector digits interpreted NA. Blank cells returned NA. check.names logical. TRUE names variables data frame checked ensure syntactically valid variable names sep.names (unimplemented) One character substitutes blanks column names. default, \".\" fillMergedCells TRUE, value merged cell given cells within merge. ... additional arguments passed wb_to_df()","code":""},{"path":"/dev/reference/read_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read from an Excel file or Workbook object — read_xlsx","text":"data.frame","code":""},{"path":"/dev/reference/read_xlsx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read from an Excel file or Workbook object — read_xlsx","text":"Formulae written using write_formula Workbook object get picked read_xlsx(). formula written left evaluated file opened Excel. Opening, saving closing file Excel resolve .","code":""},{"path":[]},{"path":"/dev/reference/read_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read from an Excel file or Workbook object — read_xlsx","text":"","code":"xlsxFile <- system.file(\"extdata\", \"readTest.xlsx\", package = \"openxlsx2\") df1 <- read_xlsx(xlsxFile = xlsxFile, sheet = 1, skipEmptyRows = FALSE) sapply(df1, class) #>        Var1        Var2        <NA>        Var3        Var4        Var5  #>   \"logical\"   \"numeric\"   \"numeric\" \"character\" \"character\"      \"Date\"  #>        Var6        Var7  #> \"character\" \"character\"   df2 <- read_xlsx(xlsxFile = xlsxFile, sheet = 3, skipEmptyRows = TRUE) df2$Date <- convert_date(df2$Date) sapply(df2, class) #>        Date       value        word        bool      wordZ2  #>      \"Date\"   \"numeric\" \"character\"   \"logical\" \"character\"  head(df2) #>          Date     value      word  bool  wordZ2 #> 7  1944-04-26 0.8390764 N-U-B-R-A FALSE FALSE-Z #> 8  1944-04-25 0.8863800 N-Z-P-S-Y  TRUE  TRUE-Z #> 9  1944-04-24 0.5741314 C-G-D-X-H  TRUE  TRUE-Z #> 10 1944-04-23 0.1366065      <NA> FALSE FALSE-Z #> 11 1944-04-22 0.3692582 B-K-A-O-W  TRUE  TRUE-Z #> 12 1944-04-21        NA H-P-G-O-K  TRUE  TRUE-Z  df2 <- read_xlsx(   xlsxFile = xlsxFile, sheet = 3, skipEmptyRows = TRUE,   detectDates = TRUE ) sapply(df2, class) #>        Date       value        word        bool      wordZ2  #>      \"Date\"   \"numeric\" \"character\"   \"logical\" \"character\"  head(df2) #>          Date     value      word  bool  wordZ2 #> 7  2014-04-28 0.8390764 N-U-B-R-A FALSE FALSE-Z #> 8  2014-04-27 0.8863800 N-Z-P-S-Y  TRUE  TRUE-Z #> 9  2014-04-26 0.5741314 C-G-D-X-H  TRUE  TRUE-Z #> 10 2014-04-25 0.1366065      <NA> FALSE FALSE-Z #> 11 2014-04-24 0.3692582 B-K-A-O-W  TRUE  TRUE-Z #> 12 2014-04-23        NA H-P-G-O-K  TRUE  TRUE-Z  wb <- wb_load(system.file(\"extdata\", \"readTest.xlsx\", package = \"openxlsx2\")) df3 <- read_xlsx(wb, sheet = 2, skipEmptyRows = FALSE, colNames = TRUE) df4 <- read_xlsx(xlsxFile, sheet = 2, skipEmptyRows = FALSE, colNames = TRUE) all.equal(df3, df4) #> [1] TRUE  wb <- wb_load(system.file(\"extdata\", \"readTest.xlsx\", package = \"openxlsx2\")) df3 <- read_xlsx(wb,   sheet = 2, skipEmptyRows = FALSE,   cols = c(1, 4), rows = c(1, 3, 4) )"},{"path":"/dev/reference/read_xml.html","id":null,"dir":"Reference","previous_headings":"","what":"read xml file — read_xml","title":"read xml file — read_xml","text":"read xml file","code":""},{"path":"/dev/reference/read_xml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read xml file — read_xml","text":"","code":"read_xml(   xml,   pointer = TRUE,   escapes = FALSE,   declaration = FALSE,   whitespace = TRUE,   empty_tags = FALSE,   skip_control = TRUE )"},{"path":"/dev/reference/read_xml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read xml file — read_xml","text":"xml something read character string file pointer pointer returned? escapes bool characters like \"&\" escaped. default escapes. Assuming input already provides valid information. declaration declaration imported whitespace whitespace pcdata imported empty_tags <b/> <b><\/b> returned skip_control whitespace character exported","code":""},{"path":"/dev/reference/read_xml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"read xml file — read_xml","text":"Read xml files strings pointer checks input valid XML. input read character object, reevaluated every time called. pointer evaluated , lives lifetime R session gc().","code":""},{"path":"/dev/reference/read_xml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"read xml file — read_xml","text":"","code":"# a pointer   x <- read_xml(\"<a><b/><\/a>\")   print(x) #> <a> #>  <b /> #> <\/a>   print(x, raw = TRUE) #> <a><b/><\/a>   str(x) #> Class 'pugi_xml' <externalptr>  #>  - attr(*, \"escapes\")= logi FALSE #>  - attr(*, \"empty_tags\")= logi FALSE #>  - attr(*, \"skip_control\")= logi TRUE    # a character   y <- read_xml(\"<a><b/><\/a>\", pointer = FALSE)   print(y) #> [1] \"<a><b/><\/a>\"   print(y, raw = TRUE) #> [1] \"<a><b/><\/a>\"   str(y) #>  chr \"<a><b/><\/a>\"    # Errors if the import was unsuccessful   try(z <- read_xml(\"<a><b/>\")) #> Error : xml import unsuccessfull    xml <- '<?xml test=\"yay\" ?><a>A & B<\/a>'   # difference in escapes   read_xml(xml, escapes = TRUE, pointer = FALSE) #> [1] \"<a>A &amp; B<\/a>\"   read_xml(xml, escapes = FALSE, pointer = FALSE) #> [1] \"<a>A & B<\/a>\"   read_xml(xml, escapes = TRUE) #> <a>A &amp; B<\/a>   read_xml(xml, escapes = FALSE) #> <a>A & B<\/a>    # read declaration   read_xml(xml, declaration = TRUE) #> <?xml test=\"yay\"?> #> <a>A & B<\/a>"},{"path":"/dev/reference/select_active_sheet.html","id":null,"dir":"Reference","previous_headings":"","what":"get and set table of sheets and their state as selected and active — select_active_sheet","title":"get and set table of sheets and their state as selected and active — select_active_sheet","text":"Multiple sheets can selected, single one can active (visible). visible sheet, must necessarily selected sheet.","code":""},{"path":"/dev/reference/select_active_sheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get and set table of sheets and their state as selected and active — select_active_sheet","text":"","code":"wb_get_active_sheet(wb)  wb_set_active_sheet(wb, sheet)  wb_get_selected(wb)  wb_set_selected(wb, sheet)"},{"path":"/dev/reference/select_active_sheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get and set table of sheets and their state as selected and active — select_active_sheet","text":"wb workbook sheet sheet name workbook","code":""},{"path":"/dev/reference/select_active_sheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get and set table of sheets and their state as selected and active — select_active_sheet","text":"data frame tabSelected names","code":""},{"path":"/dev/reference/select_active_sheet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get and set table of sheets and their state as selected and active — select_active_sheet","text":"","code":"wb <- wb_load(file = system.file(\"extdata\", \"loadExample.xlsx\", package = \"openxlsx2\"))   # testing is the selected sheet   wb_get_selected(wb) #>   tabSelected workbookViewId        names #> 1                          0   IrisSample #> 2           1              0      testing #> 3                          0       mtcars #> 4                          0 mtCars Pivot   # change the selected sheet to IrisSample   wb <- wb_set_selected(wb, \"IrisSample\")   # get the active sheet   wb_get_active_sheet(wb) #> [1] 2   # change the selected sheet to IrisSample   wb <- wb_set_active_sheet(wb, sheet = \"IrisSample\")"},{"path":"/dev/reference/sheet_visibility.html","id":null,"dir":"Reference","previous_headings":"","what":"Get/set worksheet visible state — sheet_visibility","title":"Get/set worksheet visible state — sheet_visibility","text":"Get set worksheet visible state","code":""},{"path":"/dev/reference/sheet_visibility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get/set worksheet visible state — sheet_visibility","text":"","code":"wb_get_sheet_visibility(wb)  wb_set_sheet_visibility(wb, sheet = current_sheet(), value)"},{"path":"/dev/reference/sheet_visibility.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get/set worksheet visible state — sheet_visibility","text":"wb wbWorkbook object sheet Worksheet identifier value logical/character vector length sheet","code":""},{"path":"/dev/reference/sheet_visibility.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get/set worksheet visible state — sheet_visibility","text":"Character vector worksheet names. Vector \"hidden\", \"visible\", \"veryHidden\"","code":""},{"path":"/dev/reference/sheet_visibility.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get/set worksheet visible state — sheet_visibility","text":"","code":"wb <- wb_workbook() wb$add_worksheet(sheet = \"S1\", visible = FALSE) wb$add_worksheet(sheet = \"S2\", visible = TRUE) wb$add_worksheet(sheet = \"S3\", visible = FALSE)  wb$get_sheet_visibility() #> [1] \"hidden\"  \"visible\" \"hidden\"  wb$set_sheet_visibility(1, TRUE)         ## show sheet 1 wb$set_sheet_visibility(2, FALSE)        ## hide sheet 2 wb$set_sheet_visibility(3, \"hidden\")     ## hide sheet 3 wb$set_sheet_visibility(3, \"veryHidden\") ## hide sheet 3 from UI"},{"path":"/dev/reference/style_mgr.html","id":null,"dir":"Reference","previous_headings":"","what":"style manager — style_mgr","title":"style manager — style_mgr","text":"style manager style manager","code":""},{"path":"/dev/reference/style_mgr.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"style manager — style_mgr","text":"numfmt numfmt-ids font font-ids fill fill-ids border border-ids xf xf-ids dxf dxf-ids tableStyle tableStyle-ids defaultTableStyle defaultTableStyle defaultPivotStyle defaultPivotStyle styles styles xml","code":""},{"path":[]},{"path":"/dev/reference/style_mgr.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"style manager — style_mgr","text":"style_mgr$new() style_mgr$get_numfmt() style_mgr$get_font() style_mgr$get_fill() style_mgr$get_border() style_mgr$get_xf() style_mgr$get_dxf() style_mgr$get_numfmt_id() style_mgr$get_font_id() style_mgr$get_fill_id() style_mgr$get_border_id() style_mgr$get_xf_id() style_mgr$get_dxf_id() style_mgr$get_tableStyle_id() style_mgr$next_numfmt_id() style_mgr$next_font_id() style_mgr$next_fill_id() style_mgr$next_border_id() style_mgr$next_xf_id() style_mgr$next_dxf_id() style_mgr$next_tableStyle_id() style_mgr$add() style_mgr$clone()","code":""},{"path":"/dev/reference/style_mgr.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"style manager — style_mgr","text":"Creates new wbStylesMgr object","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$new(   numfmt = NA,   font = NA,   fill = NA,   border = NA,   xf = NA,   dxf = NA,   styles = NA )"},{"path":"/dev/reference/style_mgr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"style manager — style_mgr","text":"numfmt numfmt font font fill fill border border xf xf dxf dxf styles styles","code":""},{"path":"/dev/reference/style_mgr.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"style manager — style_mgr","text":"wbStylesMgr object","code":""},{"path":"/dev/reference/style_mgr.html","id":"method-get-numfmt-","dir":"Reference","previous_headings":"","what":"Method get_numfmt()","title":"style manager — style_mgr","text":"get numfmt ids","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$get_numfmt()"},{"path":"/dev/reference/style_mgr.html","id":"method-get-font-","dir":"Reference","previous_headings":"","what":"Method get_font()","title":"style manager — style_mgr","text":"get font ids","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$get_font()"},{"path":"/dev/reference/style_mgr.html","id":"method-get-fill-","dir":"Reference","previous_headings":"","what":"Method get_fill()","title":"style manager — style_mgr","text":"get fill ids","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$get_fill()"},{"path":"/dev/reference/style_mgr.html","id":"method-get-border-","dir":"Reference","previous_headings":"","what":"Method get_border()","title":"style manager — style_mgr","text":"get border ids","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$get_border()"},{"path":"/dev/reference/style_mgr.html","id":"method-get-xf-","dir":"Reference","previous_headings":"","what":"Method get_xf()","title":"style manager — style_mgr","text":"get xf ids","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$get_xf()"},{"path":"/dev/reference/style_mgr.html","id":"method-get-dxf-","dir":"Reference","previous_headings":"","what":"Method get_dxf()","title":"style manager — style_mgr","text":"get dxf ids","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$get_dxf()"},{"path":"/dev/reference/style_mgr.html","id":"method-get-numfmt-id-","dir":"Reference","previous_headings":"","what":"Method get_numfmt_id()","title":"style manager — style_mgr","text":"get numfmt id name","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$get_numfmt_id(name)"},{"path":"/dev/reference/style_mgr.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"style manager — style_mgr","text":"name name","code":""},{"path":"/dev/reference/style_mgr.html","id":"method-get-font-id-","dir":"Reference","previous_headings":"","what":"Method get_font_id()","title":"style manager — style_mgr","text":"get font id name","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$get_font_id(name)"},{"path":"/dev/reference/style_mgr.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"style manager — style_mgr","text":"name name","code":""},{"path":"/dev/reference/style_mgr.html","id":"method-get-fill-id-","dir":"Reference","previous_headings":"","what":"Method get_fill_id()","title":"style manager — style_mgr","text":"get fill id name","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$get_fill_id(name)"},{"path":"/dev/reference/style_mgr.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"style manager — style_mgr","text":"name name","code":""},{"path":"/dev/reference/style_mgr.html","id":"method-get-border-id-","dir":"Reference","previous_headings":"","what":"Method get_border_id()","title":"style manager — style_mgr","text":"get border id name","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$get_border_id(name)"},{"path":"/dev/reference/style_mgr.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"style manager — style_mgr","text":"name name","code":""},{"path":"/dev/reference/style_mgr.html","id":"method-get-xf-id-","dir":"Reference","previous_headings":"","what":"Method get_xf_id()","title":"style manager — style_mgr","text":"get xf id name","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$get_xf_id(name)"},{"path":"/dev/reference/style_mgr.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"style manager — style_mgr","text":"name name","code":""},{"path":"/dev/reference/style_mgr.html","id":"method-get-dxf-id-","dir":"Reference","previous_headings":"","what":"Method get_dxf_id()","title":"style manager — style_mgr","text":"get dxf id name","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$get_dxf_id(name)"},{"path":"/dev/reference/style_mgr.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"style manager — style_mgr","text":"name name","code":""},{"path":"/dev/reference/style_mgr.html","id":"method-get-tablestyle-id-","dir":"Reference","previous_headings":"","what":"Method get_tableStyle_id()","title":"style manager — style_mgr","text":"get tableStyle id name","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$get_tableStyle_id(name)"},{"path":"/dev/reference/style_mgr.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"style manager — style_mgr","text":"name name","code":""},{"path":"/dev/reference/style_mgr.html","id":"method-next-numfmt-id-","dir":"Reference","previous_headings":"","what":"Method next_numfmt_id()","title":"style manager — style_mgr","text":"get next numfmt id","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$next_numfmt_id()"},{"path":"/dev/reference/style_mgr.html","id":"method-next-font-id-","dir":"Reference","previous_headings":"","what":"Method next_font_id()","title":"style manager — style_mgr","text":"get next font id","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$next_font_id()"},{"path":"/dev/reference/style_mgr.html","id":"method-next-fill-id-","dir":"Reference","previous_headings":"","what":"Method next_fill_id()","title":"style manager — style_mgr","text":"get next fill id","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$next_fill_id()"},{"path":"/dev/reference/style_mgr.html","id":"method-next-border-id-","dir":"Reference","previous_headings":"","what":"Method next_border_id()","title":"style manager — style_mgr","text":"get next border id","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$next_border_id()"},{"path":"/dev/reference/style_mgr.html","id":"method-next-xf-id-","dir":"Reference","previous_headings":"","what":"Method next_xf_id()","title":"style manager — style_mgr","text":"get next xf id","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$next_xf_id()"},{"path":"/dev/reference/style_mgr.html","id":"method-next-dxf-id-","dir":"Reference","previous_headings":"","what":"Method next_dxf_id()","title":"style manager — style_mgr","text":"get next dxf id","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$next_dxf_id()"},{"path":"/dev/reference/style_mgr.html","id":"method-next-tablestyle-id-","dir":"Reference","previous_headings":"","what":"Method next_tableStyle_id()","title":"style manager — style_mgr","text":"get next tableStyle id","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$next_tableStyle_id()"},{"path":"/dev/reference/style_mgr.html","id":"method-add-","dir":"Reference","previous_headings":"","what":"Method add()","title":"style manager — style_mgr","text":"add entry","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$add(style, style_name, skip_duplicates = TRUE)"},{"path":"/dev/reference/style_mgr.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"style manager — style_mgr","text":"style new_style style_name unique name identifying style skip_duplicates duplicates added?","code":""},{"path":"/dev/reference/style_mgr.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"style manager — style_mgr","text":"objects class cloneable method.","code":""},{"path":"/dev/reference/style_mgr.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"style manager — style_mgr","text":"","code":"style_mgr$clone(deep = FALSE)"},{"path":"/dev/reference/style_mgr.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"style manager — style_mgr","text":"deep Whether make deep clone.","code":""},{"path":"/dev/reference/style_mgr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"style manager — style_mgr","text":"","code":"xlsxFile <- system.file(\"extdata\", \"oxlsx2_sheet.xlsx\", package = \"openxlsx2\") wb <- wb_load(xlsxFile)  # ## start style mgr # style <- style_mgr$new(wb) # style$initialize(wb)  # wb$styles_mgr$get_numfmt() |> print() # wb$styles_mgr$next_numfmt_id() |> print() # wb$styles_mgr$get_numfmt_id(\"numFmt-166\")  # create new number format new_numfmt <- create_numfmt(numFmtId = wb$styles_mgr$next_numfmt_id(), formatCode = \"#,#\")  # add it via stylemgr wb$styles_mgr$add(new_numfmt, \"test\")  ## get numfmts (invisible) # z <- wb$styles_mgr$get_numfmt() # z wb$styles_mgr$styles$numFmts #> [1] \"<numFmt numFmtId=\\\"164\\\" formatCode=\\\"mmm\\\\-yy\\\"/>\" #> [2] \"<numFmt numFmtId=\\\"165\\\" formatCode=\\\"#,##0,\\\"/>\"   #> [3] \"<numFmt numFmtId=\\\"166\\\" formatCode=\\\"#0\\\"/>\"       #> [4] \"<numFmt numFmtId=\\\"167\\\" formatCode=\\\"0.00\\\\ %\\\"/>\" #> [5] \"<numFmt numFmtId=\\\"168\\\" formatCode=\\\"0\\\\ %\\\"/>\"    #> [6] \"<numFmt numFmtId=\\\"169\\\" formatCode=\\\"#,#\\\"/>\"       ## create and add huge font new_huge_font <- create_font(sz = \"20\", name = \"Arial\", b = \"1\",                              color = wb_color(hex = \"FFFFFFFF\")) wb$styles_mgr$add(new_huge_font, \"arial_huge\")  ## create another font new_font <- create_font(name = \"Arial\") wb$styles_mgr$add(new_font, \"arial\")  ## create and add new fill new_fill <- create_fill(patternType = \"solid\", fgColor = wb_color(hex = \"FF00224B\")) wb$styles_mgr$add(new_fill, \"blue\")  # create new style with numfmt enabled head_xf <- create_cell_style(   horizontal = \"center\",   textRotation = \"45\",   numFmtId = \"0\",   fontId = wb$styles_mgr$get_font_id(\"arial_huge\"),   fillId = wb$styles_mgr$get_fill_id(\"blue\") )  new_xf <- create_cell_style(   numFmtId = wb$styles_mgr$get_numfmt_id(\"test\"),   fontId = wb$styles_mgr$get_font_id(\"arial\") )  ## add new styles wb$styles_mgr$add(head_xf, \"head_xf\") wb$styles_mgr$add(new_xf, \"new_xf\")  ## get cell style ids (invisible) # z <- wb$styles_mgr$get_xf()  ## get cell style id # wb$styles_mgr$get_xf_id(\"new_xf\")   ## assign styles to cells wb$set_cell_style(\"SUM\", \"B3:I3\", wb$styles_mgr$get_xf_id(\"head_xf\")) wb$set_cell_style(\"SUM\", \"C7:C16\", wb$styles_mgr$get_xf_id(\"new_xf\")) # wb_open(wb)"},{"path":"/dev/reference/styles_on_sheet.html","id":null,"dir":"Reference","previous_headings":"","what":"get all styles on a sheet — styles_on_sheet","title":"get all styles on a sheet — styles_on_sheet","text":"get styles sheet","code":""},{"path":"/dev/reference/styles_on_sheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get all styles on a sheet — styles_on_sheet","text":"","code":"styles_on_sheet(wb, sheet)"},{"path":"/dev/reference/styles_on_sheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get all styles on a sheet — styles_on_sheet","text":"wb workbook sheet worksheet","code":""},{"path":"/dev/reference/temp_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function to create temporary directory for testing purpose — temp_xlsx","title":"helper function to create temporary directory for testing purpose — temp_xlsx","text":"helper function create temporary directory testing purpose","code":""},{"path":"/dev/reference/temp_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function to create temporary directory for testing purpose — temp_xlsx","text":"","code":"temp_xlsx(name = \"temp_xlsx\", macros = FALSE)"},{"path":"/dev/reference/temp_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function to create temporary directory for testing purpose — temp_xlsx","text":"name temp file macros logical file extension xlsm xlsx","code":""},{"path":"/dev/reference/waivers.html","id":null,"dir":"Reference","previous_headings":"","what":"openxlsx2 waivers — waivers","title":"openxlsx2 waivers — waivers","text":"Waiver functions openxlsx2 functions","code":""},{"path":"/dev/reference/waivers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"openxlsx2 waivers — waivers","text":"","code":"current_sheet()  next_sheet()  na_strings()"},{"path":"/dev/reference/waivers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"openxlsx2 waivers — waivers","text":"object class openxlsx2_waiver","code":""},{"path":"/dev/reference/wbChartSheet.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class for a Workbook Chart Sheet — wbChartSheet","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"R6 class Workbook Chart Sheet R6 class Workbook Chart Sheet","code":""},{"path":"/dev/reference/wbChartSheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"character vector xml","code":""},{"path":"/dev/reference/wbChartSheet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"chart sheet","code":""},{"path":"/dev/reference/wbChartSheet.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"sheetPr Sheet something? sheetViews Something sheetProtection sheetProtection customSheetViews customSheetViews pageMargins page margins pageSetup pageSetup headerFooter headerFooter drawing drawing drawingHF drawingHF picture picture webPublishItems webPublishItems #' @field hyperlinks hyperlinks hyperlinks = NULL, relships relships","code":""},{"path":[]},{"path":"/dev/reference/wbChartSheet.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"wbChartSheet$new() wbChartSheet$get_prior_sheet_data() wbChartSheet$set_sheetview() wbChartSheet$clone()","code":""},{"path":"/dev/reference/wbChartSheet.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"Create new workbook chart sheet object","code":""},{"path":"/dev/reference/wbChartSheet.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"","code":"wbChartSheet$new(tabColor = tabColor)"},{"path":"/dev/reference/wbChartSheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"tabColor character tab color set","code":""},{"path":"/dev/reference/wbChartSheet.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"wbChartSheet object","code":""},{"path":"/dev/reference/wbChartSheet.html","id":"method-get-prior-sheet-data-","dir":"Reference","previous_headings":"","what":"Method get_prior_sheet_data()","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"get (prior) sheet data","code":""},{"path":"/dev/reference/wbChartSheet.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"","code":"wbChartSheet$get_prior_sheet_data()"},{"path":"/dev/reference/wbChartSheet.html","id":"method-set-sheetview-","dir":"Reference","previous_headings":"","what":"Method set_sheetview()","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"add sheetview","code":""},{"path":"/dev/reference/wbChartSheet.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"","code":"wbChartSheet$set_sheetview(   colorId = NULL,   defaultGridColor = NULL,   rightToLeft = NULL,   showFormulas = NULL,   showGridLines = NULL,   showOutlineSymbols = NULL,   showRowColHeaders = NULL,   showRuler = NULL,   showWhiteSpace = NULL,   showZeros = NULL,   tabSelected = NULL,   topLeftCell = NULL,   view = NULL,   windowProtection = NULL,   workbookViewId = NULL,   zoomScale = NULL,   zoomScaleNormal = NULL,   zoomScalePageLayoutView = NULL,   zoomScaleSheetLayoutView = NULL )"},{"path":"/dev/reference/wbChartSheet.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"colorId colorId defaultGridColor defaultGridColor rightToLeft rightToLeft showFormulas showFormulas showGridLines showGridLines showOutlineSymbols showOutlineSymbols showRowColHeaders showRowColHeaders showRuler showRuler showWhiteSpace showWhiteSpace showZeros showZeros tabSelected tabSelected topLeftCell topLeftCell view view windowProtection windowProtection workbookViewId workbookViewId zoomScale zoomScale zoomScaleNormal zoomScaleNormal zoomScalePageLayoutView zoomScalePageLayoutView zoomScaleSheetLayoutView zoomScaleSheetLayoutView","code":""},{"path":"/dev/reference/wbChartSheet.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"wbWorksheetObject, invisibly","code":""},{"path":"/dev/reference/wbChartSheet.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"objects class cloneable method.","code":""},{"path":"/dev/reference/wbChartSheet.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"","code":"wbChartSheet$clone(deep = FALSE)"},{"path":"/dev/reference/wbChartSheet.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Chart Sheet — wbChartSheet","text":"deep Whether make deep clone.","code":""},{"path":"/dev/reference/wbColour.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new wbColour object — wb_color","title":"Create a new wbColour object — wb_color","text":"Create new wbColour object","code":""},{"path":"/dev/reference/wbColour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new wbColour object — wb_color","text":"","code":"wb_color(   name = NULL,   auto = NULL,   indexed = NULL,   hex = NULL,   theme = NULL,   tint = NULL )"},{"path":"/dev/reference/wbColour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new wbColour object — wb_color","text":"name name color known R auto boolean. indexed indexed color values. hex rgb color ARGB hex value \"FF000000\". theme zero based index referencing value theme. tint tint value applied. Range -1 (dark) 1 (light).","code":""},{"path":"/dev/reference/wbColour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new wbColour object — wb_color","text":"wbColour object","code":""},{"path":"/dev/reference/wbComment.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class for a Workbook Comments — wbComment","title":"R6 class for a Workbook Comments — wbComment","text":"R6 class Workbook Comments R6 class Workbook Comments","code":""},{"path":"/dev/reference/wbComment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R6 class for a Workbook Comments — wbComment","text":"wbComment object, invisibly; called side effects","code":""},{"path":"/dev/reference/wbComment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class for a Workbook Comments — wbComment","text":"comment","code":""},{"path":"/dev/reference/wbComment.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 class for a Workbook Comments — wbComment","text":"text Comment text author comment author style style comment visible logical, FALSE visible width Width comment ... units height Height comment ... units","code":""},{"path":[]},{"path":"/dev/reference/wbComment.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for a Workbook Comments — wbComment","text":"wbComment$new() wbComment$print() wbComment$clone()","code":""},{"path":"/dev/reference/wbComment.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class for a Workbook Comments — wbComment","text":"Creates new wbComment object","code":""},{"path":"/dev/reference/wbComment.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Comments — wbComment","text":"","code":"wbComment$new(text, author, style, visible = TRUE, width = 2, height = 4)"},{"path":"/dev/reference/wbComment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Comments — wbComment","text":"text Comment text author comment author style style comment visible logical, FALSE visible width Width comment ... units height Height comment ... units","code":""},{"path":"/dev/reference/wbComment.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Comments — wbComment","text":"wbComment object","code":""},{"path":"/dev/reference/wbComment.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"R6 class for a Workbook Comments — wbComment","text":"Prints object","code":""},{"path":"/dev/reference/wbComment.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Comments — wbComment","text":"","code":"wbComment$print()"},{"path":"/dev/reference/wbComment.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for a Workbook Comments — wbComment","text":"objects class cloneable method.","code":""},{"path":"/dev/reference/wbComment.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Comments — wbComment","text":"","code":"wbComment$clone(deep = FALSE)"},{"path":"/dev/reference/wbComment.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Comments — wbComment","text":"deep Whether make deep clone.","code":""},{"path":"/dev/reference/wbHyperlink.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class for a Workbook Hyperlink — wbHyperlink","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"R6 class Workbook Hyperlink R6 class Workbook Hyperlink","code":""},{"path":"/dev/reference/wbHyperlink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"character vector html is_external TRUE, otherwise NULL","code":""},{"path":"/dev/reference/wbHyperlink.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"hyperlink","code":""},{"path":"/dev/reference/wbHyperlink.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"ref ref target target location location display display is_external is_external","code":""},{"path":[]},{"path":"/dev/reference/wbHyperlink.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"wbHyperlink$new() wbHyperlink$to_xml() wbHyperlink$to_target_xml() wbHyperlink$clone()","code":""},{"path":"/dev/reference/wbHyperlink.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"Creates new wbHyperlink object","code":""},{"path":"/dev/reference/wbHyperlink.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"","code":"wbHyperlink$new(ref, target, location, display = NULL, is_external = TRUE)"},{"path":"/dev/reference/wbHyperlink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"ref ref target target location location display display is_external is_external","code":""},{"path":"/dev/reference/wbHyperlink.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"wbHyperlink object","code":""},{"path":"/dev/reference/wbHyperlink.html","id":"method-to-xml-","dir":"Reference","previous_headings":"","what":"Method to_xml()","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"Convert xml","code":""},{"path":"/dev/reference/wbHyperlink.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"","code":"wbHyperlink$to_xml(id)"},{"path":"/dev/reference/wbHyperlink.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"id ???","code":""},{"path":"/dev/reference/wbHyperlink.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"character vector xml","code":""},{"path":"/dev/reference/wbHyperlink.html","id":"method-to-target-xml-","dir":"Reference","previous_headings":"","what":"Method to_target_xml()","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"Convert target xml","code":""},{"path":"/dev/reference/wbHyperlink.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"","code":"wbHyperlink$to_target_xml(id)"},{"path":"/dev/reference/wbHyperlink.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"id ???","code":""},{"path":"/dev/reference/wbHyperlink.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"objects class cloneable method.","code":""},{"path":"/dev/reference/wbHyperlink.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"","code":"wbHyperlink$clone(deep = FALSE)"},{"path":"/dev/reference/wbHyperlink.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Hyperlink — wbHyperlink","text":"deep Whether make deep clone.","code":""},{"path":"/dev/reference/wbSheetData.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class for a Workbook Hyperlink — wbSheetData","title":"R6 class for a Workbook Hyperlink — wbSheetData","text":"R6 class Workbook Hyperlink R6 class Workbook Hyperlink","code":""},{"path":"/dev/reference/wbSheetData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Hyperlink — wbSheetData","text":"","code":"wb_sheet_data()"},{"path":"/dev/reference/wbSheetData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class for a Workbook Hyperlink — wbSheetData","text":"hyperlink","code":""},{"path":"/dev/reference/wbSheetData.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 class for a Workbook Hyperlink — wbSheetData","text":"row_attr row_attr cc cc cc_out cc_out","code":""},{"path":[]},{"path":"/dev/reference/wbSheetData.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for a Workbook Hyperlink — wbSheetData","text":"wbSheetData$new() wbSheetData$clone()","code":""},{"path":"/dev/reference/wbSheetData.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class for a Workbook Hyperlink — wbSheetData","text":"Creates new wbSheetData object","code":""},{"path":"/dev/reference/wbSheetData.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Hyperlink — wbSheetData","text":"","code":"wbSheetData$new()"},{"path":"/dev/reference/wbSheetData.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Hyperlink — wbSheetData","text":"wbSheetData object","code":""},{"path":"/dev/reference/wbSheetData.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for a Workbook Hyperlink — wbSheetData","text":"objects class cloneable method.","code":""},{"path":"/dev/reference/wbSheetData.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Hyperlink — wbSheetData","text":"","code":"wbSheetData$clone(deep = FALSE)"},{"path":"/dev/reference/wbSheetData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Hyperlink — wbSheetData","text":"deep Whether make deep clone.","code":""},{"path":"/dev/reference/wbWorkbook.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class for a Workbook — wbWorkbook","title":"R6 class for a Workbook — wbWorkbook","text":"R6 class Workbook R6 class Workbook","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R6 class for a Workbook — wbWorkbook","text":"integer position sheet wbWorkbook object wbWorkbook object wbWorkbook object wbWorkbook object named  character vector sheet names order.  names represent original value worksheet prior character substitutions. wbWorkbook object wbWorkbook object wbWorkbook object wbWorkbook object wbWorkbook object wbWorkbook object wbWorkbook object wbWorkbook object wbWorkbook object wbWorkbook object sheet tables.  character() empty wbWorkbook object wbWorkbook object wbWorkbook object wbWorkbook object wbWorkbook object wbWorkbook object Returns sheet visibility wbWorkbook object wbWorkbook object character vector cell styles","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class for a Workbook — wbWorkbook","text":"Workbook fun can either AVERAGE, COUNT, COUNTA, MAX, MIN, PRODUCT, STDEV, STDEVP, SUM, VAR, VARP minor helper wrapping xl_open entire thing","code":""},{"path":[]},{"path":"/dev/reference/wbWorkbook.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 class for a Workbook — wbWorkbook","text":"sheet_names sheet_names calcChain calcChain charts charts is_chartsheet is_chartsheet customXml customXml connections connections ctrlProps ctrlProps Content_Types Content_Types app app core core custom custom drawings drawings drawings_rels drawings_rels embeddings embeddings externalLinks externalLinks externalLinksRels externalLinksRels headFoot headFoot media media metadata metadata persons persons pivotTables pivotTables pivotTables.xml.rels pivotTables.xml.rels pivotDefinitions pivotDefinitions pivotRecords pivotRecords pivotDefinitionsRels pivotDefinitionsRels queryTables queryTables slicers slicers slicerCaches slicerCaches sharedStrings sharedStrings styles_mgr styles_mgr tables tables tables.xml.rels tables.xml.rels theme theme vbaProject vbaProject vml vml vml_rels vml_rels comments comments threadComments threadComments workbook workbook workbook.xml.rels workbook.xml.rels worksheets worksheets worksheets_rels worksheets_rels sheetOrder sheet order.  Controls ordering worksheets worksheet names. path path creator character vector creators title title subject subject category category datetimeCreated datetime (POSIXt) workbook created.  Defaults current Sys.time() workbook object created, Excel files saved.","code":""},{"path":[]},{"path":"/dev/reference/wbWorkbook.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook$new() wbWorkbook$append() wbWorkbook$append_sheets() wbWorkbook$validate_sheet() wbWorkbook$add_chartsheet() wbWorkbook$add_worksheet() wbWorkbook$clone_worksheet() wbWorkbook$add_data() wbWorkbook$add_data_table() wbWorkbook$add_pivot_table() wbWorkbook$add_formula() wbWorkbook$add_style() wbWorkbook$to_df() wbWorkbook$load() wbWorkbook$save() wbWorkbook$open() wbWorkbook$buildTable() wbWorkbook$update_table() wbWorkbook$copy_cells() wbWorkbook$get_base_font() wbWorkbook$set_base_font() wbWorkbook$set_bookview() wbWorkbook$get_sheet_names() wbWorkbook$set_sheet_names() wbWorkbook$set_row_heights() wbWorkbook$remove_row_heights() wbWorkbook$createCols() wbWorkbook$group_cols() wbWorkbook$ungroup_cols() wbWorkbook$remove_col_widths() wbWorkbook$set_col_widths() wbWorkbook$group_rows() wbWorkbook$ungroup_rows() wbWorkbook$remove_worksheet() wbWorkbook$add_data_validation() wbWorkbook$merge_cells() wbWorkbook$unmerge_cells() wbWorkbook$freeze_pane() wbWorkbook$add_comment() wbWorkbook$remove_comment() wbWorkbook$add_conditional_formatting() wbWorkbook$add_image() wbWorkbook$add_plot() wbWorkbook$add_drawing() wbWorkbook$add_chart_xml() wbWorkbook$add_mschart() wbWorkbook$add_form_control() wbWorkbook$print() wbWorkbook$protect() wbWorkbook$protect_worksheet() wbWorkbook$set_creators() wbWorkbook$add_creators() wbWorkbook$remove_creators() wbWorkbook$set_last_modified_by() wbWorkbook$page_setup() wbWorkbook$set_header_footer() wbWorkbook$get_tables() wbWorkbook$remove_tables() wbWorkbook$add_filter() wbWorkbook$remove_filter() wbWorkbook$grid_lines() wbWorkbook$add_named_region() wbWorkbook$remove_named_region() wbWorkbook$set_order() wbWorkbook$get_sheet_visibility() wbWorkbook$set_sheet_visibility() wbWorkbook$add_page_break() wbWorkbook$clean_sheet() wbWorkbook$add_border() wbWorkbook$add_fill() wbWorkbook$add_font() wbWorkbook$add_numfmt() wbWorkbook$add_cell_style() wbWorkbook$get_cell_style() wbWorkbook$set_cell_style() wbWorkbook$clone_sheet_style() wbWorkbook$add_sparklines() wbWorkbook$add_ignore_error() wbWorkbook$set_sheetview() wbWorkbook$clone()","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class for a Workbook — wbWorkbook","text":"Creates new wbWorkbook object","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$new(   creator = NULL,   title = NULL,   subject = NULL,   category = NULL,   datetimeCreated = Sys.time(),   theme = NULL )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"creator character vector creators.  Duplicated ignored. title title subject subject category category datetimeCreated datetime (POSIXt) workbook created.  Defaults current Sys.time() workbook object created, Excel files saved. theme Optional theme identified string number","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-append-","dir":"Reference","previous_headings":"","what":"Method append()","title":"R6 class for a Workbook — wbWorkbook","text":"Append field. method intended internal use","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$append(field, value)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"field valid field name value value field","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-append-sheets-","dir":"Reference","previous_headings":"","what":"Method append_sheets()","title":"R6 class for a Workbook — wbWorkbook","text":"Append self$workbook$sheets method intended internal use","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$append_sheets(value)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"value value self$workbook$sheets","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-validate-sheet-","dir":"Reference","previous_headings":"","what":"Method validate_sheet()","title":"R6 class for a Workbook — wbWorkbook","text":"validate sheet","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$validate_sheet(sheet)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet character sheet name integer location","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-chartsheet-","dir":"Reference","previous_headings":"","what":"Method add_chartsheet()","title":"R6 class for a Workbook — wbWorkbook","text":"Add chart sheet workbook","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_chartsheet(   sheet = next_sheet(),   tabColor = NULL,   zoom = 100,   visible = c(\"true\", \"false\", \"hidden\", \"visible\", \"veryhidden\"),   ... )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet tabColor tabColor zoom zoom visible visible ... ...","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-worksheet-","dir":"Reference","previous_headings":"","what":"Method add_worksheet()","title":"R6 class for a Workbook — wbWorkbook","text":"Add worksheet wbWorkbook object","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_worksheet(   sheet = next_sheet(),   gridLines = TRUE,   rowColHeaders = TRUE,   tabColor = NULL,   zoom = 100,   header = NULL,   footer = NULL,   oddHeader = header,   oddFooter = footer,   evenHeader = header,   evenFooter = footer,   firstHeader = header,   firstFooter = footer,   visible = c(\"true\", \"false\", \"hidden\", \"visible\", \"veryhidden\"),   hasDrawing = FALSE,   paperSize = getOption(\"openxlsx2.paperSize\", default = 9),   orientation = getOption(\"openxlsx2.orientation\", default = \"portrait\"),   hdpi = getOption(\"openxlsx2.hdpi\", default = getOption(\"openxlsx2.dpi\", default = 300)),   vdpi = getOption(\"openxlsx2.vdpi\", default = getOption(\"openxlsx2.dpi\", default = 300)),   ... )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet gridLines gridLines rowColHeaders rowColHeaders tabColor tabColor zoom zoom header header footer footer oddHeader oddHeader oddFooter oddFooter evenHeader evenHeader evenFooter evenFooter firstHeader firstHeader firstFooter firstFooter visible visible hasDrawing hasDrawing paperSize paperSize orientation orientation hdpi hdpi vdpi vdpi ... ...","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-clone-worksheet-","dir":"Reference","previous_headings":"","what":"Method clone_worksheet()","title":"R6 class for a Workbook — wbWorkbook","text":"Clone workbooksheet","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$clone_worksheet(old = current_sheet(), new = next_sheet())"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"old name worksheet clone new name new worksheet add","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-data-","dir":"Reference","previous_headings":"","what":"Method add_data()","title":"R6 class for a Workbook — wbWorkbook","text":"add data","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_data(   sheet = current_sheet(),   x,   startCol = 1,   startRow = 1,   dims = rowcol_to_dims(startRow, startCol),   array = FALSE,   colNames = TRUE,   rowNames = FALSE,   withFilter = FALSE,   name = NULL,   sep = \", \",   applyCellStyle = TRUE,   removeCellStyle = FALSE,   na.strings = na_strings(),   inline_strings = TRUE )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet x x startCol startCol startRow startRow dims dims array array colNames colNames rowNames rowNames withFilter withFilter name name sep sep applyCellStyle applyCellStyle removeCellStyle writing existing cells, cell style removed? na.strings Value used replacing NA values x. Default na_strings() uses special #N/value within workbook. inline_strings write characters inline strings return wbWorkbook object","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-data-table-","dir":"Reference","previous_headings":"","what":"Method add_data_table()","title":"R6 class for a Workbook — wbWorkbook","text":"add data table","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_data_table(   sheet = current_sheet(),   x,   startCol = 1,   startRow = 1,   dims = rowcol_to_dims(startRow, startCol),   colNames = TRUE,   rowNames = FALSE,   tableStyle = \"TableStyleLight9\",   tableName = NULL,   withFilter = TRUE,   sep = \", \",   firstColumn = FALSE,   lastColumn = FALSE,   bandedRows = TRUE,   bandedCols = FALSE,   applyCellStyle = TRUE,   removeCellStyle = FALSE,   na.strings = na_strings(),   inline_strings = TRUE )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet x x startCol startCol startRow startRow dims dims colNames colNames rowNames rowNames tableStyle tableStyle tableName tableName withFilter withFilter sep sep firstColumn firstColumn lastColumn lastColumn bandedRows bandedRows bandedCols bandedCols applyCellStyle applyCellStyle removeCellStyle writing existing cells, cell style removed? na.strings Value used replacing NA values x. Default na_strings() uses special #N/value within workbook. inline_strings write characters inline strings","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-pivot-table-","dir":"Reference","previous_headings":"","what":"Method add_pivot_table()","title":"R6 class for a Workbook — wbWorkbook","text":"add pivot table","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_pivot_table(   x,   sheet = next_sheet(),   dims = \"A3\",   filter,   rows,   cols,   data,   fun,   params )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"x wb_data object sheet worksheet dims worksheet cell pivot table placed filter character object names used filter rows character object names used rows cols character object names used cols data character object names used data fun character object functions used data params list parameters modify pivot table creation","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-formula-","dir":"Reference","previous_headings":"","what":"Method add_formula()","title":"R6 class for a Workbook — wbWorkbook","text":"add formula","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_formula(   sheet = current_sheet(),   x,   startCol = 1,   startRow = 1,   dims = rowcol_to_dims(startRow, startCol),   array = FALSE,   cm = FALSE,   applyCellStyle = TRUE,   removeCellStyle = FALSE )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet x x startCol startCol startRow startRow dims dims array array cm cm applyCellStyle applyCellStyle removeCellStyle writing existing cells, cell style removed?","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-style-","dir":"Reference","previous_headings":"","what":"Method add_style()","title":"R6 class for a Workbook — wbWorkbook","text":"add style","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_style(style = NULL, style_name = NULL)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"style style style_name style_name","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-to-df-","dir":"Reference","previous_headings":"","what":"Method to_df()","title":"R6 class for a Workbook — wbWorkbook","text":"to_df","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$to_df(   sheet,   startRow = 1,   startCol = NULL,   rowNames = FALSE,   colNames = TRUE,   skipEmptyRows = FALSE,   skipEmptyCols = FALSE,   skipHiddenRows = FALSE,   skipHiddenCols = FALSE,   rows = NULL,   cols = NULL,   detectDates = TRUE,   na.strings = \"#N/A\",   na.numbers = NA,   fillMergedCells = FALSE,   dims,   showFormula = FALSE,   convert = TRUE,   types,   named_region )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet Either sheet name index. missing first sheet workbook selected. startRow first row begin looking data. startCol first column begin looking data. rowNames TRUE, first col data used row names. colNames TRUE, first row data used column names. skipEmptyRows TRUE, empty rows skipped. skipEmptyCols TRUE, empty columns skipped. skipHiddenRows TRUE, hidden rows skipped. skipHiddenCols TRUE, hidden columns skipped. rows numeric vector specifying rows Excel file read. NULL, rows read. cols numeric vector specifying columns Excel file read. NULL, columns read. detectDates TRUE, attempt recognize dates perform conversion. na.strings character vector strings interpreted NA. Blank cells returned NA. na.numbers numeric vector digits interpreted NA. Blank cells returned NA. fillMergedCells TRUE, value merged cell given cells within merge. dims Character string type \"A1:B2\" optional dimensions imported. showFormula TRUE, underlying Excel formulas shown. convert TRUE, conversion dates numerics attempted. types named numeric indicating, type data. 0: character, 1: numeric, 2: date, 3: posixt, 4:logical. Names must match returned data named_region Character string named_region (defined name table). sheet selected, first appearance selected.","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"data frame","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-load-","dir":"Reference","previous_headings":"","what":"Method load()","title":"R6 class for a Workbook — wbWorkbook","text":"load workbook","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$load(   file,   xlsxFile = NULL,   sheet,   data_only = FALSE,   calc_chain = FALSE )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"file file xlsxFile xlsxFile sheet sheet data_only data_only calc_chain calc_chain","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-save-","dir":"Reference","previous_headings":"","what":"Method save()","title":"R6 class for a Workbook — wbWorkbook","text":"Save workbook","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$save(path = self$path, overwrite = TRUE)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"path path save workbook overwrite FALSE, overwrite path exists","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-open-","dir":"Reference","previous_headings":"","what":"Method open()","title":"R6 class for a Workbook — wbWorkbook","text":"open wbWorkbook Excel.","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$open(interactive = NA)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"interactive FALSE throw warning open path. can manually set TRUE, otherwise NA (default) uses value returned base::interactive()","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-buildtable-","dir":"Reference","previous_headings":"","what":"Method buildTable()","title":"R6 class for a Workbook — wbWorkbook","text":"Build table","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$buildTable(   sheet = current_sheet(),   colNames,   ref,   showColNames,   tableStyle,   tableName,   withFilter,   totalsRowCount = 0,   showFirstColumn = 0,   showLastColumn = 0,   showRowStripes = 1,   showColumnStripes = 0 )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet colNames colNames ref ref showColNames showColNames tableStyle tableStyle tableName tableName withFilter withFilter totalsRowCount totalsRowCount showFirstColumn showFirstColumn showLastColumn showLastColumn showRowStripes showRowStripes showColumnStripes showColumnStripes","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorksheet object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-update-table-","dir":"Reference","previous_headings":"","what":"Method update_table()","title":"R6 class for a Workbook — wbWorkbook","text":"update data_table","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$update_table(sheet = current_sheet(), dims = \"A1\", tabname)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet worksheet dims cell used start tabname tablename","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorksheet object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-copy-cells-","dir":"Reference","previous_headings":"","what":"Method copy_cells()","title":"R6 class for a Workbook — wbWorkbook","text":"copy cells around workbook","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$copy_cells(   sheet = current_sheet(),   dims = \"A1\",   data,   as_value = FALSE,   as_ref = FALSE,   transpose = FALSE )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet worksheet dims cell used start data wb_data object as_value copy value written as_ref references cell written transpose data written transposed","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorksheet object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-get-base-font-","dir":"Reference","previous_headings":"","what":"Method get_base_font()","title":"R6 class for a Workbook — wbWorkbook","text":"Get base font","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$get_base_font()"},{"path":"/dev/reference/wbWorkbook.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"list font","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-set-base-font-","dir":"Reference","previous_headings":"","what":"Method set_base_font()","title":"R6 class for a Workbook — wbWorkbook","text":"Get base font","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$set_base_font(   fontSize = 11,   fontColor = wb_color(theme = \"1\"),   fontName = \"Calibri\",   ... )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"fontSize fontSize fontColor fontColor fontName fontName ... ...","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-set-bookview-","dir":"Reference","previous_headings":"","what":"Method set_bookview()","title":"R6 class for a Workbook — wbWorkbook","text":"Set book views","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$set_bookview(   activeTab = NULL,   autoFilterDateGrouping = NULL,   firstSheet = NULL,   minimized = NULL,   showHorizontalScroll = NULL,   showSheetTabs = NULL,   showVerticalScroll = NULL,   tabRatio = NULL,   visibility = NULL,   windowHeight = NULL,   windowWidth = NULL,   xWindow = NULL,   yWindow = NULL )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"activeTab activeTab autoFilterDateGrouping autoFilterDateGrouping firstSheet firstSheet minimized minimized showHorizontalScroll showHorizontalScroll showSheetTabs showSheetTabs showVerticalScroll showVerticalScroll tabRatio tabRatio visibility visibility windowHeight windowHeight windowWidth windowWidth xWindow xWindow yWindow yWindow","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-get-sheet-names-","dir":"Reference","previous_headings":"","what":"Method get_sheet_names()","title":"R6 class for a Workbook — wbWorkbook","text":"Get sheet names","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$get_sheet_names()"},{"path":"/dev/reference/wbWorkbook.html","id":"method-set-sheet-names-","dir":"Reference","previous_headings":"","what":"Method set_sheet_names()","title":"R6 class for a Workbook — wbWorkbook","text":"Sets sheet name","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$set_sheet_names(old = NULL, new)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"old Old sheet name new New sheet name","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-set-row-heights-","dir":"Reference","previous_headings":"","what":"Method set_row_heights()","title":"R6 class for a Workbook — wbWorkbook","text":"Sets row height sheet","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$set_row_heights(   sheet = current_sheet(),   rows,   heights = NULL,   hidden = FALSE )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet rows rows heights heights hidden hidden","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-remove-row-heights-","dir":"Reference","previous_headings":"","what":"Method remove_row_heights()","title":"R6 class for a Workbook — wbWorkbook","text":"Sets row height sheet","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$remove_row_heights(sheet = current_sheet(), rows)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-23","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet rows rows","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly description creates column object worksheet","code":""},{"path":[]},{"path":"/dev/reference/wbWorkbook.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$createCols(sheet = current_sheet(), n, beg, end)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-24","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet n n beg beg end end","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-group-cols-","dir":"Reference","previous_headings":"","what":"Method group_cols()","title":"R6 class for a Workbook — wbWorkbook","text":"Group cols","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$group_cols(   sheet = current_sheet(),   cols,   collapsed = FALSE,   levels = NULL )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-25","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet cols cols collapsed collapsed levels levels","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-ungroup-cols-","dir":"Reference","previous_headings":"","what":"Method ungroup_cols()","title":"R6 class for a Workbook — wbWorkbook","text":"ungroup cols","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$ungroup_cols(sheet = current_sheet(), cols)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-26","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet cols = cols","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-remove-col-widths-","dir":"Reference","previous_headings":"","what":"Method remove_col_widths()","title":"R6 class for a Workbook — wbWorkbook","text":"Remove row heights worksheet","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$remove_col_widths(sheet = current_sheet(), cols)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-27","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet name index worksheet cols Indices columns remove custom width () .","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-set-col-widths-","dir":"Reference","previous_headings":"","what":"Method set_col_widths()","title":"R6 class for a Workbook — wbWorkbook","text":"Group cols","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-30","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$set_col_widths(   sheet = current_sheet(),   cols,   widths = 8.43,   hidden = FALSE )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-28","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet cols cols widths Width columns hidden logical vector determine cols hidden; values repeated across length cols","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-group-rows-","dir":"Reference","previous_headings":"","what":"Method group_rows()","title":"R6 class for a Workbook — wbWorkbook","text":"Group rows","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-31","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$group_rows(   sheet = current_sheet(),   rows,   collapsed = FALSE,   levels = NULL )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-29","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet rows rows collapsed collapsed levels levels","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-ungroup-rows-","dir":"Reference","previous_headings":"","what":"Method ungroup_rows()","title":"R6 class for a Workbook — wbWorkbook","text":"ungroup rows","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-32","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$ungroup_rows(sheet = current_sheet(), rows)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-30","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet rows rows","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-remove-worksheet-","dir":"Reference","previous_headings":"","what":"Method remove_worksheet()","title":"R6 class for a Workbook — wbWorkbook","text":"Remove worksheet","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-33","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$remove_worksheet(sheet = current_sheet())"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-31","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet worksheet delete","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-data-validation-","dir":"Reference","previous_headings":"","what":"Method add_data_validation()","title":"R6 class for a Workbook — wbWorkbook","text":"Adds data validation","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-34","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_data_validation(   sheet = current_sheet(),   cols,   rows,   type,   operator,   value,   allowBlank = TRUE,   showInputMsg = TRUE,   showErrorMsg = TRUE,   errorStyle = NULL,   errorTitle = NULL,   error = NULL,   promptTitle = NULL,   prompt = NULL )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-32","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet cols cols rows rows type type operator operator value value allowBlank allowBlank showInputMsg showInputMsg showErrorMsg showErrorMsg errorStyle icon shown options deal inputs. Default \"stop\" (cancel), else \"information\" (prompt popup) \"warning\" (prompt accept change input) errorTitle error title error error text promptTitle prompt title prompt prompt text","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-merge-cells-","dir":"Reference","previous_headings":"","what":"Method merge_cells()","title":"R6 class for a Workbook — wbWorkbook","text":"Set cell merging sheet","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-35","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$merge_cells(sheet = current_sheet(), rows = NULL, cols = NULL)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-33","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet rows, cols Row column specifications.","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-unmerge-cells-","dir":"Reference","previous_headings":"","what":"Method unmerge_cells()","title":"R6 class for a Workbook — wbWorkbook","text":"Removes cell merging sheet","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-36","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$unmerge_cells(sheet = current_sheet(), rows = NULL, cols = NULL)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-34","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet rows, cols Row column specifications.","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-freeze-pane-","dir":"Reference","previous_headings":"","what":"Method freeze_pane()","title":"R6 class for a Workbook — wbWorkbook","text":"Set freeze panes sheet","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-37","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$freeze_pane(   sheet = current_sheet(),   firstActiveRow = NULL,   firstActiveCol = NULL,   firstRow = FALSE,   firstCol = FALSE )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-35","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet firstActiveRow firstActiveRow firstActiveCol firstActiveCol firstRow firstRow firstCol firstCol","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-24","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-comment-","dir":"Reference","previous_headings":"","what":"Method add_comment()","title":"R6 class for a Workbook — wbWorkbook","text":"Add comment","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-38","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_comment(   sheet = current_sheet(),   col = NULL,   row = NULL,   dims = rowcol_to_dim(row, col),   comment )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-36","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet col column apply comment row row apply comment dims row column spreadsheet dimension, e.g. \"A1\" comment comment apply worksheet","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-remove-comment-","dir":"Reference","previous_headings":"","what":"Method remove_comment()","title":"R6 class for a Workbook — wbWorkbook","text":"Remove comment","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-39","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$remove_comment(   sheet = current_sheet(),   col = NULL,   row = NULL,   dims = rowcol_to_dims(row, col),   gridExpand = TRUE )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-37","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet col column apply comment row row apply comment dims row column spreadsheet dimension, e.g. \"A1\" gridExpand Remove comments inside grid. Similar dims \"A1:B2\"","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-conditional-formatting-","dir":"Reference","previous_headings":"","what":"Method add_conditional_formatting()","title":"R6 class for a Workbook — wbWorkbook","text":"Add conditional formatting","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-40","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_conditional_formatting(   sheet = current_sheet(),   cols,   rows,   rule = NULL,   style = NULL,   type = c(\"expression\", \"colorScale\", \"dataBar\", \"iconSet\", \"duplicatedValues\",     \"uniqueValues\", \"containsErrors\", \"notContainsErrors\", \"containsBlanks\",     \"notContainsBlanks\", \"containsText\", \"notContainsText\", \"beginsWith\", \"endsWith\",     \"between\", \"topN\", \"bottomN\"),   params = list(showValue = TRUE, gradient = TRUE, border = TRUE, percent = FALSE, rank =     5L) )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-38","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet cols cols rows rows rule rule style style type type params Additional parameters","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-image-","dir":"Reference","previous_headings":"","what":"Method add_image()","title":"R6 class for a Workbook — wbWorkbook","text":"Insert image sheet","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-41","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_image(   sheet = current_sheet(),   file,   width = 6,   height = 3,   startRow = 1,   startCol = 1,   rowOffset = 0,   colOffset = 0,   units = \"in\",   dpi = 300,   dims = rowcol_to_dim(startRow, startCol) )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-39","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet file file width width height height startRow startRow startCol startCol rowOffset rowOffset colOffset colOffset units units dpi dpi dims dims","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-25","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-plot-","dir":"Reference","previous_headings":"","what":"Method add_plot()","title":"R6 class for a Workbook — wbWorkbook","text":"Add plot. wrapper add_image()","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-42","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_plot(   sheet = current_sheet(),   width = 6,   height = 4,   xy = NULL,   startRow = 1,   startCol = 1,   rowOffset = 0,   colOffset = 0,   fileType = \"png\",   units = \"in\",   dpi = 300,   dims = rowcol_to_dim(startRow, startCol) )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-40","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet width width height height xy xy startRow startRow startCol startCol rowOffset rowOffset colOffset colOffset fileType fileType units units dpi dpi dims dims","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-drawing-","dir":"Reference","previous_headings":"","what":"Method add_drawing()","title":"R6 class for a Workbook — wbWorkbook","text":"Add xml drawing","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-43","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_drawing(   sheet = current_sheet(),   xml,   dims = NULL,   colOffset = 0,   rowOffset = 0 )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-41","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet xml xml dims dims colOffset, rowOffset offsets column row","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-chart-xml-","dir":"Reference","previous_headings":"","what":"Method add_chart_xml()","title":"R6 class for a Workbook — wbWorkbook","text":"Add xml drawing Add xml chart","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-44","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_chart_xml(   sheet = current_sheet(),   xml,   dims = NULL,   colOffset = 0,   rowOffset = 0 )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-42","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet xml xml dims dims colOffset, rowOffset startCol startRow","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-mschart-","dir":"Reference","previous_headings":"","what":"Method add_mschart()","title":"R6 class for a Workbook — wbWorkbook","text":"Add mschart chart workbook","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-45","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_mschart(   sheet = current_sheet(),   dims = NULL,   graph,   colOffset = 0,   rowOffset = 0 )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-43","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet graph appear dims dimensions sheet appear graph mschart graph colOffset, rowOffset startCol startRow","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-form-control-","dir":"Reference","previous_headings":"","what":"Method add_form_control()","title":"R6 class for a Workbook — wbWorkbook","text":"add form control workbook","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-46","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_form_control(   sheet = current_sheet(),   dims = \"A1\",   type = NULL,   text = NULL,   link = NULL,   range = NULL,   checked = FALSE )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-44","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet dims dims type type text text link link range range checked checked","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-26","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"R6 class for a Workbook — wbWorkbook","text":"Prints wbWorkbook object","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-47","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$print()"},{"path":"/dev/reference/wbWorkbook.html","id":"returns-27","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly; called side-effects","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-protect-","dir":"Reference","previous_headings":"","what":"Method protect()","title":"R6 class for a Workbook — wbWorkbook","text":"Protect workbook","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-48","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$protect(   protect = TRUE,   password = NULL,   lockStructure = FALSE,   lockWindows = FALSE,   type = 1,   fileSharing = FALSE,   username = unname(Sys.info()[\"user\"]),   readOnlyRecommended = FALSE )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-45","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"protect protect password password lockStructure lockStructure lockWindows lockWindows type type fileSharing fileSharing username username readOnlyRecommended readOnlyRecommended","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-28","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-protect-worksheet-","dir":"Reference","previous_headings":"","what":"Method protect_worksheet()","title":"R6 class for a Workbook — wbWorkbook","text":"protect worksheet","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-49","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$protect_worksheet(   sheet = current_sheet(),   protect = TRUE,   password = NULL,   properties = NULL )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-46","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet protect protect password password properties character vector properties lock.  Can one following: \"selectLockedCells\", \"selectUnlockedCells\", \"formatCells\", \"formatColumns\", \"formatRows\", \"insertColumns\", \"insertRows\", \"insertHyperlinks\", \"deleteColumns\", \"deleteRows\", \"sort\", \"autoFilter\", \"pivotTables\", \"objects\", \"scenarios\"","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-set-creators-","dir":"Reference","previous_headings":"","what":"Method set_creators()","title":"R6 class for a Workbook — wbWorkbook","text":"Set creator(s)","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-50","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$set_creators(creators)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-47","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"creators character vector creators set.  Duplicates ignored.","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-creators-","dir":"Reference","previous_headings":"","what":"Method add_creators()","title":"R6 class for a Workbook — wbWorkbook","text":"Add creator(s)","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-51","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_creators(creators)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-48","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"creators character vector creators add.  Duplicates ignored.","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-remove-creators-","dir":"Reference","previous_headings":"","what":"Method remove_creators()","title":"R6 class for a Workbook — wbWorkbook","text":"Remove creator(s)","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-52","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$remove_creators(creators)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-49","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"creators character vector creators remove.  duplicated removed.","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-set-last-modified-by-","dir":"Reference","previous_headings":"","what":"Method set_last_modified_by()","title":"R6 class for a Workbook — wbWorkbook","text":"Change last modified ","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-53","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$set_last_modified_by(LastModifiedBy = NULL)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-50","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"LastModifiedBy new value","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-29","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-page-setup-","dir":"Reference","previous_headings":"","what":"Method page_setup()","title":"R6 class for a Workbook — wbWorkbook","text":"page_setup()","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-54","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$page_setup(   sheet = current_sheet(),   orientation = NULL,   scale = 100,   left = 0.7,   right = 0.7,   top = 0.75,   bottom = 0.75,   header = 0.3,   footer = 0.3,   fitToWidth = FALSE,   fitToHeight = FALSE,   paperSize = NULL,   printTitleRows = NULL,   printTitleCols = NULL,   summaryRow = NULL,   summaryCol = NULL )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-51","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet orientation orientation scale scale left left right right top top bottom bottom header header footer footer fitToWidth fitToWidth fitToHeight fitToHeight paperSize paperSize printTitleRows printTitleRows printTitleCols printTitleCols summaryRow summaryRow summaryCol summaryCol","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-30","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-set-header-footer-","dir":"Reference","previous_headings":"","what":"Method set_header_footer()","title":"R6 class for a Workbook — wbWorkbook","text":"Sets headers footers","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-55","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$set_header_footer(   sheet = current_sheet(),   header = NULL,   footer = NULL,   evenHeader = NULL,   evenFooter = NULL,   firstHeader = NULL,   firstFooter = NULL )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-52","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet header header footer footer evenHeader evenHeader evenFooter evenFooter firstHeader firstHeader firstFooter firstFooter","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-31","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-get-tables-","dir":"Reference","previous_headings":"","what":"Method get_tables()","title":"R6 class for a Workbook — wbWorkbook","text":"get tables","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-56","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$get_tables(sheet = current_sheet())"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-53","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-remove-tables-","dir":"Reference","previous_headings":"","what":"Method remove_tables()","title":"R6 class for a Workbook — wbWorkbook","text":"remove tables","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-57","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$remove_tables(sheet = current_sheet(), table, remove_data = TRUE)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-54","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet table table remove_data removes data well","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-filter-","dir":"Reference","previous_headings":"","what":"Method add_filter()","title":"R6 class for a Workbook — wbWorkbook","text":"add filters","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-58","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_filter(sheet = current_sheet(), rows, cols)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-55","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet rows rows cols cols","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-remove-filter-","dir":"Reference","previous_headings":"","what":"Method remove_filter()","title":"R6 class for a Workbook — wbWorkbook","text":"remove filters","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-59","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$remove_filter(sheet = current_sheet())"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-56","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-grid-lines-","dir":"Reference","previous_headings":"","what":"Method grid_lines()","title":"R6 class for a Workbook — wbWorkbook","text":"grid lines","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-60","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$grid_lines(sheet = current_sheet(), show = FALSE, print = show)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-57","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet show show print print","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-named-region-","dir":"Reference","previous_headings":"","what":"Method add_named_region()","title":"R6 class for a Workbook — wbWorkbook","text":"add named region","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-61","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_named_region(   sheet = current_sheet(),   cols,   rows,   name,   localSheet = FALSE,   overwrite = FALSE,   comment = NULL,   customMenu = NULL,   description = NULL,   is_function = NULL,   functionGroupId = NULL,   help = NULL,   hidden = NULL,   localName = NULL,   publishToServer = NULL,   statusBar = NULL,   vbProcedure = NULL,   workbookParameter = NULL,   xml = NULL )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-58","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet cols cols rows rows name name localSheet localSheet overwrite overwrite comment comment customMenu customMenu description description is_function function functionGroupId function group id help help hidden hidden localName localName publishToServer publish server statusBar status bar vbProcedure wbProcedure workbookParameter workbookParameter xml xml","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-remove-named-region-","dir":"Reference","previous_headings":"","what":"Method remove_named_region()","title":"R6 class for a Workbook — wbWorkbook","text":"remove named region","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-62","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$remove_named_region(sheet = current_sheet(), name = NULL)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-59","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet name name","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-set-order-","dir":"Reference","previous_headings":"","what":"Method set_order()","title":"R6 class for a Workbook — wbWorkbook","text":"set worksheet order","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-63","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$set_order(sheets)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-60","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheets sheets","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-32","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorkbook object","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-get-sheet-visibility-","dir":"Reference","previous_headings":"","what":"Method get_sheet_visibility()","title":"R6 class for a Workbook — wbWorkbook","text":"Get sheet visibility","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-64","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$get_sheet_visibility()"},{"path":"/dev/reference/wbWorkbook.html","id":"method-set-sheet-visibility-","dir":"Reference","previous_headings":"","what":"Method set_sheet_visibility()","title":"R6 class for a Workbook — wbWorkbook","text":"Set sheet visibility","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-65","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$set_sheet_visibility(sheet = current_sheet(), value)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-61","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet value value","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-page-break-","dir":"Reference","previous_headings":"","what":"Method add_page_break()","title":"R6 class for a Workbook — wbWorkbook","text":"Add page break","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-66","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_page_break(sheet = current_sheet(), row = NULL, col = NULL)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-62","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet row row col col","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-clean-sheet-","dir":"Reference","previous_headings":"","what":"Method clean_sheet()","title":"R6 class for a Workbook — wbWorkbook","text":"clean sheet (remove values)","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-67","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$clean_sheet(   sheet = current_sheet(),   dims = NULL,   numbers = TRUE,   characters = TRUE,   styles = TRUE,   merged_cells = TRUE )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-63","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet dims dims numbers remove numbers characters remove characters styles remove styles merged_cells remove merged_cells","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-33","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorksheetObject, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-border-","dir":"Reference","previous_headings":"","what":"Method add_border()","title":"R6 class for a Workbook — wbWorkbook","text":"create borders cell region","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-68","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_border(   sheet = current_sheet(),   dims = \"A1\",   bottom_color = wb_color(hex = \"FF000000\"),   left_color = wb_color(hex = \"FF000000\"),   right_color = wb_color(hex = \"FF000000\"),   top_color = wb_color(hex = \"FF000000\"),   bottom_border = \"thin\",   left_border = \"thin\",   right_border = \"thin\",   top_border = \"thin\",   inner_hgrid = NULL,   inner_hcolor = NULL,   inner_vgrid = NULL,   inner_vcolor = NULL,   ... )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-64","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet worksheet dims dimensions worksheet e.g. \"A1\", \"A1:A5\", \"A1:H5\" bottom_color, left_color, right_color, top_color, inner_hcolor, inner_vcolor color, either something openxml knows RGB color left_border, right_border, top_border, bottom_border, inner_hgrid, inner_vgrid border style, NULL border drawn. See create_border possible border styles ... ...","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-34","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorksheetObject, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wb <- wb_workbook() wb$add_worksheet(\"S1\")$add_data(\"S1\", mtcars) wb$add_border(1, dims = \"A1:K1\",  left_border = NULL, right_border = NULL,  top_border = NULL, bottom_border = \"double\") wb$add_border(1, dims = \"A5\",  left_border = \"dotted\", right_border = \"dotted\",  top_border = \"hair\", bottom_border = \"thick\") wb$add_border(1, dims = \"C2:C5\") wb$add_border(1, dims = \"G2:H3\") wb$add_border(1, dims = \"G12:H13\",  left_color = wb_color(hex = \"FF9400D3\"), right_color = wb_color(hex = \"FF4B0082\"),  top_color = wb_color(hex = \"FF0000FF\"), bottom_color = wb_color(hex = \"FF00FF00\")) wb$add_border(1, dims = \"A20:C23\") wb$add_border(1, dims = \"B12:D14\",  left_color = wb_color(hex = \"FFFFFF00\"), right_color = wb_color(hex = \"FFFF7F00\"),  bottom_color = wb_color(hex = \"FFFF0000\")) wb$add_border(1, dims = \"D28:E28\") # if (interactive()) wb$open()  wb <- wb_workbook() wb$add_worksheet(\"S1\")$add_data(\"S1\", mtcars) wb$add_border(1, dims = \"A2:K33\", inner_vgrid = \"thin\", inner_vcolor = c(rgb=\"FF808080\"))"},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-fill-","dir":"Reference","previous_headings":"","what":"Method add_fill()","title":"R6 class for a Workbook — wbWorkbook","text":"provide simple fill function","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-69","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_fill(   sheet = current_sheet(),   dims = \"A1\",   color = wb_color(hex = \"FFFFFF00\"),   pattern = \"solid\",   gradient_fill = \"\",   every_nth_col = 1,   every_nth_row = 1,   ... )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-65","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet worksheet dims cell range color colors apply, e.g. yellow: wb_color(hex = \"FFFFFF00\") pattern various default \"none\" others possible: \"solid\", \"mediumGray\", \"darkGray\", \"lightGray\", \"darkHorizontal\", \"darkVertical\", \"darkDown\", \"darkUp\", \"darkGrid\", \"darkTrellis\", \"lightHorizontal\", \"lightVertical\", \"lightDown\", \"lightUp\", \"lightGrid\", \"lightTrellis\", \"gray125\", \"gray0625\" gradient_fill gradient fill xml pattern. every_nth_col col filled every_nth_row row filled ... ...","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-35","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorksheetObject, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"# example from the gradient fill manual page  gradient_fill <- \"<gradientFill degree=\\\"90\\\">    <stop position=\\\"0\\\"><color rgb=\\\"FF92D050\\\"/><\/stop>    <stop position=\\\"1\\\"><color rgb=\\\"FF0070C0\\\"/><\/stop>   <\/gradientFill>\""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-font-","dir":"Reference","previous_headings":"","what":"Method add_font()","title":"R6 class for a Workbook — wbWorkbook","text":"provide simple font function","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-70","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_font(   sheet = current_sheet(),   dims = \"A1\",   name = \"Calibri\",   color = wb_color(hex = \"FF000000\"),   size = \"11\",   bold = \"\",   italic = \"\",   outline = \"\",   strike = \"\",   underline = \"\",   charset = \"\",   condense = \"\",   extend = \"\",   family = \"\",   scheme = \"\",   shadow = \"\",   vertAlign = \"\",   ... )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-66","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet worksheet dims cell range name font name: default \"Calibri\" color rgb color: default \"FF000000\" size font size: default \"11\", bold bold italic italic outline outline strike strike underline underline charset charset condense condense extend extend family font family scheme font scheme shadow shadow vertAlign vertical alignment ... ...","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-36","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorksheetObject, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wb <- wb_workbook()$add_worksheet(\"S1\")$add_data(\"S1\", mtcars)  wb$add_font(\"S1\", \"A1:K1\", name = \"Arial\", color = wb_color(theme = \"4\"))"},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-numfmt-","dir":"Reference","previous_headings":"","what":"Method add_numfmt()","title":"R6 class for a Workbook — wbWorkbook","text":"provide simple number format function","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-71","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_numfmt(sheet = current_sheet(), dims = \"A1\", numfmt)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-67","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet worksheet dims cell range numfmt number format id character format","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-37","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorksheetObject, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wb <- wb_workbook()$add_worksheet(\"S1\")$add_data(\"S1\", mtcars)  wb$add_numfmt(\"S1\", \"A1:A33\", numfmt = 1)"},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-cell-style-","dir":"Reference","previous_headings":"","what":"Method add_cell_style()","title":"R6 class for a Workbook — wbWorkbook","text":"provide simple cell style format function","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-72","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_cell_style(   sheet = current_sheet(),   dims = \"A1\",   applyAlignment = NULL,   applyBorder = NULL,   applyFill = NULL,   applyFont = NULL,   applyNumberFormat = NULL,   applyProtection = NULL,   borderId = NULL,   extLst = NULL,   fillId = NULL,   fontId = NULL,   hidden = NULL,   horizontal = NULL,   indent = NULL,   justifyLastLine = NULL,   locked = NULL,   numFmtId = NULL,   pivotButton = NULL,   quotePrefix = NULL,   readingOrder = NULL,   relativeIndent = NULL,   shrinkToFit = NULL,   textRotation = NULL,   vertical = NULL,   wrapText = NULL,   xfId = NULL )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-68","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet worksheet dims cell range applyAlignment logical apply alignment applyBorder logical apply border applyFill logical apply fill applyFont logical apply font applyNumberFormat logical apply number format applyProtection logical apply protection borderId border ID apply extLst extension list something like <extLst>...<\/extLst> fillId fill ID apply fontId font ID apply hidden logical cell hidden horizontal align content horizontal ('left', 'center', 'right') indent logical indent content justifyLastLine logical justify last line locked logical cell locked numFmtId number format ID apply pivotButton unknown quotePrefix unknown readingOrder reading order left right relativeIndent relative indentation shrinkToFit logical shrink fit textRotation degrees text rotation vertical vertical alignment content ('top', 'center', 'bottom') wrapText wrap text cell xfId xf ID apply","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-38","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorksheetObject, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wb <- wb_workbook()$add_worksheet(\"S1\")$add_data(\"S1\", mtcars)  wb$add_cell_style(\"S1\", \"A1:K1\",                    textRotation = \"45\",                    horizontal = \"center\",                    vertical = \"center\",                    wrapText = \"1\")"},{"path":"/dev/reference/wbWorkbook.html","id":"method-get-cell-style-","dir":"Reference","previous_headings":"","what":"Method get_cell_style()","title":"R6 class for a Workbook — wbWorkbook","text":"get sheet style","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-73","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$get_cell_style(sheet = current_sheet(), dims)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-69","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet dims dims","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-set-cell-style-","dir":"Reference","previous_headings":"","what":"Method set_cell_style()","title":"R6 class for a Workbook — wbWorkbook","text":"set sheet style","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-74","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$set_cell_style(sheet = current_sheet(), dims, style)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-70","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet dims dims style style","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-39","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorksheetObject, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-clone-sheet-style-","dir":"Reference","previous_headings":"","what":"Method clone_sheet_style()","title":"R6 class for a Workbook — wbWorkbook","text":"clone style one sheet another","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-75","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$clone_sheet_style(from = current_sheet(), to)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-71","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"worksheet cloning worksheet style applied ","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-sparklines-","dir":"Reference","previous_headings":"","what":"Method add_sparklines()","title":"R6 class for a Workbook — wbWorkbook","text":"apply sparkline worksheet","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-76","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_sparklines(sheet = current_sheet(), sparklines)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-72","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet worksheet using sparklines sparkline created create_sparkline()","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-add-ignore-error-","dir":"Reference","previous_headings":"","what":"Method add_ignore_error()","title":"R6 class for a Workbook — wbWorkbook","text":"Ignore error worksheet","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-77","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$add_ignore_error(   sheet = current_sheet(),   dims = \"A1\",   calculatedColumn = FALSE,   emptyCellReference = FALSE,   evalError = FALSE,   formula = FALSE,   formulaRange = FALSE,   listDataValidation = FALSE,   numberStoredAsText = FALSE,   twoDigitTextYear = FALSE,   unlockedFormula = FALSE )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-73","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet dims dims calculatedColumn calculatedColumn emptyCellReference emptyCellReference evalError evalError formula formula formulaRange formulaRange listDataValidation listDataValidation numberStoredAsText numberStoredAsText twoDigitTextYear twoDigitTextYear unlockedFormula unlockedFormula","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-set-sheetview-","dir":"Reference","previous_headings":"","what":"Method set_sheetview()","title":"R6 class for a Workbook — wbWorkbook","text":"add sheetview","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-78","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$set_sheetview(   sheet = current_sheet(),   colorId = NULL,   defaultGridColor = NULL,   rightToLeft = NULL,   showFormulas = NULL,   showGridLines = NULL,   showOutlineSymbols = NULL,   showRowColHeaders = NULL,   showRuler = NULL,   showWhiteSpace = NULL,   showZeros = NULL,   tabSelected = NULL,   topLeftCell = NULL,   view = NULL,   windowProtection = NULL,   workbookViewId = NULL,   zoomScale = NULL,   zoomScaleNormal = NULL,   zoomScalePageLayoutView = NULL,   zoomScaleSheetLayoutView = NULL )"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-74","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"sheet sheet colorId colorId defaultGridColor defaultGridColor rightToLeft rightToLeft showFormulas showFormulas showGridLines showGridLines showOutlineSymbols showOutlineSymbols showRowColHeaders showRowColHeaders showRuler showRuler showWhiteSpace showWhiteSpace showZeros showZeros tabSelected tabSelected topLeftCell topLeftCell view view windowProtection windowProtection workbookViewId workbookViewId zoomScale zoomScale zoomScaleNormal zoomScaleNormal zoomScalePageLayoutView zoomScalePageLayoutView zoomScaleSheetLayoutView zoomScaleSheetLayoutView","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"returns-40","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook — wbWorkbook","text":"wbWorksheetObject, invisibly","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for a Workbook — wbWorkbook","text":"objects class cloneable method.","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"usage-79","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"wbWorkbook$clone(deep = FALSE)"},{"path":"/dev/reference/wbWorkbook.html","id":"arguments-75","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook — wbWorkbook","text":"deep Whether make deep clone.","code":""},{"path":"/dev/reference/wbWorkbook.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class for a Workbook — wbWorkbook","text":"","code":"## ------------------------------------------------ ## Method `wbWorkbook$add_border` ## ------------------------------------------------   wb <- wb_workbook() wb$add_worksheet(\"S1\")$add_data(\"S1\", mtcars) wb$add_border(1, dims = \"A1:K1\",  left_border = NULL, right_border = NULL,  top_border = NULL, bottom_border = \"double\") wb$add_border(1, dims = \"A5\",  left_border = \"dotted\", right_border = \"dotted\",  top_border = \"hair\", bottom_border = \"thick\") wb$add_border(1, dims = \"C2:C5\") wb$add_border(1, dims = \"G2:H3\") wb$add_border(1, dims = \"G12:H13\",  left_color = wb_color(hex = \"FF9400D3\"), right_color = wb_color(hex = \"FF4B0082\"),  top_color = wb_color(hex = \"FF0000FF\"), bottom_color = wb_color(hex = \"FF00FF00\")) wb$add_border(1, dims = \"A20:C23\") wb$add_border(1, dims = \"B12:D14\",  left_color = wb_color(hex = \"FFFFFF00\"), right_color = wb_color(hex = \"FFFF7F00\"),  bottom_color = wb_color(hex = \"FFFF0000\")) wb$add_border(1, dims = \"D28:E28\") # if (interactive()) wb$open()  wb <- wb_workbook() wb$add_worksheet(\"S1\")$add_data(\"S1\", mtcars) wb$add_border(1, dims = \"A2:K33\", inner_vgrid = \"thin\", inner_vcolor = c(rgb=\"FF808080\"))  ## ------------------------------------------------ ## Method `wbWorkbook$add_fill` ## ------------------------------------------------   # example from the gradient fill manual page  gradient_fill <- \"<gradientFill degree=\\\"90\\\">    <stop position=\\\"0\\\"><color rgb=\\\"FF92D050\\\"/><\/stop>    <stop position=\\\"1\\\"><color rgb=\\\"FF0070C0\\\"/><\/stop>   <\/gradientFill>\"  ## ------------------------------------------------ ## Method `wbWorkbook$add_font` ## ------------------------------------------------   wb <- wb_workbook()$add_worksheet(\"S1\")$add_data(\"S1\", mtcars)  wb$add_font(\"S1\", \"A1:K1\", name = \"Arial\", color = wb_color(theme = \"4\"))  ## ------------------------------------------------ ## Method `wbWorkbook$add_numfmt` ## ------------------------------------------------   wb <- wb_workbook()$add_worksheet(\"S1\")$add_data(\"S1\", mtcars)  wb$add_numfmt(\"S1\", \"A1:A33\", numfmt = 1)  ## ------------------------------------------------ ## Method `wbWorkbook$add_cell_style` ## ------------------------------------------------   wb <- wb_workbook()$add_worksheet(\"S1\")$add_data(\"S1\", mtcars)  wb$add_cell_style(\"S1\", \"A1:K1\",                    textRotation = \"45\",                    horizontal = \"center\",                    vertical = \"center\",                    wrapText = \"1\")"},{"path":"/dev/reference/wbWorksheet.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class for a Workbook Worksheet — wbWorksheet","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"R6 class Workbook Worksheet R6 class Workbook Worksheet","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"wbWorksheet object wbWorksheet object","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"Worksheet","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"sheetPr sheetPr dimension dimension sheetViews sheetViews sheetFormatPr sheetFormatPr sheet_data sheet_data cols_attr cols_attr autoFilter autoFilter mergeCells mergeCells conditionalFormatting conditionalFormatting dataValidations dataValidations freezePane freezePane hyperlinks hyperlinks sheetProtection sheetProtection pageMargins pageMargins pageSetup pageSetup headerFooter headerFooter rowBreaks rowBreaks colBreaks colBreaks drawing drawing legacyDrawing legacyDrawing legacyDrawingHF legacyDrawingHF oleObjects oleObjects tableParts tableParts extLst extLst cellWatches cellWatches controls controls customProperties customProperties customSheetViews customSheetViews dataConsolidate dataConsolidate drawingHF drawingHF relships relships ignoredErrors ignoredErrors phoneticPr phoneticPr picture picture printOptions printOptions protectedRanges protectedRanges scenarios scenarios sheetCalcPr sheetCalcPr smartTags smartTags sortState sortState webPublishItems webPublishItems","code":""},{"path":[]},{"path":"/dev/reference/wbWorksheet.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"wbWorksheet$new() wbWorksheet$get_prior_sheet_data() wbWorksheet$get_post_sheet_data() wbWorksheet$unfold_cols() wbWorksheet$fold_cols() wbWorksheet$merge_cells() wbWorksheet$unmerge_cells() wbWorksheet$clean_sheet() wbWorksheet$add_page_break() wbWorksheet$set_print_options() wbWorksheet$append() wbWorksheet$add_sparklines() wbWorksheet$set_sheetview() wbWorksheet$ignore_error() wbWorksheet$clone()","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"Creates new wbWorksheet object","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"","code":"wbWorksheet$new(   tabColor = NULL,   oddHeader = NULL,   oddFooter = NULL,   evenHeader = NULL,   evenFooter = NULL,   firstHeader = NULL,   firstFooter = NULL,   paperSize = 9,   orientation = \"portrait\",   hdpi = 300,   vdpi = 300,   printGridLines = FALSE )"},{"path":"/dev/reference/wbWorksheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"tabColor tabColor oddHeader oddHeader oddFooter oddFooter evenHeader evenHeader evenFooter evenFooter firstHeader firstHeader firstFooter firstFooter paperSize paperSize orientation orientation hdpi hdpi vdpi vdpi printGridLines printGridLines","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"wbWorksheet object","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"method-get-prior-sheet-data-","dir":"Reference","previous_headings":"","what":"Method get_prior_sheet_data()","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"Get prior sheet data","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"","code":"wbWorksheet$get_prior_sheet_data()"},{"path":"/dev/reference/wbWorksheet.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"character vector xml","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"method-get-post-sheet-data-","dir":"Reference","previous_headings":"","what":"Method get_post_sheet_data()","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"Get post sheet data","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"","code":"wbWorksheet$get_post_sheet_data()"},{"path":"/dev/reference/wbWorksheet.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"character vector xml","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"method-unfold-cols-","dir":"Reference","previous_headings":"","what":"Method unfold_cols()","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"unfold <cols ..> node dataframe. <cols><col ..> compressed. columns attributes written file. function unfolds cell beginning \"\" last one found cc gets value. TODO might extend match either largest cc largest col. \"Z\" formatted, last value written \"Y\". TODO might replace xml nodes data frame?","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"","code":"wbWorksheet$unfold_cols()"},{"path":"/dev/reference/wbWorksheet.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"column data frame","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"method-fold-cols-","dir":"Reference","previous_headings":"","what":"Method fold_cols()","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"fold column dataframe back node.","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"","code":"wbWorksheet$fold_cols(col_df)"},{"path":"/dev/reference/wbWorksheet.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"col_df column data frame","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"wbWorksheetObject, invisibly","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"method-merge-cells-","dir":"Reference","previous_headings":"","what":"Method merge_cells()","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"Set cell merging sheet","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"","code":"wbWorksheet$merge_cells(rows = NULL, cols = NULL)"},{"path":"/dev/reference/wbWorksheet.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"rows, cols Row column specifications.","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"method-unmerge-cells-","dir":"Reference","previous_headings":"","what":"Method unmerge_cells()","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"Removes cell merging sheet","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"","code":"wbWorksheet$unmerge_cells(rows = NULL, cols = NULL)"},{"path":"/dev/reference/wbWorksheet.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"rows, cols Row column specifications.","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"wbWorkbook object, invisibly","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"method-clean-sheet-","dir":"Reference","previous_headings":"","what":"Method clean_sheet()","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"clean sheet (remove values)","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"","code":"wbWorksheet$clean_sheet(   dims = NULL,   numbers = TRUE,   characters = TRUE,   styles = TRUE,   merged_cells = TRUE )"},{"path":"/dev/reference/wbWorksheet.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"dims dimensions numbers remove numbers characters remove characters styles remove styles merged_cells remove merged_cells","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"wbWorksheetObject, invisibly","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"method-add-page-break-","dir":"Reference","previous_headings":"","what":"Method add_page_break()","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"add page break","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"","code":"wbWorksheet$add_page_break(row = NULL, col = NULL)"},{"path":"/dev/reference/wbWorksheet.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"row row col col","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"method-set-print-options-","dir":"Reference","previous_headings":"","what":"Method set_print_options()","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"add print options","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"","code":"wbWorksheet$set_print_options(   gridLines = NULL,   gridLinesSet = NULL,   headings = NULL,   horizontalCentered = NULL,   verticalCentered = NULL )"},{"path":"/dev/reference/wbWorksheet.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"gridLines gridLines gridLinesSet gridLinesSet headings TRUE prints row column headings horizontalCentered TRUE page horizontally centered verticalCentered TRUE page vertically centered","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"method-append-","dir":"Reference","previous_headings":"","what":"Method append()","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"append field.  Intended internal use .  guaranteed remain public method.","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"","code":"wbWorksheet$append(field, value = NULL)"},{"path":"/dev/reference/wbWorksheet.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"field field name value new value","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"wbWorksheetObject, invisibly","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"method-add-sparklines-","dir":"Reference","previous_headings":"","what":"Method add_sparklines()","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"add sparkline","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"","code":"wbWorksheet$add_sparklines(sparklines)"},{"path":"/dev/reference/wbWorksheet.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"sparklines sparkline created create_sparkline()","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"wbWorksheetObject, invisibly","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"method-set-sheetview-","dir":"Reference","previous_headings":"","what":"Method set_sheetview()","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"add sheetview","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"","code":"wbWorksheet$set_sheetview(   colorId = NULL,   defaultGridColor = NULL,   rightToLeft = NULL,   showFormulas = NULL,   showGridLines = NULL,   showOutlineSymbols = NULL,   showRowColHeaders = NULL,   showRuler = NULL,   showWhiteSpace = NULL,   showZeros = NULL,   tabSelected = NULL,   topLeftCell = NULL,   view = NULL,   windowProtection = NULL,   workbookViewId = NULL,   zoomScale = NULL,   zoomScaleNormal = NULL,   zoomScalePageLayoutView = NULL,   zoomScaleSheetLayoutView = NULL )"},{"path":"/dev/reference/wbWorksheet.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"colorId colorId defaultGridColor defaultGridColor rightToLeft rightToLeft showFormulas showFormulas showGridLines showGridLines showOutlineSymbols showOutlineSymbols showRowColHeaders showRowColHeaders showRuler showRuler showWhiteSpace showWhiteSpace showZeros showZeros tabSelected tabSelected topLeftCell topLeftCell view view windowProtection windowProtection workbookViewId workbookViewId zoomScale zoomScale zoomScaleNormal zoomScaleNormal zoomScalePageLayoutView zoomScalePageLayoutView zoomScaleSheetLayoutView zoomScaleSheetLayoutView","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"wbWorksheetObject, invisibly","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"method-ignore-error-","dir":"Reference","previous_headings":"","what":"Method ignore_error()","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"Ignore error worksheet","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"","code":"wbWorksheet$ignore_error(   dims = \"A1\",   calculatedColumn = FALSE,   emptyCellReference = FALSE,   evalError = FALSE,   formula = FALSE,   formulaRange = FALSE,   listDataValidation = FALSE,   numberStoredAsText = FALSE,   twoDigitTextYear = FALSE,   unlockedFormula = FALSE )"},{"path":"/dev/reference/wbWorksheet.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"dims dims calculatedColumn calculatedColumn emptyCellReference emptyCellReference evalError evalError formula formula formulaRange formulaRange listDataValidation listDataValidation numberStoredAsText numberStoredAsText twoDigitTextYear twoDigitTextYear unlockedFormula unlockedFormula","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"wbWorksheetObject, invisibly","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"objects class cloneable method.","code":""},{"path":"/dev/reference/wbWorksheet.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"","code":"wbWorksheet$clone(deep = FALSE)"},{"path":"/dev/reference/wbWorksheet.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a Workbook Worksheet — wbWorksheet","text":"deep Whether make deep clone.","code":""},{"path":"/dev/reference/wb_add_border.html","id":null,"dir":"Reference","previous_headings":"","what":"add border for cell region — wb_add_border","title":"add border for cell region — wb_add_border","text":"wb wrapper create borders cell region","code":""},{"path":"/dev/reference/wb_add_border.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add border for cell region — wb_add_border","text":"","code":"wb_add_border(   wb,   sheet = current_sheet(),   dims = \"A1\",   bottom_color = wb_color(hex = \"FF000000\"),   left_color = wb_color(hex = \"FF000000\"),   right_color = wb_color(hex = \"FF000000\"),   top_color = wb_color(hex = \"FF000000\"),   bottom_border = \"thin\",   left_border = \"thin\",   right_border = \"thin\",   top_border = \"thin\",   inner_hgrid = NULL,   inner_hcolor = NULL,   inner_vgrid = NULL,   inner_vcolor = NULL,   ... )"},{"path":"/dev/reference/wb_add_border.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add border for cell region — wb_add_border","text":"wb workbook sheet worksheet dims dimensions worksheet e.g. \"A1\", \"A1:A5\", \"A1:H5\" bottom_color, left_color, right_color, top_color, inner_hcolor, inner_vcolor color, either something openxml knows RGB color left_border, right_border, top_border, bottom_border, inner_hgrid, inner_vgrid border style, NULL border drawn. See create_border possible border styles ... ...","code":""},{"path":[]},{"path":"/dev/reference/wb_add_border.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add border for cell region — wb_add_border","text":"","code":"wb <- wb_workbook() %>% wb_add_worksheet(\"S1\") %>%  wb_add_data(\"S1\", mtcars) wb <- wb_add_border(wb, 1, dims = \"A1:K1\",  left_border = NULL, right_border = NULL,  top_border = NULL, bottom_border = \"double\") wb <- wb_add_border(wb, 1, dims = \"A5\",  left_border = \"dotted\", right_border = \"dotted\",  top_border = \"hair\", bottom_border = \"thick\") wb <- wb_add_border(wb, 1, dims = \"C2:C5\") wb <- wb_add_border(wb, 1, dims = \"G2:H3\") wb <- wb_add_border(wb, 1, dims = \"G12:H13\",  left_color = wb_color(hex = \"FF9400D3\"), right_color = wb_color(hex = \"FF4B0082\"),  top_color = wb_color(hex = \"FF0000FF\"), bottom_color = wb_color(hex = \"FF00FF00\")) wb <- wb_add_border(wb, 1, dims = \"A20:C23\") wb <- wb_add_border(wb, 1, dims = \"B12:D14\",  left_color = wb_color(hex = \"FFFFFF00\"), right_color = wb_color(hex = \"FFFF7F00\"),  bottom_color = wb_color(hex = \"FFFF0000\")) wb <- wb_add_border(wb, 1, dims = \"D28:E28\")"},{"path":"/dev/reference/wb_add_cell_style.html","id":null,"dir":"Reference","previous_headings":"","what":"add cell style for cell region — wb_add_cell_style","title":"add cell style for cell region — wb_add_cell_style","text":"add cell style cell region","code":""},{"path":"/dev/reference/wb_add_cell_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add cell style for cell region — wb_add_cell_style","text":"","code":"wb_add_cell_style(   wb,   sheet = current_sheet(),   dims = \"A1\",   applyAlignment = NULL,   applyBorder = NULL,   applyFill = NULL,   applyFont = NULL,   applyNumberFormat = NULL,   applyProtection = NULL,   borderId = NULL,   extLst = NULL,   fillId = NULL,   fontId = NULL,   hidden = NULL,   horizontal = NULL,   indent = NULL,   justifyLastLine = NULL,   locked = NULL,   numFmtId = NULL,   pivotButton = NULL,   quotePrefix = NULL,   readingOrder = NULL,   relativeIndent = NULL,   shrinkToFit = NULL,   textRotation = NULL,   vertical = NULL,   wrapText = NULL,   xfId = NULL )"},{"path":"/dev/reference/wb_add_cell_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add cell style for cell region — wb_add_cell_style","text":"wb workbook sheet worksheet dims cell range applyAlignment logical apply alignment applyBorder logical apply border applyFill logical apply fill applyFont logical apply font applyNumberFormat logical apply number format applyProtection logical apply protection borderId border ID apply extLst extension list something like <extLst>...<\/extLst> fillId fill ID apply fontId font ID apply hidden logical cell hidden horizontal align content horizontal ('left', 'center', 'right') indent logical indent content justifyLastLine logical justify last line locked logical cell locked numFmtId number format ID apply pivotButton unknown quotePrefix unknown readingOrder reading order left right relativeIndent relative indentation shrinkToFit logical shrink fit textRotation degrees text rotation vertical vertical alignment content ('top', 'center', 'bottom') wrapText wrap text cell xfId xf ID apply","code":""},{"path":"/dev/reference/wb_add_cell_style.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add cell style for cell region — wb_add_cell_style","text":"wbWorksheetObject, invisibly","code":""},{"path":[]},{"path":"/dev/reference/wb_add_cell_style.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add cell style for cell region — wb_add_cell_style","text":"","code":"wb <-    wb_workbook() %>%    wb_add_worksheet(\"S1\") %>%    wb_add_data(\"S1\", mtcars)   wb %>%    wb_add_cell_style(      \"S1\",      \"A1:K1\",      textRotation = \"45\",      horizontal = \"center\",      vertical = \"center\",      wrapText = \"1\"    )"},{"path":"/dev/reference/wb_add_chart_xml.html","id":null,"dir":"Reference","previous_headings":"","what":"add a chart xml to a workbook — wb_add_chart_xml","title":"add a chart xml to a workbook — wb_add_chart_xml","text":"add chart xml workbook","code":""},{"path":"/dev/reference/wb_add_chart_xml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add a chart xml to a workbook — wb_add_chart_xml","text":"","code":"wb_add_chart_xml(   wb,   sheet = current_sheet(),   xml,   dims = NULL,   colOffset = 0,   rowOffset = 0 )"},{"path":"/dev/reference/wb_add_chart_xml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add a chart xml to a workbook — wb_add_chart_xml","text":"wb workbook sheet sheet graph appear xml chart xml dims dimensions sheet appear colOffset, rowOffset startCol startRow","code":""},{"path":"/dev/reference/wb_add_chartsheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a chartsheet to a workbook — wb_add_chartsheet","title":"Add a chartsheet to a workbook — wb_add_chartsheet","text":"Add chartsheet workbook","code":""},{"path":"/dev/reference/wb_add_chartsheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a chartsheet to a workbook — wb_add_chartsheet","text":"","code":"wb_add_chartsheet(   wb,   sheet = next_sheet(),   tabColor = NULL,   zoom = 100,   visible = c(\"true\", \"false\", \"hidden\", \"visible\", \"veryhidden\"),   ... )"},{"path":"/dev/reference/wb_add_chartsheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a chartsheet to a workbook — wb_add_chartsheet","text":"wb Workbook object attach new worksheet sheet name new worksheet tabColor Color worksheet tab. valid color (belonging colors()) valid hex color beginning \"#\" zoom numeric 10 400. Worksheet zoom level percentage. visible FALSE, sheet hidden else visible. ... ...","code":""},{"path":"/dev/reference/wb_add_chartsheet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a chartsheet to a workbook — wb_add_chartsheet","text":"chartsheet creation chart must added sheet. Otherwise chartsheet break workbook.","code":""},{"path":[]},{"path":"/dev/reference/wb_add_conditional_formatting.html","id":null,"dir":"Reference","previous_headings":"","what":"Add conditional formatting to cells — wb_add_conditional_formatting","title":"Add conditional formatting to cells — wb_add_conditional_formatting","text":"Add conditional formatting cells","code":""},{"path":"/dev/reference/wb_add_conditional_formatting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add conditional formatting to cells — wb_add_conditional_formatting","text":"","code":"wb_add_conditional_formatting(   wb,   sheet = current_sheet(),   cols,   rows,   rule = NULL,   style = NULL,   type = c(\"expression\", \"colorScale\", \"dataBar\", \"iconSet\", \"duplicatedValues\",     \"uniqueValues\", \"containsErrors\", \"notContainsErrors\", \"containsBlanks\",     \"notContainsBlanks\", \"containsText\", \"notContainsText\", \"beginsWith\", \"endsWith\",     \"between\", \"topN\", \"bottomN\"),   params = list(showValue = TRUE, gradient = TRUE, border = TRUE, percent = FALSE, rank =     5L) )"},{"path":"/dev/reference/wb_add_conditional_formatting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add conditional formatting to cells — wb_add_conditional_formatting","text":"wb workbook object sheet name index worksheet cols Columns apply conditional formatting rows Rows apply conditional formatting rule condition apply formatting. See examples. style style apply cells satisfy rule. Default 'font_color = \"FF9C0006\"' 'bgFill = \"FFFFC7CE\"' type type conditional formatting rule apply. params Additional parameters passed.  See Details ","code":""},{"path":"/dev/reference/wb_add_conditional_formatting.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add conditional formatting to cells — wb_add_conditional_formatting","text":"See Examples. Conditional formatting types accept different parameters.  Unless noted, unlisted parameters ignored. expression [style] Style object[rule] Excel expression (character). Valid operators : <, <=, >, >=, ==, != colorScale [style] character vector valid colors length 2 3[rule]NULL character vector valid colors equal length styles dataBar [style] character vector valid colors length 2 3[rule] numeric vector specifying range databar colors. Must equal length style[params$showValue] FALSE cell value hidden. Default TRUE[params$gradient] FALSE color gradient removed. Default TRUE[params$border] FALSE border around database hidden. Default TRUE duplicatedValues/uniqueValues/containsErrors [style] Style object contains [style] Style object[rule] text look within cells [style] Style object.[rule] numeric vector length 2 specifying lower upper bound (Inclusive) topN [style] Style object[params$rank] numeric vector length 1 indicating number highest values. Default 5L[params$percent] TRUE uses percentage bottomN [style] Style object[params$rank] numeric vector length 1 indicating number lowest values. Default 5L[params$percent] TRUE uses percentage iconSet [params$showValue] FALSE cell value hidden. Default TRUE[params$reverse] TRUE order reversed. Default FALSE[params$percent] TRUE uses percentage[params$iconSet] Uses one implemented icon sets. Values must match length icons set 3Arrows, 3ArrowsGray, 3Flags, 3Signs, 3Symbols, 3Symbols2, 3TrafficLights1, 3TrafficLights2, 4Arrows, 4ArrowsGray, 4Rating, 4RedToBlack, 4TrafficLights, 5Arrows, 5ArrowsGray, 5Quarters, 5Rating. default 3TrafficLights1.","code":""},{"path":"/dev/reference/wb_add_conditional_formatting.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add conditional formatting to cells — wb_add_conditional_formatting","text":"","code":"wb <- wb_workbook() wb$add_worksheet(\"a\") wb$add_data(\"a\", 1:4, colNames = FALSE) wb$add_conditional_formatting(\"a\", 1, 1:4, \">2\")"},{"path":"/dev/reference/wb_add_data_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Add data to a worksheet as an Excel table — wb_add_data_table","title":"Add data to a worksheet as an Excel table — wb_add_data_table","text":"Add data worksheet format Excel table","code":""},{"path":"/dev/reference/wb_add_data_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add data to a worksheet as an Excel table — wb_add_data_table","text":"","code":"wb_add_data_table(   wb,   sheet = current_sheet(),   x,   startCol = 1,   startRow = 1,   dims = rowcol_to_dims(startRow, startCol),   colNames = TRUE,   rowNames = FALSE,   tableStyle = \"TableStyleLight9\",   tableName = NULL,   withFilter = TRUE,   sep = \", \",   firstColumn = FALSE,   lastColumn = FALSE,   bandedRows = TRUE,   bandedCols = FALSE,   applyCellStyle = TRUE,   removeCellStyle = FALSE,   na.strings = na_strings(),   inline_strings = TRUE )"},{"path":"/dev/reference/wb_add_data_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add data to a worksheet as an Excel table — wb_add_data_table","text":"wb Workbook object containing #' worksheet. sheet worksheet write . Can worksheet index name. x dataframe. startCol vector specifying starting column write df startRow vector specifying starting row write df dims Spreadsheet dimensions determine startCol startRow: \"A1\", \"A1:B2\", \":B\" colNames TRUE, column names x written. rowNames TRUE, row names x written. tableStyle excel table style name \"none\" (see \"formatting\" vignette). tableName name table workbook. table name must unique. withFilter TRUE, columns filters first row. sep applies list columns. separator used collapse list columns character vector e.g. sapply(x$list_column, paste, collapse = sep). options correspond Excel table options: firstColumn logical. TRUE, first column bold lastColumn logical. TRUE, last column bold bandedRows logical. TRUE, rows color banded bandedCols logical. TRUE, columns color banded applyCellStyle write cell styles workbook removeCellStyle keep cell style? na.strings Value used replacing NA values x. Default na_strings() uses special #N/value within workbook. inline_strings write characters inline strings","code":""},{"path":"/dev/reference/wb_add_data_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add data to a worksheet as an Excel table — wb_add_data_table","text":"columns x class Date/POSIXt, currency, accounting, hyperlink, percentage automatically styled dates, currency, accounting, hyperlinks, percentages respectively. string \"_openxlsx_NA\" reserved openxlsx2. data frame contains string, output broken.","code":""},{"path":[]},{"path":"/dev/reference/wb_add_data_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"Add data validation to cells — wb_add_data_validation","title":"Add data validation to cells — wb_add_data_validation","text":"Add Excel data validation cells","code":""},{"path":"/dev/reference/wb_add_data_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add data validation to cells — wb_add_data_validation","text":"","code":"wb_add_data_validation(   wb,   sheet = current_sheet(),   cols,   rows,   type,   operator,   value,   allowBlank = TRUE,   showInputMsg = TRUE,   showErrorMsg = TRUE,   errorStyle = NULL,   errorTitle = NULL,   error = NULL,   promptTitle = NULL,   prompt = NULL )"},{"path":"/dev/reference/wb_add_data_validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add data validation to cells — wb_add_data_validation","text":"wb workbook object sheet name index worksheet cols Contiguous columns apply conditional formatting rows Contiguous rows apply conditional formatting type One 'whole', 'decimal', 'date', 'time', 'textLength', 'list' (see examples) operator One '', 'notBetween', 'equal', 'notEqual', 'greaterThan', 'lessThan', 'greaterThanOrEqual', 'lessThanOrEqual' value vector length 1 2 depending operator (see examples) allowBlank logical showInputMsg logical showErrorMsg logical errorStyle icon shown options deal inputs. Default \"stop\" (cancel), else \"information\" (prompt popup) \"warning\" (prompt accept change input) errorTitle error title error error text promptTitle prompt title prompt prompt text","code":""},{"path":"/dev/reference/wb_add_data_validation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add data validation to cells — wb_add_data_validation","text":"","code":"wb <- wb_workbook() wb$add_worksheet(\"Sheet 1\") wb$add_worksheet(\"Sheet 2\")  wb$add_data_table(1, x = iris[1:30, ]) wb$add_data_validation(1,   col = 1:3, rows = 2:31, type = \"whole\",   operator = \"between\", value = c(1, 9) ) wb$add_data_validation(1,   col = 5, rows = 2:31, type = \"textLength\",   operator = \"between\", value = c(4, 6) )  ## Date and Time cell validation df <- data.frame(   \"d\" = as.Date(\"2016-01-01\") + -5:5,   \"t\" = as.POSIXct(\"2016-01-01\") + -5:5 * 10000 ) wb$add_data_table(2, x = df) wb$add_data_validation(2,   col = 1, rows = 2:12, type = \"date\",   operator = \"greaterThanOrEqual\", value = as.Date(\"2016-01-01\") ) wb$add_data_validation(2,   col = 2, rows = 2:12, type = \"time\",   operator = \"between\", value = df$t[c(4, 8)] )   ###################################################################### ## If type == 'list' # operator argument is ignored.  wb <- wb_workbook() wb$add_worksheet(\"Sheet 1\") wb$add_worksheet(\"Sheet 2\")  wb$add_data_table(sheet = 1, x = iris[1:30, ]) wb$add_data(sheet = 2, x = sample(iris$Sepal.Length, 10))  wb$add_data_validation(1, col = 1, rows = 2:31, type = \"list\", value = \"'Sheet 2'!$A$1:$A$10\")"},{"path":"/dev/reference/wb_add_drawing.html","id":null,"dir":"Reference","previous_headings":"","what":"add drawings to workbook — wb_add_drawing","title":"add drawings to workbook — wb_add_drawing","text":"add drawings workbook","code":""},{"path":"/dev/reference/wb_add_drawing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add drawings to workbook — wb_add_drawing","text":"","code":"wb_add_drawing(   wb,   sheet = current_sheet(),   xml,   dims = NULL,   colOffset = 0,   rowOffset = 0 )"},{"path":"/dev/reference/wb_add_drawing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add drawings to workbook — wb_add_drawing","text":"wb wbWorkbook sheet sheet workbook xml drawing xml character file dims dimension drawing added. Can NULL colOffset, rowOffset offsets column row","code":""},{"path":"/dev/reference/wb_add_drawing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add drawings to workbook — wb_add_drawing","text":"","code":"if (requireNamespace(\"rvg\") && interactive()) {  ## rvg example require(rvg) tmp <- tempfile(fileext = \".xml\") dml_xlsx(file =  tmp) plot(1,1) dev.off()  wb <- wb_workbook()$   add_worksheet()$   add_drawing(xml = tmp)$   add_drawing(xml = tmp, dims = NULL) } #> Loading required namespace: rvg"},{"path":"/dev/reference/wb_add_fill.html","id":null,"dir":"Reference","previous_headings":"","what":"add fill for cell region — wb_add_fill","title":"add fill for cell region — wb_add_fill","text":"wb wrapper create fill cell region","code":""},{"path":"/dev/reference/wb_add_fill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add fill for cell region — wb_add_fill","text":"","code":"wb_add_fill(   wb,   sheet = current_sheet(),   dims = \"A1\",   color = wb_color(hex = \"FFFFFF00\"),   pattern = \"solid\",   gradient_fill = \"\",   every_nth_col = 1,   every_nth_row = 1,   ... )"},{"path":"/dev/reference/wb_add_fill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add fill for cell region — wb_add_fill","text":"wb workbook sheet worksheet dims cell range color colors apply, e.g. yellow: wb_color(hex = \"FFFFFF00\") pattern various default \"none\" others possible: \"solid\", \"mediumGray\", \"darkGray\", \"lightGray\", \"darkHorizontal\", \"darkVertical\", \"darkDown\", \"darkUp\", \"darkGrid\", \"darkTrellis\", \"lightHorizontal\", \"lightVertical\", \"lightDown\", \"lightUp\", \"lightGrid\", \"lightTrellis\", \"gray125\", \"gray0625\" gradient_fill gradient fill xml pattern. every_nth_col col filled every_nth_row row filled ... ...","code":""},{"path":"/dev/reference/wb_add_fill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add fill for cell region — wb_add_fill","text":"wbWorksheetObject, invisibly","code":""},{"path":[]},{"path":"/dev/reference/wb_add_fill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add fill for cell region — wb_add_fill","text":"","code":"wb <- wb_workbook() %>% wb_add_worksheet(\"S1\") %>% wb_add_data(\"S1\", mtcars) wb <- wb %>% wb_add_fill(\"S1\", dims = \"D5:J23\", color = wb_color(hex = \"FFFFFF00\")) wb <- wb %>% wb_add_fill(\"S1\", dims = \"B22:D27\", color = wb_color(hex = \"FF00FF00\"))  wb <- wb %>%  wb_add_worksheet(\"S2\") %>% wb_add_data(\"S2\", mtcars)  gradient_fill1 <- '<gradientFill degree=\"90\"> <stop position=\"0\"><color rgb=\"FF92D050\"/><\/stop> <stop position=\"1\"><color rgb=\"FF0070C0\"/><\/stop> <\/gradientFill>' wb <- wb %>% wb_add_fill(\"S2\", dims = \"A2:K5\", gradient_fill = gradient_fill1)  gradient_fill2 <- '<gradientFill type=\"path\" left=\"0.2\" right=\"0.8\" top=\"0.2\" bottom=\"0.8\"> <stop position=\"0\"><color theme=\"0\"/><\/stop> <stop position=\"1\"><color theme=\"4\"/><\/stop> <\/gradientFill>' wb <- wb %>% wb_add_fill(\"S2\", dims = \"A7:K10\", gradient_fill = gradient_fill2)"},{"path":"/dev/reference/wb_add_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Add column filters — wb_add_filter","title":"Add column filters — wb_add_filter","text":"Add excel column filters worksheet","code":""},{"path":"/dev/reference/wb_add_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add column filters — wb_add_filter","text":"","code":"wb_add_filter(wb, sheet = current_sheet(), rows, cols)"},{"path":"/dev/reference/wb_add_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add column filters — wb_add_filter","text":"wb workbook object sheet name index worksheet rows row number. cols columns add filter .","code":""},{"path":"/dev/reference/wb_add_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add column filters — wb_add_filter","text":"adds filters worksheet columns, filter parameters write_data. write_datatable automatically adds filters first row table. NOTE Can single filter per worksheet unless using tables.","code":""},{"path":[]},{"path":"/dev/reference/wb_add_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add column filters — wb_add_filter","text":"","code":"wb <- wb_workbook() wb$add_worksheet(\"Sheet 1\") wb$add_worksheet(\"Sheet 2\") wb$add_worksheet(\"Sheet 3\")  wb$add_data(1, iris) wb$add_filter(1, row = 1, cols = seq_along(iris))  ## Equivalently wb$add_data(2, x = iris, withFilter = TRUE)  ## Similarly wb$add_data_table(3, iris)"},{"path":"/dev/reference/wb_add_font.html","id":null,"dir":"Reference","previous_headings":"","what":"add font for cell region — wb_add_font","title":"add font for cell region — wb_add_font","text":"add font cell region","code":""},{"path":"/dev/reference/wb_add_font.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add font for cell region — wb_add_font","text":"","code":"wb_add_font(   wb,   sheet = current_sheet(),   dims = \"A1\",   name = \"Calibri\",   color = wb_color(hex = \"FF000000\"),   size = \"11\",   bold = \"\",   italic = \"\",   outline = \"\",   strike = \"\",   underline = \"\",   charset = \"\",   condense = \"\",   extend = \"\",   family = \"\",   scheme = \"\",   shadow = \"\",   vertAlign = \"\",   ... )"},{"path":"/dev/reference/wb_add_font.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add font for cell region — wb_add_font","text":"wb workbook sheet worksheet dims cell range name font name: default \"Calibri\" color rgb color: default \"FF000000\" size font size: default \"11\", bold bold, \"single\" \"double\", default: \"\" italic italic outline outline strike strike underline underline charset charset condense condense extend extend family font family scheme font scheme shadow shadow vertAlign vertical alignment ... ...","code":""},{"path":"/dev/reference/wb_add_font.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add font for cell region — wb_add_font","text":"wbWorksheetObject, invisibly","code":""},{"path":"/dev/reference/wb_add_font.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"add font for cell region — wb_add_font","text":"add_font provides options openxml accepts font node, set. Usually name, size color user wants.","code":""},{"path":[]},{"path":"/dev/reference/wb_add_font.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add font for cell region — wb_add_font","text":"","code":"wb <- wb_workbook() %>% wb_add_worksheet(\"S1\") %>% wb_add_data(\"S1\", mtcars)  wb %>% wb_add_font(\"S1\", \"A1:K1\", name = \"Arial\", color = wb_color(theme = \"4\"))"},{"path":"/dev/reference/wb_add_form_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Add form control Checkbox, Radiobuttons or Dropmenu — wb_add_form_control","title":"Add form control Checkbox, Radiobuttons or Dropmenu — wb_add_form_control","text":"Add form control Checkbox, Radiobuttons Dropmenu","code":""},{"path":"/dev/reference/wb_add_form_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add form control Checkbox, Radiobuttons or Dropmenu — wb_add_form_control","text":"","code":"wb_add_form_control(   wb,   sheet = current_sheet(),   dims = \"A1\",   type = NULL,   text = NULL,   link = NULL,   range = NULL,   checked = FALSE )"},{"path":"/dev/reference/wb_add_form_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add form control Checkbox, Radiobuttons or Dropmenu — wb_add_form_control","text":"wb workbook object sheet worksheet workbook dims Optional row column spreadsheet dimension, e.g. \"A1\" type type \"Checkbox\" (default), \"Radio\" radio button \"Drop\" drop menu text text shown next Checkbox radio button link cell range link range cell range used input checked logical indicating Checkbox radio button checked","code":""},{"path":"/dev/reference/wb_add_form_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add form control Checkbox, Radiobuttons or Dropmenu — wb_add_form_control","text":"wbWorkbook object","code":""},{"path":"/dev/reference/wb_add_form_control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add form control Checkbox, Radiobuttons or Dropmenu — wb_add_form_control","text":"","code":"wb <- wb_workbook() %>% wb_add_worksheet() %>%   wb_add_form_control()"},{"path":"/dev/reference/wb_add_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a character vector as an Excel Formula — wb_add_formula","title":"Add a character vector as an Excel Formula — wb_add_formula","text":"Add character vector containing Excel formula worksheet.","code":""},{"path":"/dev/reference/wb_add_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a character vector as an Excel Formula — wb_add_formula","text":"","code":"wb_add_formula(   wb,   sheet = current_sheet(),   x,   startCol = 1,   startRow = 1,   dims = rowcol_to_dims(startRow, startCol),   array = FALSE,   cm = FALSE,   applyCellStyle = TRUE,   removeCellStyle = FALSE )"},{"path":"/dev/reference/wb_add_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a character vector as an Excel Formula — wb_add_formula","text":"wb Workbook object containing worksheet. sheet worksheet write . Can worksheet index name. x character vector. startCol vector specifying starting column write . startRow vector specifying starting row write . dims Spreadsheet dimensions determine startCol startRow: \"A1\", \"A1:B2\", \":B\" array bool function written type array cm special kind array function hides curly braces cell. Add , see \"@\" inserted formulas applyCellStyle write cell styles workbook removeCellStyle keep cell style?","code":""},{"path":"/dev/reference/wb_add_formula.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a character vector as an Excel Formula — wb_add_formula","text":"Currently English version functions supported. Please use local translation. examples show small list possible formulas: SUM(B2:B4) AVERAGE(B2:B4) MIN(B2:B4) MAX(B2:B4) ...","code":""},{"path":[]},{"path":"/dev/reference/wb_add_ignore_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Ignore error on worksheet — wb_add_ignore_error","title":"Ignore error on worksheet — wb_add_ignore_error","text":"Ignore error worksheet","code":""},{"path":"/dev/reference/wb_add_ignore_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ignore error on worksheet — wb_add_ignore_error","text":"","code":"wb_add_ignore_error(   wb,   sheet = current_sheet(),   dims = \"A1\",   calculatedColumn = FALSE,   emptyCellReference = FALSE,   evalError = FALSE,   formula = FALSE,   formulaRange = FALSE,   listDataValidation = FALSE,   numberStoredAsText = FALSE,   twoDigitTextYear = FALSE,   unlockedFormula = FALSE )"},{"path":"/dev/reference/wb_add_ignore_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ignore error on worksheet — wb_add_ignore_error","text":"wb workbook sheet sheet dims dims calculatedColumn calculatedColumn emptyCellReference emptyCellReference evalError evalError formula formula formulaRange formulaRange listDataValidation listDataValidation numberStoredAsText numberStoredAsText twoDigitTextYear twoDigitTextYear unlockedFormula unlockedFormula","code":""},{"path":"/dev/reference/wb_add_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert an image into a worksheet — wb_add_image","title":"Insert an image into a worksheet — wb_add_image","text":"Insert image worksheet","code":""},{"path":"/dev/reference/wb_add_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert an image into a worksheet — wb_add_image","text":"","code":"wb_add_image(   wb,   sheet = current_sheet(),   file,   width = 6,   height = 3,   startRow = 1,   startCol = 1,   rowOffset = 0,   colOffset = 0,   units = \"in\",   dpi = 300,   dims = rowcol_to_dim(startRow, startCol) )"},{"path":"/dev/reference/wb_add_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert an image into a worksheet — wb_add_image","text":"wb workbook object sheet name index worksheet file image file. Valid file types : \"jpeg\", \"png\", \"bmp\" width Width figure. height Height figure. startRow Row coordinate upper left corner image startCol Column coordinate upper left corner image rowOffset offset vector one two cell anchor within cell (row) colOffset offset vector one two cell anchor within cell (column) units Units width height. Can \"\", \"cm\" \"px\" dpi Image resolution used conversion units. dims Dimensions plot. Default absolute anchor, single cell (eg. \"A1\") oneCellAnchor, cell range (eg. \"A1:D4\") twoCellAnchor","code":""},{"path":[]},{"path":"/dev/reference/wb_add_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert an image into a worksheet — wb_add_image","text":"","code":"## Create a new workbook wb <- wb_workbook(\"Ayanami\")  ## Add some worksheets wb$add_worksheet(\"Sheet 1\") wb$add_worksheet(\"Sheet 2\") wb$add_worksheet(\"Sheet 3\")  ## Insert images img <- system.file(\"extdata\", \"einstein.jpg\", package = \"openxlsx2\") wb$add_image(\"Sheet 1\", img, startRow = 5, startCol = 3, width = 6, height = 5) wb$add_image(2, img, startRow = 2, startCol = 2) wb$add_image(3, img, width = 15, height = 12, startRow = 3, startCol = \"G\", units = \"cm\")"},{"path":"/dev/reference/wb_add_mschart.html","id":null,"dir":"Reference","previous_headings":"","what":"Add mschart object to an existing workbook — wb_add_mschart","title":"Add mschart object to an existing workbook — wb_add_mschart","text":"Add mschart object existing workbook","code":""},{"path":"/dev/reference/wb_add_mschart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add mschart object to an existing workbook — wb_add_mschart","text":"","code":"wb_add_mschart(   wb,   sheet = current_sheet(),   dims = NULL,   graph,   colOffset = 0,   rowOffset = 0 )"},{"path":"/dev/reference/wb_add_mschart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add mschart object to an existing workbook — wb_add_mschart","text":"wb workbook sheet sheet graph appear dims dimensions sheet appear graph mschart object colOffset, rowOffset startCol startRow","code":""},{"path":[]},{"path":"/dev/reference/wb_add_mschart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add mschart object to an existing workbook — wb_add_mschart","text":"","code":"if (requireNamespace(\"mschart\")) { require(mschart)  ## Add mschart to worksheet (adds data and chart) scatter <- ms_scatterchart(data = iris, x = \"Sepal.Length\", y = \"Sepal.Width\", group = \"Species\") scatter <- chart_settings(scatter, scatterstyle = \"marker\")  wb <- wb_workbook() %>%  wb_add_worksheet() %>%  wb_add_mschart(dims = \"F4:L20\", graph = scatter)  ## Add mschart to worksheet and use available data wb <- wb_workbook() %>%   wb_add_worksheet() %>%   wb_add_data(x = mtcars, dims = \"B2\")  # create wb_data object dat <- wb_data(wb, 1, dims = \"B2:E6\")  # call ms_scatterplot data_plot <- ms_scatterchart(   data = dat,   x = \"mpg\",   y = c(\"disp\", \"hp\"),   labels = c(\"disp\", \"hp\") )  # add the scatterplot to the data wb <- wb %>%   wb_add_mschart(dims = \"F4:L20\", graph = data_plot) } #> Loading required namespace: mschart #> Loading required package: mschart"},{"path":"/dev/reference/wb_add_numfmt.html","id":null,"dir":"Reference","previous_headings":"","what":"add numfmt for cell region — wb_add_numfmt","title":"add numfmt for cell region — wb_add_numfmt","text":"add numfmt cell region","code":""},{"path":"/dev/reference/wb_add_numfmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add numfmt for cell region — wb_add_numfmt","text":"","code":"wb_add_numfmt(wb, sheet = current_sheet(), dims = \"A1\", numfmt)"},{"path":"/dev/reference/wb_add_numfmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add numfmt for cell region — wb_add_numfmt","text":"wb workbook sheet worksheet dims cell range numfmt either id character","code":""},{"path":"/dev/reference/wb_add_numfmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add numfmt for cell region — wb_add_numfmt","text":"wbWorksheetObject, invisibly","code":""},{"path":[]},{"path":"/dev/reference/wb_add_numfmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add numfmt for cell region — wb_add_numfmt","text":"","code":"wb <- wb_workbook() %>% wb_add_worksheet(\"S1\") %>% wb_add_data(\"S1\", mtcars)  wb %>% wb_add_numfmt(\"S1\", dims = \"F1:F33\", numfmt = \"#.0\")"},{"path":"/dev/reference/wb_add_page_break.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a page break to a worksheet — wb_add_page_break","title":"Add a page break to a worksheet — wb_add_page_break","text":"Insert page breaks worksheet","code":""},{"path":"/dev/reference/wb_add_page_break.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a page break to a worksheet — wb_add_page_break","text":"","code":"wb_add_page_break(wb, sheet = current_sheet(), row = NULL, col = NULL)"},{"path":"/dev/reference/wb_add_page_break.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a page break to a worksheet — wb_add_page_break","text":"wb workbook object sheet name index worksheet row, col Either row number column number.  One must NULL","code":""},{"path":[]},{"path":"/dev/reference/wb_add_page_break.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a page break to a worksheet — wb_add_page_break","text":"","code":"wb <- wb_workbook() wb$add_worksheet(\"Sheet 1\") wb$add_data(sheet = 1, x = iris)  wb$add_page_break(sheet = 1, row = 10) wb$add_page_break(sheet = 1, row = 20) wb$add_page_break(sheet = 1, col = 2)  ## In Excel: View tab -> Page Break Preview"},{"path":"/dev/reference/wb_add_pivot_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Add pivot table to a worksheet — wb_add_pivot_table","title":"Add pivot table to a worksheet — wb_add_pivot_table","text":"add pivot table","code":""},{"path":"/dev/reference/wb_add_pivot_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add pivot table to a worksheet — wb_add_pivot_table","text":"","code":"wb_add_pivot_table(   wb,   x,   sheet = next_sheet(),   dims = \"A3\",   filter,   rows,   cols,   data,   fun,   params )"},{"path":"/dev/reference/wb_add_pivot_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add pivot table to a worksheet — wb_add_pivot_table","text":"wb Workbook object containing #' worksheet. x wb_data object sheet worksheet dims worksheet cell pivot table placed filter character object names used filter rows character object names used rows cols character object names used cols data character object names used data fun character object functions used data params list parameters modify pivot table creation","code":""},{"path":"/dev/reference/wb_add_pivot_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add pivot table to a worksheet — wb_add_pivot_table","text":"fun can either AVERAGE, COUNT, COUNTA, MAX, MIN, PRODUCT, STDEV, STDEVP, SUM, VAR, VARP. sheet empty unless opened spreadsheet software.","code":""},{"path":[]},{"path":"/dev/reference/wb_add_pivot_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add pivot table to a worksheet — wb_add_pivot_table","text":"","code":"wb <- wb_workbook() %>% wb_add_worksheet() %>% wb_add_data(x = mtcars)  df <- wb_data(wb)  wb <- wb %>% wb_add_pivot_table(df, dims = \"A3\",   filter = \"am\", rows = \"cyl\", cols = \"gear\", data = \"disp\")"},{"path":"/dev/reference/wb_add_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert the current plot into a worksheet — wb_add_plot","title":"Insert the current plot into a worksheet — wb_add_plot","text":"current plot saved temporary image file using grDevices::dev.copy() file written workbook using wb_add_image().","code":""},{"path":"/dev/reference/wb_add_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert the current plot into a worksheet — wb_add_plot","text":"","code":"wb_add_plot(   wb,   sheet = current_sheet(),   width = 6,   height = 4,   xy = NULL,   startRow = 1,   startCol = 1,   rowOffset = 0,   colOffset = 0,   fileType = \"png\",   units = \"in\",   dpi = 300,   dims = rowcol_to_dim(startRow, startCol) )"},{"path":"/dev/reference/wb_add_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert the current plot into a worksheet — wb_add_plot","text":"wb workbook object sheet name index worksheet width Width figure. Defaults 6in. height Height figure . Defaults 4in. xy Alternate way specify startRow startCol.  vector length 2 form (startcol, startRow) startRow Row coordinate upper left corner figure. xy[[2]] xy given. startCol Column coordinate upper left corner figure. xy[[1]] xy given. rowOffset offset within cell (row) colOffset offset within cell (column) fileType File type image units Units width height. Can \"\", \"cm\" \"px\" dpi Image resolution dims Worksheet dimension, single cell (\"A1\") cell range (\"A1:D4\")","code":""},{"path":[]},{"path":"/dev/reference/wb_add_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert the current plot into a worksheet — wb_add_plot","text":"","code":"if (requireNamespace(\"ggplot2\") && interactive()) { ## Create a new workbook wb <- wb_workbook()  ## Add a worksheet wb$add_worksheet(\"Sheet 1\", gridLines = FALSE)  ## create plot objects require(ggplot2) p1 <- ggplot(mtcars, aes(x = mpg, fill = as.factor(gear))) +   ggtitle(\"Distribution of Gas Mileage\") +   geom_density(alpha = I(.5)) p2 <- ggplot(Orange, aes(x = age, y = circumference, color = Tree)) +   geom_point() + geom_line()  ## Insert currently displayed plot to sheet 1, row 1, column 1 print(p1) # plot needs to be showing wb$add_plot(1, width = 5, height = 3.5, fileType = \"png\", units = \"in\")  ## Insert plot 2 print(p2) wb$add_plot(1, dims = \"J2\", width = 16, height = 10, fileType = \"png\", units = \"cm\")  } #> Loading required namespace: ggplot2"},{"path":"/dev/reference/wb_add_sparklines.html","id":null,"dir":"Reference","previous_headings":"","what":"add sparklines to workbook — wb_add_sparklines","title":"add sparklines to workbook — wb_add_sparklines","text":"add sparklines workbook","code":""},{"path":"/dev/reference/wb_add_sparklines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add sparklines to workbook — wb_add_sparklines","text":"","code":"wb_add_sparklines(wb, sheet = current_sheet(), sparklines)"},{"path":"/dev/reference/wb_add_sparklines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add sparklines to workbook — wb_add_sparklines","text":"wb workbook sheet sheet add sparklines sparklines sparklines object created create_sparklines()","code":""},{"path":[]},{"path":"/dev/reference/wb_add_sparklines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add sparklines to workbook — wb_add_sparklines","text":"","code":"sl <- create_sparklines(\"Sheet 1\", \"A3:K3\", \"L3\")  wb <- wb_workbook() %>%    wb_add_worksheet() %>%    wb_add_data(x = mtcars) %>%    wb_add_sparklines(sparklines = sl)"},{"path":"/dev/reference/wb_add_style.html","id":null,"dir":"Reference","previous_headings":"","what":"add style to workbook — wb_add_style","title":"add style to workbook — wb_add_style","text":"wb wrapper add style workbook","code":""},{"path":"/dev/reference/wb_add_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add style to workbook — wb_add_style","text":"","code":"wb_add_style(wb, style = NULL, style_name = NULL)"},{"path":"/dev/reference/wb_add_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add style to workbook — wb_add_style","text":"wb workbook style style xml character style_name style name used optional argument","code":""},{"path":[]},{"path":"/dev/reference/wb_add_style.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add style to workbook — wb_add_style","text":"","code":"yellow_f <- wb_color(hex = \"FF9C6500\") yellow_b <- wb_color(hex = \"FFFFEB9C\")  yellow <- create_dxfs_style(font_color = yellow_f, bgFill = yellow_b) wb <- wb_workbook() %>% wb_add_style(yellow)"},{"path":"/dev/reference/wb_add_worksheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a worksheet to a workbook — wb_add_worksheet","title":"Add a worksheet to a workbook — wb_add_worksheet","text":"Add worksheet workbook","code":""},{"path":"/dev/reference/wb_add_worksheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a worksheet to a workbook — wb_add_worksheet","text":"","code":"wb_add_worksheet(   wb,   sheet = next_sheet(),   gridLines = TRUE,   rowColHeaders = TRUE,   tabColor = NULL,   zoom = 100,   header = NULL,   footer = NULL,   oddHeader = header,   oddFooter = footer,   evenHeader = header,   evenFooter = footer,   firstHeader = header,   firstFooter = footer,   visible = c(\"true\", \"false\", \"hidden\", \"visible\", \"veryhidden\"),   hasDrawing = FALSE,   paperSize = getOption(\"openxlsx2.paperSize\", default = 9),   orientation = getOption(\"openxlsx2.orientation\", default = \"portrait\"),   hdpi = getOption(\"openxlsx2.hdpi\", default = getOption(\"openxlsx2.dpi\", default = 300)),   vdpi = getOption(\"openxlsx2.vdpi\", default = getOption(\"openxlsx2.dpi\", default = 300)),   ... )"},{"path":"/dev/reference/wb_add_worksheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a worksheet to a workbook — wb_add_worksheet","text":"wb Workbook object attach new worksheet sheet name new worksheet gridLines logical. FALSE, worksheet grid lines hidden. rowColHeaders logical. FALSE, worksheet colname rowname hidden. tabColor Color worksheet tab. valid color (belonging colors()) valid hex color beginning \"#\" zoom numeric 10 400. Worksheet zoom level percentage. header, oddHeader, evenHeader, firstHeader, footer, oddFooter, evenFooter, firstFooter Character vector length 3 corresponding positions left, center, right.  header footer used default additional arguments. Setting even, odd, first, overrides header/footer. Use NA skip position. visible FALSE, sheet hidden else visible. hasDrawing TRUE prepare drawing output (TODO work?) paperSize integer corresponding paper size. See ?ws_page_setup details. orientation One \"portrait\" \"landscape\" hdpi Horizontal DPI. Can set options(\"openxlsx2.dpi\" = X) options(\"openxlsx2.hdpi\" = X) vdpi Vertical DPI. Can set options(\"openxlsx2.dpi\" = X) options(\"openxlsx2.vdpi\" = X) ... ...","code":""},{"path":"/dev/reference/wb_add_worksheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a worksheet to a workbook — wb_add_worksheet","text":"wbWorkbook object wb","code":""},{"path":"/dev/reference/wb_add_worksheet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a worksheet to a workbook — wb_add_worksheet","text":"Headers footers can contain special tags &[Page] Page number &[Pages] Number pages &[Date] Current date &[Time] Current time &[Path] File path &[File] File name &[Tab] Worksheet name","code":""},{"path":[]},{"path":"/dev/reference/wb_add_worksheet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a worksheet to a workbook — wb_add_worksheet","text":"","code":"## Create a new workbook wb <- wb_workbook(\"Fred\")  ## Add 3 worksheets wb$add_worksheet(\"Sheet 1\") wb$add_worksheet(\"Sheet 2\", gridLines = FALSE) wb$add_worksheet(\"Sheet 3\", tabColor = \"red\") wb$add_worksheet(\"Sheet 4\", gridLines = FALSE, tabColor = \"#4F81BD\")  ## Headers and Footers wb$add_worksheet(\"Sheet 5\",   header = c(\"ODD HEAD LEFT\", \"ODD HEAD CENTER\", \"ODD HEAD RIGHT\"),   footer = c(\"ODD FOOT RIGHT\", \"ODD FOOT CENTER\", \"ODD FOOT RIGHT\"),   evenHeader = c(\"EVEN HEAD LEFT\", \"EVEN HEAD CENTER\", \"EVEN HEAD RIGHT\"),   evenFooter = c(\"EVEN FOOT RIGHT\", \"EVEN FOOT CENTER\", \"EVEN FOOT RIGHT\"),   firstHeader = c(\"TOP\", \"OF FIRST\", \"PAGE\"),   firstFooter = c(\"BOTTOM\", \"OF FIRST\", \"PAGE\") )  wb$add_worksheet(\"Sheet 6\",   header = c(\"&[Date]\", \"ALL HEAD CENTER 2\", \"&[Page] / &[Pages]\"),   footer = c(\"&[Path]&[File]\", NA, \"&[Tab]\"),   firstHeader = c(NA, \"Center Header of First Page\", NA),   firstFooter = c(NA, \"Center Footer of First Page\", NA) )  wb$add_worksheet(\"Sheet 7\",   header = c(\"ALL HEAD LEFT 2\", \"ALL HEAD CENTER 2\", \"ALL HEAD RIGHT 2\"),   footer = c(\"ALL FOOT RIGHT 2\", \"ALL FOOT CENTER 2\", \"ALL FOOT RIGHT 2\") )  wb$add_worksheet(\"Sheet 8\",   firstHeader = c(\"FIRST ONLY L\", NA, \"FIRST ONLY R\"),   firstFooter = c(\"FIRST ONLY L\", NA, \"FIRST ONLY R\") )  ## Need data on worksheet to see all headers and footers wb$add_data(sheet = 5, 1:400) wb$add_data(sheet = 6, 1:400) wb$add_data(sheet = 7, 1:400) wb$add_data(sheet = 8, 1:400)"},{"path":"/dev/reference/wb_clone_sheet_style.html","id":null,"dir":"Reference","previous_headings":"","what":"clone sheets style — wb_clone_sheet_style","title":"clone sheets style — wb_clone_sheet_style","text":"clone sheets style","code":""},{"path":"/dev/reference/wb_clone_sheet_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clone sheets style — wb_clone_sheet_style","text":"","code":"wb_clone_sheet_style(wb, from = current_sheet(), to)"},{"path":"/dev/reference/wb_clone_sheet_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"clone sheets style — wb_clone_sheet_style","text":"wb workbook sheet select style sheet apply style ","code":""},{"path":[]},{"path":"/dev/reference/wb_clone_worksheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Clone a worksheet to a workbook — wb_clone_worksheet","title":"Clone a worksheet to a workbook — wb_clone_worksheet","text":"Clone worksheet Workbook object","code":""},{"path":"/dev/reference/wb_clone_worksheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clone a worksheet to a workbook — wb_clone_worksheet","text":"","code":"wb_clone_worksheet(wb, old = current_sheet(), new = next_sheet())"},{"path":"/dev/reference/wb_clone_worksheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clone a worksheet to a workbook — wb_clone_worksheet","text":"wb wbWorkbook object old Name existing worksheet copy new Name New worksheet create","code":""},{"path":"/dev/reference/wb_clone_worksheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clone a worksheet to a workbook — wb_clone_worksheet","text":"wb object","code":""},{"path":[]},{"path":"/dev/reference/wb_clone_worksheet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clone a worksheet to a workbook — wb_clone_worksheet","text":"","code":"# Create a new workbook wb <- wb_workbook(\"Fred\")  # Add worksheets wb$add_worksheet(\"Sheet 1\") wb$clone_worksheet(\"Sheet 1\", \"Sheet 2\")"},{"path":"/dev/reference/wb_copy_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"copy cells around — wb_copy_cells","title":"copy cells around — wb_copy_cells","text":"copy cells around","code":""},{"path":"/dev/reference/wb_copy_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"copy cells around — wb_copy_cells","text":"","code":"wb_copy_cells(   wb,   sheet = current_sheet(),   dims = \"A1\",   data,   as_value = FALSE,   as_ref = FALSE,   transpose = FALSE )"},{"path":"/dev/reference/wb_copy_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"copy cells around — wb_copy_cells","text":"wb workbook sheet worksheet dims cell used start data wb_data object as_value copy value written as_ref references cell written transpose data written transposed","code":""},{"path":"/dev/reference/wb_copy_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"copy cells around — wb_copy_cells","text":"wbWorkbook invisibly","code":""},{"path":[]},{"path":"/dev/reference/wb_copy_cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"copy cells around — wb_copy_cells","text":"","code":"wb <- wb_workbook()$ add_worksheet()$   add_data(x = mtcars)$   add_fill(dims = \"A1:F1\", color = wb_color(\"yellow\"))  dat <- wb_data(wb, dims = \"A1:D4\", colNames = FALSE)  wb$   # 1:1 copy to M2   clone_worksheet(old = 1, new = \"Clone1\")$   copy_cells(data = dat, dims = \"M2\")"},{"path":"/dev/reference/wb_creators.html","id":null,"dir":"Reference","previous_headings":"","what":"Workbook creators — wb_creators","title":"Workbook creators — wb_creators","text":"Modify get workbook creators","code":""},{"path":"/dev/reference/wb_creators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Workbook creators — wb_creators","text":"","code":"wb_add_creators(wb, creators)  wb_set_creators(wb, creators)  wb_remove_creators(wb, creators)  wb_get_creators(wb)"},{"path":"/dev/reference/wb_creators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workbook creators — wb_creators","text":"wb wbWorkbook object creators character vector names","code":""},{"path":"/dev/reference/wb_creators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Workbook creators — wb_creators","text":"wb_set_creators(), wb_add_creators(), wb_remove_creators() return wbWorkbook object wb_get_creators() returns character vector creators","code":""},{"path":[]},{"path":"/dev/reference/wb_creators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Workbook creators — wb_creators","text":"","code":"# workbook made with default creator (see [wbWorkbook]) wb <- wb_workbook() wb_get_creators(wb) #> [1] \"runner\"  # add a new creator (assuming \"test\" isn't your default creator) wb <- wb_add_creators(wb, \"test\") wb_get_creators(wb) #> [1] \"runner\" \"test\"    # remove the creator (should be the same as before) wb <- wb_remove_creators(wb, \"test\") wb_get_creators(wb) #> [1] \"runner\""},{"path":"/dev/reference/wb_data.html","id":null,"dir":"Reference","previous_headings":"","what":"provide wb_data object as mschart input — wb_data","title":"provide wb_data object as mschart input — wb_data","text":"provide wb_data object mschart input","code":""},{"path":"/dev/reference/wb_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"provide wb_data object as mschart input — wb_data","text":"","code":"wb_data(wb, sheet = current_sheet(), dims, ...)"},{"path":"/dev/reference/wb_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"provide wb_data object as mschart input — wb_data","text":"wb workbook sheet sheet workbook either name index dims dimensions ... additional arguments wb_to_df. aware every argument valid.","code":""},{"path":[]},{"path":"/dev/reference/wb_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"provide wb_data object as mschart input — wb_data","text":"","code":"wb <- wb_workbook() %>%    wb_add_worksheet() %>%    wb_add_data(x = mtcars, dims = \"B2\")   wb_data(wb, 1, dims = \"B2:E6\") #>    mpg cyl disp  hp #> 3 21.0   6  160 110 #> 4 21.0   6  160 110 #> 5 22.8   4  108  93 #> 6 21.4   6  258 110"},{"path":"/dev/reference/wb_freeze_pane.html","id":null,"dir":"Reference","previous_headings":"","what":"Freeze a worksheet pane — wb_freeze_pane","title":"Freeze a worksheet pane — wb_freeze_pane","text":"Freeze worksheet pane","code":""},{"path":"/dev/reference/wb_freeze_pane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Freeze a worksheet pane — wb_freeze_pane","text":"","code":"wb_freeze_pane(   wb,   sheet = current_sheet(),   firstActiveRow = NULL,   firstActiveCol = NULL,   firstRow = FALSE,   firstCol = FALSE )"},{"path":"/dev/reference/wb_freeze_pane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Freeze a worksheet pane — wb_freeze_pane","text":"wb workbook object sheet name index worksheet firstActiveRow Top row active region firstActiveCol Furthest left column active region firstRow TRUE, freezes first row (equivalent firstActiveRow = 2) firstCol TRUE, freezes first column (equivalent firstActiveCol = 2)","code":""},{"path":[]},{"path":"/dev/reference/wb_freeze_pane.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Freeze a worksheet pane — wb_freeze_pane","text":"","code":"## Create a new workbook wb <- wb_workbook(\"Kenshin\")  ## Add some worksheets wb$add_worksheet(\"Sheet 1\") wb$add_worksheet(\"Sheet 2\") wb$add_worksheet(\"Sheet 3\") wb$add_worksheet(\"Sheet 4\")  ## Freeze Panes wb$freeze_pane(\"Sheet 1\", firstActiveRow = 5, firstActiveCol = 3) wb$freeze_pane(\"Sheet 2\", firstCol = TRUE) ## shortcut to firstActiveCol = 2 wb$freeze_pane(3, firstRow = TRUE) ## shortcut to firstActiveRow = 2 wb$freeze_pane(4, firstActiveRow = 1, firstActiveCol = \"D\")"},{"path":"/dev/reference/wb_get_base_font.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the workbook default font — wb_get_base_font","title":"Return the workbook default font — wb_get_base_font","text":"Get base font used workbook.","code":""},{"path":"/dev/reference/wb_get_base_font.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the workbook default font — wb_get_base_font","text":"","code":"wb_get_base_font(wb)"},{"path":"/dev/reference/wb_get_base_font.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the workbook default font — wb_get_base_font","text":"wb wbWorkbook object","code":""},{"path":[]},{"path":"/dev/reference/wb_get_base_font.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the workbook default font — wb_get_base_font","text":"","code":"## create a workbook wb <- wb_workbook() wb_get_base_font(wb) #> $size #> $size$val #> [1] \"11\" #>  #>  #> $color #> $color$theme #> [1] \"1\" #>  #>  #> $name #> $name$val #> [1] \"Calibri\" #>  #>   ## modify base font to size 10 Arial Narrow in red wb$set_base_font(fontSize = 10, fontColor = \"#FF0000\", fontName = \"Arial Narrow\")  wb_get_base_font(wb) #> $size #> $size$val #> [1] \"10\" #>  #>  #> $color #> $color$rgb #> [1] \"FFFF0000\" #>  #>  #> $name #> $name$val #> [1] \"Arial Narrow\" #>  #>"},{"path":"/dev/reference/wb_get_sheet_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sheet name — wb_get_sheet_name","title":"Get sheet name — wb_get_sheet_name","text":"Get sheet name","code":""},{"path":"/dev/reference/wb_get_sheet_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sheet name — wb_get_sheet_name","text":"","code":"wb_get_sheet_name(wb, index = NULL)"},{"path":"/dev/reference/wb_get_sheet_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sheet name — wb_get_sheet_name","text":"wb wbWorkbook object index Sheet name index","code":""},{"path":"/dev/reference/wb_get_sheet_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get sheet name — wb_get_sheet_name","text":"sheet index","code":""},{"path":"/dev/reference/wb_get_sheet_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get worksheet names for a workbook — wb_get_sheet_names","title":"Get worksheet names for a workbook — wb_get_sheet_names","text":"Gets worksheet names wbWorkbook object","code":""},{"path":"/dev/reference/wb_get_sheet_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get worksheet names for a workbook — wb_get_sheet_names","text":"","code":"wb_get_sheet_names(wb)"},{"path":"/dev/reference/wb_get_sheet_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get worksheet names for a workbook — wb_get_sheet_names","text":"wb wbWorkbook object","code":""},{"path":"/dev/reference/wb_get_sheet_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get worksheet names for a workbook — wb_get_sheet_names","text":"named  character vector sheet names order.  names represent original value worksheet prior character substitutions.","code":""},{"path":"/dev/reference/wb_get_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"List Excel tables in a workbook — wb_get_tables","title":"List Excel tables in a workbook — wb_get_tables","text":"List Excel tables workbook","code":""},{"path":"/dev/reference/wb_get_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Excel tables in a workbook — wb_get_tables","text":"","code":"wb_get_tables(wb, sheet = current_sheet())"},{"path":"/dev/reference/wb_get_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Excel tables in a workbook — wb_get_tables","text":"wb workbook object sheet name index worksheet","code":""},{"path":"/dev/reference/wb_get_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Excel tables in a workbook — wb_get_tables","text":"character vector table names specified sheet","code":""},{"path":"/dev/reference/wb_get_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Excel tables in a workbook — wb_get_tables","text":"","code":"wb <- wb_workbook() wb$add_worksheet(sheet = \"Sheet 1\") wb$add_data_table(sheet = \"Sheet 1\", x = iris) wb$add_data_table(sheet = 1, x = mtcars, tableName = \"mtcars\", startCol = 10)  wb$get_tables(sheet = \"Sheet 1\") #>   tab_name tab_ref #> 1   Table1 A1:E151 #> 2   mtcars  J1:T33"},{"path":"/dev/reference/wb_get_worksheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a worksheet from a wbWorkbook object — wb_get_worksheet","title":"Get a worksheet from a wbWorkbook object — wb_get_worksheet","text":"Get worksheet wbWorkbook object","code":""},{"path":"/dev/reference/wb_get_worksheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a worksheet from a wbWorkbook object — wb_get_worksheet","text":"","code":"wb_get_worksheet(wb, sheet)  wb_ws(wb, sheet)"},{"path":"/dev/reference/wb_get_worksheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a worksheet from a wbWorkbook object — wb_get_worksheet","text":"wb wbWorkbook object sheet sheet name index","code":""},{"path":"/dev/reference/wb_get_worksheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a worksheet from a wbWorkbook object — wb_get_worksheet","text":"wbWorksheet object","code":""},{"path":"/dev/reference/wb_grid_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Set worksheet gridlines to show or hide. — wb_grid_lines","title":"Set worksheet gridlines to show or hide. — wb_grid_lines","text":"Set worksheet gridlines show hide.","code":""},{"path":"/dev/reference/wb_grid_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set worksheet gridlines to show or hide. — wb_grid_lines","text":"","code":"wb_grid_lines(wb, sheet = current_sheet(), show = FALSE, print = show)"},{"path":"/dev/reference/wb_grid_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set worksheet gridlines to show or hide. — wb_grid_lines","text":"wb workbook object sheet name index worksheet show logical. FALSE, grid lines hidden. print logical. FALSE, grid lines printed.","code":""},{"path":"/dev/reference/wb_grid_lines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set worksheet gridlines to show or hide. — wb_grid_lines","text":"","code":"wb <- wb_load(file = system.file(\"extdata\", \"loadExample.xlsx\", package = \"openxlsx2\")) wb$get_sheet_names() ## list worksheets in workbook #>     IrisSample        testing         mtcars   mtCars Pivot  #>   \"IrisSample\"      \"testing\"       \"mtcars\" \"mtCars Pivot\"  wb$grid_lines(1, show = FALSE) wb$grid_lines(\"testing\", show = FALSE)"},{"path":"/dev/reference/wb_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load an existing .xlsx file — wb_load","title":"Load an existing .xlsx file — wb_load","text":"wb_load returns workbook object conserving styles formatting original .xlsx file.","code":""},{"path":"/dev/reference/wb_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load an existing .xlsx file — wb_load","text":"","code":"wb_load(file, xlsxFile = NULL, sheet, data_only = FALSE, calc_chain = FALSE)"},{"path":"/dev/reference/wb_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load an existing .xlsx file — wb_load","text":"file path existing .xlsx .xlsm file xlsxFile alias file sheet optional sheet parameter. applied, selected sheet loaded. data_only mode import data frame returned. strips wbWorkbook bare minimum. calc_chain optionally can keep calculation chain intact. used spreadsheet software identify order formulas evaluated. Removing calculation chain considered harmless. calc chain created upon next time worksheet loaded spreadsheet software. Keeping , might speed loading time said software.","code":""},{"path":"/dev/reference/wb_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load an existing .xlsx file — wb_load","text":"Workbook object.","code":""},{"path":"/dev/reference/wb_load.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load an existing .xlsx file — wb_load","text":"warning displayed xml namespace main found xlsx file. Certain xlsx files created third-party applications contain namespace (usually x). namespace required file work spreadsheet software expected openxlsx2. Therefore removed file loaded workbook. Removal generally expected safe, feature still experimental.","code":""},{"path":[]},{"path":"/dev/reference/wb_load.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load an existing .xlsx file — wb_load","text":"","code":"## load existing workbook from package folder wb <- wb_load(file = system.file(\"extdata\", \"loadExample.xlsx\", package = \"openxlsx2\")) wb$get_sheet_names() # list worksheets #>     IrisSample        testing         mtcars   mtCars Pivot  #>   \"IrisSample\"      \"testing\"       \"mtcars\" \"mtCars Pivot\"  wb ## view object #> A Workbook object. #>   #> Worksheets: #>  Sheets: IrisSample testing mtcars mtCars Pivot  #>  Write order: 1, 2, 3, 4 ## Add a worksheet wb$add_worksheet(\"A new worksheet\")"},{"path":"/dev/reference/wb_modify_basefont.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify the default font — wb_modify_basefont","title":"Modify the default font — wb_modify_basefont","text":"Modify default font workbook","code":""},{"path":"/dev/reference/wb_modify_basefont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify the default font — wb_modify_basefont","text":"","code":"wb_set_base_font(   wb,   fontSize = 11,   fontColor = wb_color(theme = \"1\"),   fontName = \"Calibri\",   ... )"},{"path":"/dev/reference/wb_modify_basefont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify the default font — wb_modify_basefont","text":"wb workbook object fontSize font size fontColor font color fontName Name font ... ...","code":""},{"path":"/dev/reference/wb_modify_basefont.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify the default font — wb_modify_basefont","text":"font name validated anyway.  Excel replaces unknown font names Arial. Base font black, size 11, Calibri.","code":""},{"path":"/dev/reference/wb_modify_basefont.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify the default font — wb_modify_basefont","text":"","code":"## create a workbook wb <- wb_workbook() wb$add_worksheet(\"S1\") ## modify base font to size 10 Arial Narrow in red wb$set_base_font(fontSize = 10, fontColor = \"#FF0000\", fontName = \"Arial Narrow\")  wb$add_data(\"S1\", iris) wb$add_data_table(\"S1\", x = iris, startCol = 10) ## font color does not affect tables"},{"path":"/dev/reference/wb_open.html","id":null,"dir":"Reference","previous_headings":"","what":"little worksheet opener — wb_open","title":"little worksheet opener — wb_open","text":"little worksheet opener","code":""},{"path":"/dev/reference/wb_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"little worksheet opener — wb_open","text":"","code":"wb_open(wb)"},{"path":"/dev/reference/wb_open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"little worksheet opener — wb_open","text":"wb workbook","code":""},{"path":"/dev/reference/wb_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Order of worksheets in xlsx file — wb_order","title":"Order of worksheets in xlsx file — wb_order","text":"Get/set order worksheets Workbook object","code":""},{"path":"/dev/reference/wb_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order of worksheets in xlsx file — wb_order","text":"","code":"wb_get_order(wb)  wb_set_order(wb, sheets)"},{"path":"/dev/reference/wb_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order of worksheets in xlsx file — wb_order","text":"wb wbWorkbook object sheets Sheet order","code":""},{"path":"/dev/reference/wb_order.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Order of worksheets in xlsx file — wb_order","text":"function reorder worksheets within workbook object, simply shuffles order writing file.","code":""},{"path":"/dev/reference/wb_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Order of worksheets in xlsx file — wb_order","text":"","code":"## setup a workbook with 3 worksheets wb <- wb_workbook() wb$add_worksheet(\"Sheet 1\", gridLines = FALSE) wb$add_data_table(sheet = 1, x = iris)  wb$add_worksheet(\"mtcars (Sheet 2)\", gridLines = FALSE) wb$add_data(sheet = 2, x = mtcars)  wb$add_worksheet(\"Sheet 3\", gridLines = FALSE) wb$add_data(sheet = 3, x = Formaldehyde)  wb_get_order(wb) #> [1] 1 2 3 wb$get_sheet_na #> NULL wb$set_order(c(1, 3, 2)) # switch position of sheets 2 & 3 wb$add_data(2, 'This is still the \"mtcars\" worksheet', startCol = 15) wb_get_order(wb) #> [1] 1 3 2 wb$get_sheet_names() ## ordering within workbook is not changed #>            Sheet 1            Sheet 3   mtcars (Sheet 2)  #>          \"Sheet 1\"          \"Sheet 3\" \"mtcars (Sheet 2)\"  wb$set_order(3:1)"},{"path":"/dev/reference/wb_protect.html","id":null,"dir":"Reference","previous_headings":"","what":"Protect a workbook from modifications — wb_protect","title":"Protect a workbook from modifications — wb_protect","text":"Protect unprotect workbook modifications user graphical user interface. Replaces existing protection.","code":""},{"path":"/dev/reference/wb_protect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Protect a workbook from modifications — wb_protect","text":"","code":"wb_protect(   wb,   protect = TRUE,   password = NULL,   lockStructure = FALSE,   lockWindows = FALSE,   type = 1,   fileSharing = FALSE,   username = unname(Sys.info()[\"user\"]),   readOnlyRecommended = FALSE )"},{"path":"/dev/reference/wb_protect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Protect a workbook from modifications — wb_protect","text":"wb workbook object protect Whether protect unprotect sheet (default=TRUE) password (optional) password required unprotect workbook lockStructure Whether workbook structure locked lockWindows Whether window position spreadsheet locked type Lock type (see details) fileSharing Whether enable popup requesting unlock password prompted username username fileSharing popup readOnlyRecommended Whether post unlock message appears stating workbook recommended opened readonly mode.","code":""},{"path":"/dev/reference/wb_protect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Protect a workbook from modifications — wb_protect","text":"Lock types: 1 xlsx password (default) 2 xlsx recommends read-4 xlsx enforces read-8 xlsx locked annotation","code":""},{"path":"/dev/reference/wb_protect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Protect a workbook from modifications — wb_protect","text":"","code":"wb <- wb_workbook() wb$add_worksheet(\"S1\") wb_protect(wb, protect = TRUE, password = \"Password\", lockStructure = TRUE)  # Remove the protection wb_protect(wb, protect = FALSE) #> A Workbook object. #>   #> Worksheets: #>  Sheets: S1  #>  Write order: 1  wb <- wb_protect(   wb,   protect = TRUE,   password = \"Password\",   lockStructure = TRUE,   type = 2L,   fileSharing = TRUE,   username = \"Test\",   readOnlyRecommended = TRUE )"},{"path":"/dev/reference/wb_protect_worksheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Protect a worksheet from modifications — wb_protect_worksheet","title":"Protect a worksheet from modifications — wb_protect_worksheet","text":"Protect unprotect worksheet modifications user graphical user interface. Replaces existing protection.","code":""},{"path":"/dev/reference/wb_protect_worksheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Protect a worksheet from modifications — wb_protect_worksheet","text":"","code":"wb_protect_worksheet(   wb,   sheet = current_sheet(),   protect = TRUE,   password = NULL,   properties = NULL )"},{"path":"/dev/reference/wb_protect_worksheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Protect a worksheet from modifications — wb_protect_worksheet","text":"wb workbook object sheet name index worksheet protect Whether protect unprotect sheet (default=TRUE) password (optional) password required unprotect worksheet properties character vector properties lock.  Can one following: \"selectLockedCells\", \"selectUnlockedCells\", \"formatCells\", \"formatColumns\", \"formatRows\", \"insertColumns\", \"insertRows\", \"insertHyperlinks\", \"deleteColumns\", \"deleteRows\", \"sort\", \"autoFilter\", \"pivotTables\", \"objects\", \"scenarios\"","code":""},{"path":"/dev/reference/wb_protect_worksheet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Protect a worksheet from modifications — wb_protect_worksheet","text":"","code":"wb <- wb_workbook() wb$add_worksheet(\"S1\") wb$add_data_table(1, x = iris[1:30, ]) # Formatting cells / columns is allowed , but inserting / deleting columns is protected: wb$protect_worksheet(\"S1\",   protect = TRUE,   properties = c(\"formatCells\", \"formatColumns\", \"insertColumns\", \"deleteColumns\") )  # Remove the protection wb$protect_worksheet(\"S1\", protect = FALSE) #> A Workbook object. #>   #> Worksheets: #>  Sheets: S1  #>  Write order: 1"},{"path":"/dev/reference/wb_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read from an Excel file or Workbook object — wb_read","title":"Read from an Excel file or Workbook object — wb_read","text":"Read data Excel file Workbook object data.frame","code":""},{"path":"/dev/reference/wb_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read from an Excel file or Workbook object — wb_read","text":"","code":"wb_read(   xlsxFile,   sheet = 1,   startRow = 1,   startCol = NULL,   rowNames = FALSE,   colNames = TRUE,   skipEmptyRows = FALSE,   skipEmptyCols = FALSE,   rows = NULL,   cols = NULL,   detectDates = TRUE,   namedRegion,   na.strings = \"NA\",   na.numbers = NA,   ... )"},{"path":"/dev/reference/wb_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read from an Excel file or Workbook object — wb_read","text":"xlsxFile xlsx file, Workbook object URL xlsx file. sheet name index sheet read data . startRow first row begin looking data. startCol first column begin looking data. rowNames TRUE, first column data used row names. colNames TRUE, first row data used column names. skipEmptyRows TRUE, empty rows skipped else empty rows first row containing data return row NAs. skipEmptyCols TRUE, empty columns skipped. rows numeric vector specifying rows Excel file read. NULL, rows read. cols numeric vector specifying columns Excel file read. NULL, columns read. detectDates TRUE, attempt recognize dates perform conversion. namedRegion named region Workbook. NULL startRow, rows cols parameters ignored. na.strings character vector strings interpreted NA. Blank cells returned NA. na.numbers numeric vector digits interpreted NA. Blank cells returned NA. ... additional arguments passed wb_to_df()","code":""},{"path":"/dev/reference/wb_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read from an Excel file or Workbook object — wb_read","text":"data.frame","code":""},{"path":"/dev/reference/wb_read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read from an Excel file or Workbook object — wb_read","text":"Creates data.frame data worksheet.","code":""},{"path":[]},{"path":"/dev/reference/wb_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read from an Excel file or Workbook object — wb_read","text":"","code":"xlsxFile <- system.file(\"extdata\", \"readTest.xlsx\", package = \"openxlsx2\") df1 <- wb_read(xlsxFile = xlsxFile, sheet = 1)  xlsxFile <- system.file(\"extdata\", \"readTest.xlsx\", package = \"openxlsx2\") df1 <- wb_read(xlsxFile = xlsxFile, sheet = 1, rows = c(1, 3, 5), cols = 1:3)"},{"path":"/dev/reference/wb_remove_col_widths.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove column widths from a worksheet — wb_remove_col_widths","title":"Remove column widths from a worksheet — wb_remove_col_widths","text":"Remove column widths worksheet","code":""},{"path":"/dev/reference/wb_remove_col_widths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove column widths from a worksheet — wb_remove_col_widths","text":"","code":"wb_remove_col_widths(wb, sheet = current_sheet(), cols)"},{"path":"/dev/reference/wb_remove_col_widths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove column widths from a worksheet — wb_remove_col_widths","text":"wb workbook object sheet name index worksheet cols Indices columns remove custom width () .","code":""},{"path":[]},{"path":"/dev/reference/wb_remove_col_widths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove column widths from a worksheet — wb_remove_col_widths","text":"","code":"## Create a new workbook wb <- wb_load(file = system.file(\"extdata\", \"loadExample.xlsx\", package = \"openxlsx2\"))  ## remove column widths in columns 1 to 20 wb_remove_col_widths(wb, 1, cols = 1:20)"},{"path":"/dev/reference/wb_remove_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a worksheet filter — wb_remove_filter","title":"Remove a worksheet filter — wb_remove_filter","text":"Removes filters wb_add_filter() write_data()","code":""},{"path":"/dev/reference/wb_remove_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a worksheet filter — wb_remove_filter","text":"","code":"wb_remove_filter(wb, sheet = current_sheet())"},{"path":"/dev/reference/wb_remove_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a worksheet filter — wb_remove_filter","text":"wb workbook object sheet vector names indices worksheets","code":""},{"path":"/dev/reference/wb_remove_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a worksheet filter — wb_remove_filter","text":"","code":"wb <- wb_workbook() wb$add_worksheet(\"Sheet 1\") wb$add_worksheet(\"Sheet 2\") wb$add_worksheet(\"Sheet 3\")  wb$add_data(1, iris) wb_add_filter(wb, 1, row = 1, cols = seq_along(iris))  ## Equivalently wb$add_data(2, x = iris, withFilter = TRUE)  ## Similarly wb$add_data_table(3, iris)  ## remove filters wb_remove_filter(wb, 1:2) ## remove filters wb_remove_filter(wb, 3) ## Does not affect tables!"},{"path":"/dev/reference/wb_remove_row_heights.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove custom row heights from a worksheet — wb_remove_row_heights","title":"Remove custom row heights from a worksheet — wb_remove_row_heights","text":"Remove row heights worksheet","code":""},{"path":"/dev/reference/wb_remove_row_heights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove custom row heights from a worksheet — wb_remove_row_heights","text":"","code":"wb_remove_row_heights(wb, sheet = current_sheet(), rows)"},{"path":"/dev/reference/wb_remove_row_heights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove custom row heights from a worksheet — wb_remove_row_heights","text":"wb workbook object sheet name index worksheet rows Indices rows remove custom height () .","code":""},{"path":[]},{"path":"/dev/reference/wb_remove_row_heights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove custom row heights from a worksheet — wb_remove_row_heights","text":"","code":"## Create a new workbook wb <- wb_load(file = system.file(\"extdata\", \"loadExample.xlsx\", package = \"openxlsx2\"))  ## remove any custom row heights in rows 1 to 10 wb$remove_row_heights(1, rows = 1:10)"},{"path":"/dev/reference/wb_remove_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove an Excel table in a workbook — wb_remove_tables","title":"Remove an Excel table in a workbook — wb_remove_tables","text":"List Excel tables workbook","code":""},{"path":"/dev/reference/wb_remove_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove an Excel table in a workbook — wb_remove_tables","text":"","code":"wb_remove_tables(wb, sheet = current_sheet(), table, remove_data = TRUE)"},{"path":"/dev/reference/wb_remove_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove an Excel table in a workbook — wb_remove_tables","text":"wb workbook object sheet name index worksheet table Name table remove. See wb_get_tables() remove_data Removes data well","code":""},{"path":"/dev/reference/wb_remove_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove an Excel table in a workbook — wb_remove_tables","text":"character vector table names specified sheet","code":""},{"path":"/dev/reference/wb_remove_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove an Excel table in a workbook — wb_remove_tables","text":"","code":"wb <- wb_workbook() wb$add_worksheet(sheet = \"Sheet 1\") wb$add_worksheet(sheet = \"Sheet 2\") wb$add_data_table(sheet = \"Sheet 1\", x = iris, tableName = \"iris\") wb$add_data_table(sheet = 1, x = mtcars, tableName = \"mtcars\", startCol = 10)   wb <- wb_remove_worksheet(wb, sheet = 1) ## delete worksheet removes table objects  wb$add_data_table(sheet = 1, x = iris, tableName = \"iris\") wb$add_data_table(sheet = 1, x = mtcars, tableName = \"mtcars\", startCol = 10)  ## wb_remove_tables() deletes table object and all data wb_get_tables(wb, sheet = 1) #>   tab_name tab_ref #> 3     iris A1:E151 #> 4   mtcars  J1:T33 wb$remove_tables(sheet = 1, table = \"iris\") wb$add_data_table(sheet = 1, x = iris, tableName = \"iris\", startCol = 1)  wb_get_tables(wb, sheet = 1) #>   tab_name tab_ref #> 4   mtcars  J1:T33 #> 5     iris A1:E151 wb$remove_tables(sheet = 1, table = \"iris\") wb$add_data_table(sheet = 1, x = iris, tableName = \"iris\", startCol = 1)"},{"path":"/dev/reference/wb_remove_worksheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a worksheet from a workbook — wb_remove_worksheet","title":"Remove a worksheet from a workbook — wb_remove_worksheet","text":"Remove worksheet Workbook object Remove worksheet workbook","code":""},{"path":"/dev/reference/wb_remove_worksheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a worksheet from a workbook — wb_remove_worksheet","text":"","code":"wb_remove_worksheet(wb, sheet = current_sheet())"},{"path":"/dev/reference/wb_remove_worksheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a worksheet from a workbook — wb_remove_worksheet","text":"wb workbook object sheet name index worksheet","code":""},{"path":"/dev/reference/wb_remove_worksheet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a worksheet from a workbook — wb_remove_worksheet","text":"","code":"## load a workbook wb <- wb_load(file = system.file(\"extdata\", \"loadExample.xlsx\", package = \"openxlsx2\"))  ## Remove sheet 2 wb <- wb_remove_worksheet(wb, 2)"},{"path":"/dev/reference/wb_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Workbook to file — wb_save","title":"Save Workbook to file — wb_save","text":"Save Workbook file","code":""},{"path":"/dev/reference/wb_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Workbook to file — wb_save","text":"","code":"wb_save(wb, path = NULL, overwrite = TRUE)"},{"path":"/dev/reference/wb_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Workbook to file — wb_save","text":"wb wbWorkbook object write file path path save workbook overwrite FALSE, overwrite path exists","code":""},{"path":"/dev/reference/wb_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Workbook to file — wb_save","text":"wbWorkbook object, invisibly","code":""},{"path":[]},{"path":"/dev/reference/wb_save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Workbook to file — wb_save","text":"","code":"## Create a new workbook and add a worksheet wb <- wb_workbook(\"Creator of workbook\") wb$add_worksheet(sheet = \"My first worksheet\")  ## Save workbook to working directory # \\donttest{ wb_save(wb, path = temp_xlsx(), overwrite = TRUE) # }"},{"path":"/dev/reference/wb_set_bookview.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the workbook position, size and filter — wb_set_bookview","title":"Set the workbook position, size and filter — wb_set_bookview","text":"Get base font used workbook.","code":""},{"path":"/dev/reference/wb_set_bookview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the workbook position, size and filter — wb_set_bookview","text":"","code":"wb_set_bookview(   wb,   activeTab = NULL,   autoFilterDateGrouping = NULL,   firstSheet = NULL,   minimized = NULL,   showHorizontalScroll = NULL,   showSheetTabs = NULL,   showVerticalScroll = NULL,   tabRatio = NULL,   visibility = NULL,   windowHeight = NULL,   windowWidth = NULL,   xWindow = NULL,   yWindow = NULL )"},{"path":"/dev/reference/wb_set_bookview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the workbook position, size and filter — wb_set_bookview","text":"wb wbWorkbook object activeTab activeTab autoFilterDateGrouping autoFilterDateGrouping firstSheet firstSheet minimized minimized showHorizontalScroll showHorizontalScroll showSheetTabs showSheetTabs showVerticalScroll showVerticalScroll tabRatio tabRatio visibility visibility windowHeight windowHeight windowWidth windowWidth xWindow xWindow yWindow yWindow","code":""},{"path":"/dev/reference/wb_set_bookview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the workbook position, size and filter — wb_set_bookview","text":"wbWorkbook object","code":""},{"path":"/dev/reference/wb_set_col_widths.html","id":null,"dir":"Reference","previous_headings":"","what":"Set worksheet column widths — wb_set_col_widths","title":"Set worksheet column widths — wb_set_col_widths","text":"Set worksheet column widths specific width \"auto\".","code":""},{"path":"/dev/reference/wb_set_col_widths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set worksheet column widths — wb_set_col_widths","text":"","code":"wb_set_col_widths(   wb,   sheet = current_sheet(),   cols,   widths = 8.43,   hidden = FALSE )"},{"path":"/dev/reference/wb_set_col_widths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set worksheet column widths — wb_set_col_widths","text":"wb wbWorkbook object sheet name index worksheet cols Indices cols set width widths width set cols specified Excel column width units \"auto\" automatic sizing. widths argument recycled length cols. default width 8.43. Though specific default width Excel, depends Excel version, operating system DPI settings used. Setting specific value also guarantee output selected width. hidden Logical vector. TRUE column hidden.","code":""},{"path":"/dev/reference/wb_set_col_widths.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set worksheet column widths — wb_set_col_widths","text":"global min max column width \"auto\" columns set (default values show): options(\"openxlsx2.minWidth\" = 3) options(\"openxlsx2.maxWidth\" = 250) ## maximum width allowed Excel NOTE: calculation column widths can slow large worksheets. NOTE: hidden parameter may conflict one set wb_group_cols; changing one update .","code":""},{"path":[]},{"path":"/dev/reference/wb_set_col_widths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set worksheet column widths — wb_set_col_widths","text":"","code":"## Create a new workbook wb <- wb_workbook()  ## Add a worksheet wb$add_worksheet(\"Sheet 1\")  ## set col widths wb$set_col_widths(1, cols = c(1, 4, 6, 7, 9), widths = c(16, 15, 12, 18, 33))  ## auto columns wb$add_worksheet(\"Sheet 2\") wb$add_data(sheet = 2, x = iris) wb$set_col_widths(sheet = 2, cols = 1:5, widths = \"auto\")"},{"path":"/dev/reference/wb_set_header_footer.html","id":null,"dir":"Reference","previous_headings":"","what":"Set document headers and footers — wb_set_header_footer","title":"Set document headers and footers — wb_set_header_footer","text":"Set document headers footers","code":""},{"path":"/dev/reference/wb_set_header_footer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set document headers and footers — wb_set_header_footer","text":"","code":"wb_set_header_footer(   wb,   sheet = current_sheet(),   header = NULL,   footer = NULL,   evenHeader = NULL,   evenFooter = NULL,   firstHeader = NULL,   firstFooter = NULL )"},{"path":"/dev/reference/wb_set_header_footer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set document headers and footers — wb_set_header_footer","text":"wb workbook object sheet name index worksheet header document header. Character vector length 3 corresponding positions left, center, right. Use NA skip position. footer document footer. Character vector length 3 corresponding positions left, center, right. Use NA skip position. evenHeader document header even pages. evenFooter document footer even pages. firstHeader document header first page . firstFooter document footer first page .","code":""},{"path":"/dev/reference/wb_set_header_footer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set document headers and footers — wb_set_header_footer","text":"Headers footers can contain special tags &[Page] Page number &[Pages] Number pages &[Date] Current date &[Time] Current time &[Path] File path &[File] File name &[Tab] Worksheet name","code":""},{"path":[]},{"path":"/dev/reference/wb_set_header_footer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set document headers and footers — wb_set_header_footer","text":"","code":"wb <- wb_workbook()  wb$add_worksheet(\"S1\") wb$add_worksheet(\"S2\") wb$add_worksheet(\"S3\") wb$add_worksheet(\"S4\")  wb$add_data(1, 1:400) wb$add_data(2, 1:400) wb$add_data(3, 3:400) wb$add_data(4, 3:400)  wb$set_header_footer(   sheet = \"S1\",   header = c(\"ODD HEAD LEFT\", \"ODD HEAD CENTER\", \"ODD HEAD RIGHT\"),   footer = c(\"ODD FOOT RIGHT\", \"ODD FOOT CENTER\", \"ODD FOOT RIGHT\"),   evenHeader = c(\"EVEN HEAD LEFT\", \"EVEN HEAD CENTER\", \"EVEN HEAD RIGHT\"),   evenFooter = c(\"EVEN FOOT RIGHT\", \"EVEN FOOT CENTER\", \"EVEN FOOT RIGHT\"),   firstHeader = c(\"TOP\", \"OF FIRST\", \"PAGE\"),   firstFooter = c(\"BOTTOM\", \"OF FIRST\", \"PAGE\") )  wb$set_header_footer(   sheet = 2,   header = c(\"&[Date]\", \"ALL HEAD CENTER 2\", \"&[Page] / &[Pages]\"),   footer = c(\"&[Path]&[File]\", NA, \"&[Tab]\"),   firstHeader = c(NA, \"Center Header of First Page\", NA),   firstFooter = c(NA, \"Center Footer of First Page\", NA) )  wb$set_header_footer(   sheet = 3,   header = c(\"ALL HEAD LEFT 2\", \"ALL HEAD CENTER 2\", \"ALL HEAD RIGHT 2\"),   footer = c(\"ALL FOOT RIGHT 2\", \"ALL FOOT CENTER 2\", \"ALL FOOT RIGHT 2\") )  wb$set_header_footer(   sheet = 4,   firstHeader = c(\"FIRST ONLY L\", NA, \"FIRST ONLY R\"),   firstFooter = c(\"FIRST ONLY L\", NA, \"FIRST ONLY R\") )"},{"path":"/dev/reference/wb_set_last_modified_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Add another author to the meta data of the file. — wb_set_last_modified_by","title":"Add another author to the meta data of the file. — wb_set_last_modified_by","text":"Just wrapper wb$set_last_modified_by()","code":""},{"path":"/dev/reference/wb_set_last_modified_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add another author to the meta data of the file. — wb_set_last_modified_by","text":"","code":"wb_set_last_modified_by(wb, LastModifiedBy)"},{"path":"/dev/reference/wb_set_last_modified_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add another author to the meta data of the file. — wb_set_last_modified_by","text":"wb workbook object LastModifiedBy string object name LastModifiedBy-User","code":""},{"path":[]},{"path":"/dev/reference/wb_set_last_modified_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add another author to the meta data of the file. — wb_set_last_modified_by","text":"","code":"wb <- wb_workbook() wb_set_last_modified_by(wb, \"test\")"},{"path":"/dev/reference/wb_set_row_heights.html","id":null,"dir":"Reference","previous_headings":"","what":"Set worksheet row heights — wb_set_row_heights","title":"Set worksheet row heights — wb_set_row_heights","text":"Set worksheet row heights","code":""},{"path":"/dev/reference/wb_set_row_heights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set worksheet row heights — wb_set_row_heights","text":"","code":"wb_set_row_heights(   wb,   sheet = current_sheet(),   rows,   heights = NULL,   hidden = FALSE )"},{"path":"/dev/reference/wb_set_row_heights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set worksheet row heights — wb_set_row_heights","text":"wb wbWorkbook object sheet name index worksheet rows Indices rows set height heights Heights set rows specified Excel column height units. hidden Option hide rows.","code":""},{"path":[]},{"path":"/dev/reference/wb_set_row_heights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set worksheet row heights — wb_set_row_heights","text":"","code":"## Create a new workbook wb <- wb_workbook()  ## Add a worksheet wb$add_worksheet(\"Sheet 1\")  ## set row heights wb <- wb_set_row_heights(   wb, 1,   rows = c(1, 4, 22, 2, 19),   heights = c(24, 28, 32, 42, 33) )  ## overwrite row 1 height wb <- wb_set_row_heights(wb, 1, rows = 1, heights = 40)"},{"path":"/dev/reference/wb_set_sheet_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Set worksheet names for a workbook — wb_set_sheet_names","title":"Set worksheet names for a workbook — wb_set_sheet_names","text":"Sets worksheet names wbWorkbook object","code":""},{"path":"/dev/reference/wb_set_sheet_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set worksheet names for a workbook — wb_set_sheet_names","text":"","code":"wb_set_sheet_names(wb, old = NULL, new)"},{"path":"/dev/reference/wb_set_sheet_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set worksheet names for a workbook — wb_set_sheet_names","text":"wb wbWorkbook object old name (index) old sheet name. NULL assume worksheets renamed. new name new sheet","code":""},{"path":"/dev/reference/wb_set_sheet_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set worksheet names for a workbook — wb_set_sheet_names","text":"wbWorkbook object","code":""},{"path":"/dev/reference/wb_set_sheetview.html","id":null,"dir":"Reference","previous_headings":"","what":"add sheetview — wb_set_sheetview","title":"add sheetview — wb_set_sheetview","text":"add sheetview","code":""},{"path":"/dev/reference/wb_set_sheetview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add sheetview — wb_set_sheetview","text":"","code":"wb_set_sheetview(   wb,   sheet = current_sheet(),   colorId = NULL,   defaultGridColor = NULL,   rightToLeft = NULL,   showFormulas = NULL,   showGridLines = NULL,   showOutlineSymbols = NULL,   showRowColHeaders = NULL,   showRuler = NULL,   showWhiteSpace = NULL,   showZeros = NULL,   tabSelected = NULL,   topLeftCell = NULL,   view = NULL,   windowProtection = NULL,   workbookViewId = NULL,   zoomScale = NULL,   zoomScaleNormal = NULL,   zoomScalePageLayoutView = NULL,   zoomScaleSheetLayoutView = NULL )"},{"path":"/dev/reference/wb_set_sheetview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add sheetview — wb_set_sheetview","text":"wb workbook sheet sheet colorId, defaultGridColor Integer: color, default 64 rightToLeft Logical: TRUE column ordering right  left showFormulas Logical: TRUE cell formulas shown showGridLines Logical: TRUE worksheet grid shown showOutlineSymbols Logical: TRUE outline symbols shown showRowColHeaders Logical: TRUE row column headers shown showRuler Logical: TRUE ruler shown page layout view showWhiteSpace Logical: TRUE margins shown page layout view showZeros Logical: FALSE cells containing zero shown blank !showFormulas tabSelected Integer: zero vector indicating selected tab topLeftCell Cell: cell shown top left corner / top right rightToLeft view View: \"normal\", \"pageBreakPreview\" \"pageLayout\" windowProtection Logical: TRUE panes protected workbookViewId Interger: Pointing view inside workbook zoomScale, zoomScaleNormal, zoomScalePageLayoutView, zoomScaleSheetLayoutView Integer: zoom scale 10 400. values current, normal etc.","code":""},{"path":"/dev/reference/wb_set_sheetview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add sheetview — wb_set_sheetview","text":"wbWorksheetObject, invisibly","code":""},{"path":"/dev/reference/wb_set_sheetview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add sheetview — wb_set_sheetview","text":"","code":"wb <- wb_workbook()$add_worksheet()  wb$set_sheetview(   zoomScale = 75,   rightToLeft = FALSE,   showFormulas = TRUE,   showGridLines = TRUE,   showOutlineSymbols = FALSE,   showRowColHeaders = TRUE,   showRuler = TRUE,   showWhiteSpace = FALSE,   tabSelected = 1,   topLeftCell = \"B1\",   view = \"normal\",   windowProtection = TRUE )"},{"path":"/dev/reference/wb_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Dataframe from Workbook — wb_to_df","title":"Create Dataframe from Workbook — wb_to_df","text":"Simple function create dataframe workbook. Simple simply written .","code":""},{"path":"/dev/reference/wb_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Dataframe from Workbook — wb_to_df","text":"","code":"wb_to_df(   xlsxFile,   sheet,   startRow = 1,   startCol = NULL,   rowNames = FALSE,   colNames = TRUE,   skipEmptyRows = FALSE,   skipEmptyCols = FALSE,   skipHiddenRows = FALSE,   skipHiddenCols = FALSE,   rows = NULL,   cols = NULL,   detectDates = TRUE,   na.strings = \"#N/A\",   na.numbers = NA,   fillMergedCells = FALSE,   dims,   showFormula = FALSE,   convert = TRUE,   types,   named_region )"},{"path":"/dev/reference/wb_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Dataframe from Workbook — wb_to_df","text":"xlsxFile xlsx file, Workbook object URL xlsx file. sheet Either sheet name index. missing first sheet workbook selected. startRow first row begin looking data. startCol first column begin looking data. rowNames TRUE, first col data used row names. colNames TRUE, first row data used column names. skipEmptyRows TRUE, empty rows skipped. skipEmptyCols TRUE, empty columns skipped. skipHiddenRows TRUE, hidden rows skipped. skipHiddenCols TRUE, hidden columns skipped. rows numeric vector specifying rows Excel file read. NULL, rows read. cols numeric vector specifying columns Excel file read. NULL, columns read. detectDates TRUE, attempt recognize dates perform conversion. na.strings character vector strings interpreted NA. Blank cells returned NA. na.numbers numeric vector digits interpreted NA. Blank cells returned NA. fillMergedCells TRUE, value merged cell given cells within merge. dims Character string type \"A1:B2\" optional dimensions imported. showFormula TRUE, underlying Excel formulas shown. convert TRUE, conversion dates numerics attempted. types named numeric indicating, type data. 0: character, 1: numeric, 2: date, 3: posixt, 4:logical. Names must match returned data named_region Character string named_region (defined name table). sheet selected, first appearance selected.","code":""},{"path":"/dev/reference/wb_to_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Dataframe from Workbook — wb_to_df","text":"Depending R package hms loaded, wb_to_df() returns hms variables string variables hh:mm:ss format.","code":""},{"path":"/dev/reference/wb_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Dataframe from Workbook — wb_to_df","text":"","code":"###########################################################################   # numerics, dates, missings, bool and string   xlsxFile <- system.file(\"extdata\", \"readTest.xlsx\", package = \"openxlsx2\")   wb1 <- wb_load(xlsxFile)    # import workbook   wb_to_df(wb1) #>     Var1 Var2 NA  Var3  Var4       Var5         Var6    Var7 #> 2   TRUE    1 NA     1     a 2015-02-07 3209324 This #DIV/0! #> 3   TRUE   NA NA #NUM!     b 2015-02-06         <NA>    <NA> #> 4   TRUE    2 NA  1.34     c 2015-02-05         <NA>   #NUM! #> 5  FALSE    2 NA  <NA> #NUM!       <NA>         <NA>    <NA> #> 6  FALSE    3 NA  1.56     e       <NA>         <NA>    <NA> #> 7  FALSE    1 NA   1.7     f 2015-02-02         <NA>    <NA> #> 8     NA   NA NA  <NA>  <NA> 2015-02-01         <NA>    <NA> #> 9  FALSE    2 NA    23     h 2015-01-31         <NA>    <NA> #> 10 FALSE    3 NA  67.3     i 2015-01-30         <NA>    <NA> #> 11    NA    1 NA   123  <NA> 2015-01-29         <NA>    <NA>    # do not convert first row to colNames   wb_to_df(wb1, colNames = FALSE) #>        A    B  C     D     E          F            G       H #> 1     NA Var2 NA  Var3  Var4       Var5         Var6    Var7 #> 2   TRUE    1 NA     1     a 2015-02-07 3209324 This #DIV/0! #> 3   TRUE <NA> NA #NUM!     b 2015-02-06         <NA>    <NA> #> 4   TRUE    2 NA  1.34     c 2015-02-05         <NA>   #NUM! #> 5  FALSE    2 NA  <NA> #NUM!       <NA>         <NA>    <NA> #> 6  FALSE    3 NA  1.56     e       <NA>         <NA>    <NA> #> 7  FALSE    1 NA   1.7     f 2015-02-02         <NA>    <NA> #> 8     NA <NA> NA  <NA>  <NA> 2015-02-01         <NA>    <NA> #> 9  FALSE    2 NA    23     h 2015-01-31         <NA>    <NA> #> 10 FALSE    3 NA  67.3     i 2015-01-30         <NA>    <NA> #> 11    NA    1 NA   123  <NA> 2015-01-29         <NA>    <NA>    # do not try to identify dates in the data   wb_to_df(wb1, detectDates = FALSE) #>     Var1 Var2 NA  Var3  Var4  Var5         Var6    Var7 #> 2   TRUE    1 NA     1     a 42042 3209324 This #DIV/0! #> 3   TRUE   NA NA #NUM!     b 42041         <NA>    <NA> #> 4   TRUE    2 NA  1.34     c 42040         <NA>   #NUM! #> 5  FALSE    2 NA  <NA> #NUM!    NA         <NA>    <NA> #> 6  FALSE    3 NA  1.56     e    NA         <NA>    <NA> #> 7  FALSE    1 NA   1.7     f 42037         <NA>    <NA> #> 8     NA   NA NA  <NA>  <NA> 42036         <NA>    <NA> #> 9  FALSE    2 NA    23     h 42035         <NA>    <NA> #> 10 FALSE    3 NA  67.3     i 42034         <NA>    <NA> #> 11    NA    1 NA   123  <NA> 42033         <NA>    <NA>    # return the underlying Excel formula instead of their values   wb_to_df(wb1, showFormula = TRUE) #>     Var1 Var2 NA  Var3  Var4       Var5                Var6  Var7 #> 2   TRUE    1 NA     1     a 2015-02-07 \"3209324\" & \" This\"   1/0 #> 3   TRUE   NA NA #NUM!     b 2015-02-06                <NA>  <NA> #> 4   TRUE    2 NA  1.34     c 2015-02-05                <NA> #NUM! #> 5  FALSE    2 NA  <NA> #NUM!       <NA>                <NA>  <NA> #> 6  FALSE    3 NA  1.56     e       <NA>                <NA>  <NA> #> 7  FALSE    1 NA   1.7     f 2015-02-02                <NA>  <NA> #> 8     NA   NA NA  <NA>  <NA> 2015-02-01                <NA>  <NA> #> 9  FALSE    2 NA    23     h 2015-01-31                <NA>  <NA> #> 10 FALSE    3 NA  67.3     i 2015-01-30                <NA>  <NA> #> 11    NA    1 NA   123  <NA> 2015-01-29                <NA>  <NA>    # read dimension without colNames   wb_to_df(wb1, dims = \"A2:C5\", colNames = FALSE) #>       A  B  C #> 2  TRUE  1 NA #> 3  TRUE NA NA #> 4  TRUE  2 NA #> 5 FALSE  2 NA    # read selected cols   wb_to_df(wb1, cols = c(1:2, 7)) #>     Var1 Var2         Var6 #> 2   TRUE    1 3209324 This #> 3   TRUE   NA         <NA> #> 4   TRUE    2         <NA> #> 5  FALSE    2         <NA> #> 6  FALSE    3         <NA> #> 7  FALSE    1         <NA> #> 8     NA   NA         <NA> #> 9  FALSE    2         <NA> #> 10 FALSE    3         <NA> #> 11    NA    1         <NA>    # read selected rows   wb_to_df(wb1, rows = c(1, 4, 6)) #>    Var1 Var2 NA Var3 Var4       Var5 Var6  Var7 #> 4  TRUE    2 NA 1.34    c 2015-02-05   NA #NUM! #> 6 FALSE    3 NA 1.56    e       <NA>   NA  <NA>    # convert characters to numerics and date (logical too?)   wb_to_df(wb1, convert = FALSE) #>     Var1 Var2   NA  Var3  Var4       Var5         Var6    Var7 #> 2   TRUE    1 <NA>     1     a 2015-02-07 3209324 This #DIV/0! #> 3   TRUE <NA> <NA> #NUM!     b 2015-02-06         <NA>    <NA> #> 4   TRUE    2 <NA>  1.34     c 2015-02-05         <NA>   #NUM! #> 5  FALSE    2 <NA>  <NA> #NUM!       <NA>         <NA>    <NA> #> 6  FALSE    3 <NA>  1.56     e       <NA>         <NA>    <NA> #> 7  FALSE    1 <NA>   1.7     f 2015-02-02         <NA>    <NA> #> 8   <NA> <NA> <NA>  <NA>  <NA> 2015-02-01         <NA>    <NA> #> 9  FALSE    2 <NA>    23     h 2015-01-31         <NA>    <NA> #> 10 FALSE    3 <NA>  67.3     i 2015-01-30         <NA>    <NA> #> 11  <NA>    1 <NA>   123  <NA> 2015-01-29         <NA>    <NA>    # erase empty rows from dataset   wb_to_df(wb1, sheet = 3, skipEmptyRows = TRUE) #>            Date        value      word  bool  wordZ2 #> 7    2014-04-28 8.390764e-01 N-U-B-R-A FALSE FALSE-Z #> 8    2014-04-27 8.863800e-01 N-Z-P-S-Y  TRUE  TRUE-Z #> 9    2014-04-26 5.741314e-01 C-G-D-X-H  TRUE  TRUE-Z #> 10   2014-04-25 1.366065e-01      <NA> FALSE FALSE-Z #> 11   2014-04-24 3.692582e-01 B-K-A-O-W  TRUE  TRUE-Z #> 12   2014-04-23           NA H-P-G-O-K  TRUE  TRUE-Z #> 13   2014-04-22 8.421690e-01 F-P-C-L-T  TRUE  TRUE-Z #> 14   2014-04-21 2.266172e-01 A-N-Q-P-V  TRUE  TRUE-Z #> 15   2014-04-20 2.758060e-01 Y-E-B-K-O  TRUE  TRUE-Z #> 16   2014-04-19 4.186958e-01 V-S-N-T-R  TRUE  TRUE-Z #> 17   2014-04-18 9.946673e-01 F-K-Z-U-S  TRUE  TRUE-Z #> 18   2014-04-17 5.888701e-03 O-E-Z-T-G FALSE FALSE-Z #> 19   2014-04-16 4.930320e-02 Q-X-F-L-N FALSE FALSE-Z #> 20   2014-04-15 1.609452e-02 E-D-Y-Z-N FALSE FALSE-Z #> 21   2014-04-14 6.417655e-01 W-F-L-C-I FALSE FALSE-Z #> 22   2014-04-13 3.057715e-01 P-S-W-Y-E  TRUE  TRUE-Z #> 23   2014-04-12 1.822141e-01 P-H-N-Q-Z  TRUE  TRUE-Z #> 24   2014-04-11 5.903062e-01 S-O-L-W-J  TRUE  TRUE-Z #> 25   2014-04-10 7.198819e-01 J-E-F-Q-K  TRUE  TRUE-Z #> 26   2014-04-09 1.838564e-01 D-N-O-P-Z  TRUE  TRUE-Z #> 27   2014-04-08 3.473104e-01 H-Z-K-S-U FALSE FALSE-Z #> 28   2014-04-07 1.854755e-01 B-P-A-Y-R  TRUE  TRUE-Z #> 29   2014-04-06 9.796787e-01 Z-I-X-J-V  TRUE  TRUE-Z #> 30   2014-04-05 4.524078e-01 Y-S-I-M-X  TRUE  TRUE-Z #> 31   2014-04-04 7.902792e-01 V-A-C-R-O  TRUE  TRUE-Z #> 32   2014-04-03 7.464112e-01 O-V-S-C-Q FALSE FALSE-Z #> 33   2014-04-02 2.114709e-01 A-K-S-V-W FALSE FALSE-Z #> 34   2014-04-01 6.515184e-01 B-G-U-S-J  TRUE  TRUE-Z #> 35   2014-03-31 6.889558e-01 Z-E-J-V-T  TRUE  TRUE-Z #> 36   2014-03-30 8.490406e-01 P-F-C-N-T  TRUE  TRUE-Z #> 37   2014-03-29 8.878655e-01 L-T-Z-D-V  TRUE  TRUE-Z #> 38   2014-03-28 4.498486e-01 K-Q-Y-N-O  TRUE  TRUE-Z #> 39   2014-03-27 9.371657e-01 U-S-Z-O-E  TRUE  TRUE-Z #> 40   2014-03-26 9.866358e-01 Y-F-Z-C-P FALSE FALSE-Z #> 41   2014-03-25 7.854484e-01 P-Y-M-I-K  TRUE  TRUE-Z #> 42   2014-03-24 1.637325e-01 D-Y-A-L-T  TRUE  TRUE-Z #> 43   2014-03-23 9.706021e-01 W-I-F-A-B  TRUE  TRUE-Z #> 44   2014-03-22 9.178372e-01 I-H-S-W-K  TRUE  TRUE-Z #> 45   2014-03-21 1.104164e-01 U-D-J-F-K  TRUE  TRUE-Z #> 46   2014-03-20 6.428919e-01 B-K-G-J-V  TRUE  TRUE-Z #> 47   2014-03-19 4.005582e-01 Y-J-E-N-B FALSE FALSE-Z #> 48   2014-03-18 6.831453e-01 X-L-V-S-U  TRUE  TRUE-Z #> 49   2014-03-17 5.306326e-01 A-I-B-S-P  TRUE  TRUE-Z #> 50   2014-03-16 6.031293e-01 U-L-D-O-M  TRUE  TRUE-Z #> 51   2014-03-15 6.377905e-01 M-D-V-R-X  TRUE  TRUE-Z #> 52   2014-03-14 5.280514e-01 O-Q-K-S-B  TRUE  TRUE-Z #> 53   2014-03-13 9.134199e-01 O-R-X-C-W  TRUE  TRUE-Z #> 54   2014-03-12 1.101755e-01 O-F-M-A-X  TRUE  TRUE-Z #> 55   2014-03-11 4.601697e-01 J-K-V-E-X  TRUE  TRUE-Z #> 56   2014-03-10 3.839219e-01 W-B-S-O-A  TRUE  TRUE-Z #> 57   2014-03-09 2.501948e-01 R-N-D-G-S  TRUE  TRUE-Z #> 58   2014-03-08 5.974750e-01 W-J-K-M-R  TRUE  TRUE-Z #> 59   2014-03-07 1.391651e-01 K-I-H-F-M  TRUE  TRUE-Z #> 60   2014-03-06 7.957779e-01 U-F-X-P-A  TRUE  TRUE-Z #> 61   2014-03-05 5.633654e-01 M-R-C-H-L  TRUE  TRUE-Z #> 62   2014-03-04 7.580872e-01 H-A-E-X-J  TRUE  TRUE-Z #> 63   2014-03-03 8.455597e-01 C-B-K-L-S FALSE FALSE-Z #> 64   2014-03-02 7.562546e-01 V-A-I-S-L  TRUE  TRUE-Z #> 65   2014-03-01 9.651074e-01 B-L-N-J-G  TRUE  TRUE-Z #> 66   2014-02-28 6.393263e-01 J-X-A-D-O FALSE FALSE-Z #> 67   2014-02-27 4.758651e-01 I-S-W-P-U  TRUE  TRUE-Z #> 68   2014-02-26 1.659300e-01 D-R-M-G-C  TRUE  TRUE-Z #> 69   2014-02-25 6.074828e-01 M-V-U-D-W FALSE FALSE-Z #> 70   2014-02-24 6.122346e-01 U-S-A-Z-B  TRUE  TRUE-Z #> 71   2014-02-23 6.706907e-02 T-E-N-F-P  TRUE  TRUE-Z #> 72   2014-02-22 8.870767e-01 K-E-S-Z-Y  TRUE  TRUE-Z #> 73   2014-02-21 4.750524e-01 D-J-O-T-A  TRUE  TRUE-Z #> 74   2014-02-20 5.329225e-01 F-U-Y-T-R FALSE FALSE-Z #> 75   2014-02-19 8.301574e-01 Q-U-N-P-J  TRUE  TRUE-Z #> 76   2014-02-18 7.863598e-01 D-C-V-A-X  TRUE  TRUE-Z #> 77   2014-02-17 3.180565e-01 S-B-F-E-V  TRUE  TRUE-Z #> 78   2014-02-16 1.947583e-01 U-R-P-H-A  TRUE  TRUE-Z #> 79   2014-02-15 6.193008e-02 R-C-Z-J-B  TRUE  TRUE-Z #> 80   2014-02-14 7.328257e-01 L-B-M-F-I  TRUE  TRUE-Z #> 81   2014-02-13 2.982134e-02 D-Y-B-S-Q  TRUE  TRUE-Z #> 82   2014-02-12 7.545283e-01 X-Y-D-W-P  TRUE  TRUE-Z #> 83   2014-02-11 4.802248e-01 Z-L-I-V-R  TRUE  TRUE-Z #> 84   2014-02-10 8.666444e-01 Z-W-T-M-B  TRUE  TRUE-Z #> 85   2014-02-09 9.996530e-01 Z-U-S-E-G  TRUE  TRUE-Z #> 86   2014-02-08 9.904704e-01 V-I-M-C-O  TRUE  TRUE-Z #> 87   2014-02-07 2.815049e-01 E-K-D-R-Z  TRUE  TRUE-Z #> 88   2014-02-06 7.097762e-01 Z-F-H-Y-D  TRUE  TRUE-Z #> 89   2014-02-05 5.661294e-01 O-I-X-M-A  TRUE  TRUE-Z #> 90   2014-02-04 6.645084e-01 F-K-U-G-T  TRUE  TRUE-Z #> 91   2014-02-03 4.170564e-01 I-P-X-J-M  TRUE  TRUE-Z #> 92   2014-02-02 2.600999e-03 F-N-Z-E-C  TRUE  TRUE-Z #> 93   2014-02-01 7.277102e-01 F-A-M-X-E  TRUE  TRUE-Z #> 94   2014-01-31 7.542126e-01 R-V-C-O-P FALSE FALSE-Z #> 95   2014-01-30 7.944726e-01 X-Y-C-V-H  TRUE  TRUE-Z #> 96   2014-01-29 3.727193e-01 K-G-T-Y-I  TRUE  TRUE-Z #> 97   2014-01-28 4.688476e-01 N-M-E-D-F  TRUE  TRUE-Z #> 98   2014-01-27 8.533012e-01 M-K-N-U-W  TRUE  TRUE-Z #> 99   2014-01-26 2.961446e-02 L-K-J-A-B  TRUE  TRUE-Z #> 100  2014-01-25 4.662046e-01 S-M-T-D-A  TRUE  TRUE-Z #> 101  2014-01-24 5.591244e-01 W-D-G-F-U  TRUE  TRUE-Z #> 102  2014-01-23 3.983516e-01 X-R-Z-F-E  TRUE  TRUE-Z #> 103  2014-01-22 1.014409e-01 H-L-N-G-P  TRUE  TRUE-Z #> 104  2014-01-21 9.322266e-01 Z-X-W-M-R  TRUE  TRUE-Z #> 105  2014-01-20 8.515330e-01 E-F-G-J-V  TRUE  TRUE-Z #> 106  2014-01-19 1.236502e-01 X-I-M-Z-V  TRUE  TRUE-Z #> 107  2014-01-18 2.939495e-01 T-A-O-L-Q  TRUE  TRUE-Z #> 108  2014-01-17 6.175461e-01 F-T-X-N-B  TRUE  TRUE-Z #> 109  2014-01-16 3.618024e-01 O-G-D-P-A  TRUE  TRUE-Z #> 110  2014-01-15 5.401617e-01 B-K-Z-V-M  TRUE  TRUE-Z #> 111  2014-01-14 4.407376e-01 M-J-O-S-X  TRUE  TRUE-Z #> 112  2014-01-13 7.431520e-01 O-D-M-S-G  TRUE  TRUE-Z #> 113  2014-01-12 1.494669e-01 W-O-V-A-D  TRUE  TRUE-Z #> 114  2014-01-11 2.888847e-01 I-D-W-T-H  TRUE  TRUE-Z #> 115  2014-01-10 1.073725e-02 E-C-I-A-L FALSE FALSE-Z #> 116  2014-01-09 9.978582e-01 P-I-W-U-T  TRUE  TRUE-Z #> 117  2014-01-08 7.380992e-01 Y-P-U-L-C  TRUE  TRUE-Z #> 118  2014-01-07 2.541907e-01 Q-N-A-B-E  TRUE  TRUE-Z #> 119  2014-01-06 1.665480e-01 C-F-X-Y-H  TRUE  TRUE-Z #> 120  2014-01-05 6.469734e-01 Q-P-G-I-J  TRUE  TRUE-Z #> 121  2014-01-04 4.445970e-01 A-Q-J-W-F  TRUE  TRUE-Z #> 122  2014-01-03 1.352096e-01 G-N-R-U-D  TRUE  TRUE-Z #> 123  2014-01-02 9.913103e-01 G-L-I-F-V  TRUE  TRUE-Z #> 124  2014-01-01 2.042443e-01 Y-R-P-K-X  TRUE  TRUE-Z #> 125  2013-12-31 6.298115e-01 V-W-B-G-S  TRUE  TRUE-Z #> 126  2013-12-30 9.769631e-01 E-Q-D-N-F  TRUE  TRUE-Z #> 127  2013-12-29 3.003384e-01 E-R-U-D-O  TRUE  TRUE-Z #> 128  2013-12-28 8.289192e-01 O-E-G-X-L  TRUE  TRUE-Z #> 129  2013-12-27 7.192899e-01 D-Q-G-A-K  TRUE  TRUE-Z #> 130  2013-12-26 1.884765e-01 U-Z-N-C-V  TRUE  TRUE-Z #> 131  2013-12-25 8.035942e-01 O-K-T-W-X  TRUE  TRUE-Z #> 132  2013-12-24 7.433573e-01 L-W-G-K-Q  TRUE  TRUE-Z #> 133  2013-12-23 3.886849e-01 I-F-O-X-Q  TRUE  TRUE-Z #> 134  2013-12-22 1.286230e-01 J-B-V-W-T  TRUE  TRUE-Z #> 135  2013-12-21 6.936693e-01 U-H-I-P-Q  TRUE  TRUE-Z #> 136  2013-12-20 9.552314e-01 R-W-M-S-U FALSE FALSE-Z #> 137  2013-12-19 4.430420e-01 F-U-M-W-H  TRUE  TRUE-Z #> 138  2013-12-18 1.473976e-01 F-A-Q-U-K  TRUE  TRUE-Z #> 139  2013-12-17 2.151499e-01 Q-R-D-K-I  TRUE  TRUE-Z #> 140  2013-12-16 3.241584e-01 L-P-K-V-S  TRUE  TRUE-Z #> 141  2013-12-15 7.367194e-01 G-I-B-U-Q  TRUE  TRUE-Z #> 142  2013-12-14 4.166659e-01 Z-W-L-G-E  TRUE  TRUE-Z #> 143  2013-12-13 2.327602e-01 Q-C-I-B-A  TRUE  TRUE-Z #> 144  2013-12-12 4.477682e-01 J-N-Y-W-D  TRUE  TRUE-Z #> 145  2013-12-11 9.605049e-01 T-Y-G-W-S  TRUE  TRUE-Z #> 146  2013-12-10 5.809964e-01 L-M-A-G-K  TRUE  TRUE-Z #> 147  2013-12-09 5.365384e-01 O-D-S-T-K  TRUE  TRUE-Z #> 148  2013-12-08 4.452929e-01 O-G-L-T-Z  TRUE  TRUE-Z #> 149  2013-12-07 2.225154e-01 N-Q-E-B-F  TRUE  TRUE-Z #> 150  2013-12-06 9.071881e-01 B-F-W-A-X  TRUE  TRUE-Z #> 151  2013-12-05 6.507593e-01 U-G-Q-B-M  TRUE  TRUE-Z #> 152  2013-12-04 1.043784e-01 B-O-V-U-A  TRUE  TRUE-Z #> 153  2013-12-03 1.391093e-01 R-K-X-H-A  TRUE  TRUE-Z #> 154  2013-12-02 6.478436e-02 B-P-Q-T-R  TRUE  TRUE-Z #> 155  2013-12-01 3.270613e-01 I-P-Z-L-V  TRUE  TRUE-Z #> 156  2013-11-30 1.543171e-02 C-T-L-W-D  TRUE  TRUE-Z #> 157  2013-11-29 6.833231e-01 L-Q-D-M-U FALSE FALSE-Z #> 158  2013-11-28 9.106724e-01 N-P-H-A-G  TRUE  TRUE-Z #> 159  2013-11-27 2.016891e-01 F-O-P-G-M  TRUE  TRUE-Z #> 160  2013-11-26 8.840823e-01 N-M-Z-W-L  TRUE  TRUE-Z #> 161  2013-11-25 1.320240e-01 G-V-K-Z-T  TRUE  TRUE-Z #> 162  2013-11-24 8.738914e-01 F-J-T-C-U  TRUE  TRUE-Z #> 163  2013-11-23 2.483605e-01 J-P-R-A-C  TRUE  TRUE-Z #> 164  2013-11-22 9.862062e-01 Z-X-V-C-W  TRUE  TRUE-Z #> 165  2013-11-21 3.579100e-01 B-Z-K-I-Q  TRUE  TRUE-Z #> 166  2013-11-20 6.624650e-01 E-N-L-I-Y  TRUE  TRUE-Z #> 167  2013-11-19 3.003576e-01 C-D-P-R-B  TRUE  TRUE-Z #> 168  2013-11-18 7.110071e-01 I-W-X-P-V  TRUE  TRUE-Z #> 169  2013-11-17 1.806795e-01 T-M-P-I-O  TRUE  TRUE-Z #> 170  2013-11-16 2.585687e-01 W-Y-D-J-K  TRUE  TRUE-Z #> 171  2013-11-15 4.207447e-01 A-O-C-L-B  TRUE  TRUE-Z #> 172  2013-11-14 3.169242e-01 S-R-O-Y-C  TRUE  TRUE-Z #> 173  2013-11-13 4.774113e-02 A-O-Y-N-W  TRUE  TRUE-Z #> 174  2013-11-12 4.938614e-01 P-C-O-D-Y  TRUE  TRUE-Z #> 175  2013-11-11 6.720034e-01 E-S-A-L-Y  TRUE  TRUE-Z #> 176  2013-11-10 3.151566e-01 E-O-Q-W-C FALSE FALSE-Z #> 177  2013-11-09 5.502495e-01 U-O-A-X-Q  TRUE  TRUE-Z #> 178  2013-11-08 3.097734e-01 W-E-N-Y-D  TRUE  TRUE-Z #> 179  2013-11-07 1.704961e-01 A-W-J-Z-X  TRUE  TRUE-Z #> 180  2013-11-06 2.015962e-01 P-L-R-U-K  TRUE  TRUE-Z #> 181  2013-11-05 1.802294e-01 V-J-E-K-Z  TRUE  TRUE-Z #> 182  2013-11-04 6.929971e-01 V-A-M-G-D  TRUE  TRUE-Z #> 183  2013-11-03 8.359383e-01 N-C-F-M-G  TRUE  TRUE-Z #> 184  2013-11-02 2.146292e-01 H-W-N-K-R  TRUE  TRUE-Z #> 185  2013-11-01 6.093972e-01 G-T-A-F-O  TRUE  TRUE-Z #> 186  2013-10-31 2.610223e-01 K-F-V-G-S  TRUE  TRUE-Z #> 187  2013-10-30 1.164659e-01 N-V-H-G-I  TRUE  TRUE-Z #> 188  2013-10-29 7.631249e-01 F-Y-T-S-G  TRUE  TRUE-Z #> 189  2013-10-28 9.241922e-01 A-H-O-C-V  TRUE  TRUE-Z #> 190  2013-10-27 8.416051e-01 Q-W-J-S-C  TRUE  TRUE-Z #> 191  2013-10-26 4.056776e-01 W-G-I-X-E  TRUE  TRUE-Z #> 192  2013-10-25 1.076855e-01 D-B-V-A-N  TRUE  TRUE-Z #> 193  2013-10-24 9.586559e-01 P-N-L-Y-Q  TRUE  TRUE-Z #> 194  2013-10-23 1.125987e-01 O-I-R-Q-U FALSE FALSE-Z #> 195  2013-10-22 1.787218e-01 D-R-W-E-O  TRUE  TRUE-Z #> 196  2013-10-21 1.666768e-01 W-X-U-V-P  TRUE  TRUE-Z #> 197  2013-10-20 2.635216e-01 X-Y-D-A-W  TRUE  TRUE-Z #> 198  2013-10-19 1.262761e-01 M-J-B-S-G  TRUE  TRUE-Z #> 199  2013-10-18 3.114730e-01 K-R-G-N-Y  TRUE  TRUE-Z #> 200  2013-10-17 2.926239e-01 O-B-K-L-M  TRUE  TRUE-Z #> 201  2013-10-16 6.032498e-01 G-N-Y-X-D  TRUE  TRUE-Z #> 202  2013-10-15 1.398006e-01 K-F-A-B-T  TRUE  TRUE-Z #> 203  2013-10-14 7.624849e-01 S-Z-R-L-A  TRUE  TRUE-Z #> 204  2013-10-13 4.636177e-01 K-Y-W-X-A  TRUE  TRUE-Z #> 205  2013-10-12 3.237987e-01 O-Q-X-I-D  TRUE  TRUE-Z #> 206  2013-10-11 2.240062e-01 I-L-R-M-X  TRUE  TRUE-Z #> 207  2013-10-10 3.249963e-01 S-D-V-U-N  TRUE  TRUE-Z #> 208  2013-10-09 5.350689e-01 B-W-F-A-T  TRUE  TRUE-Z #> 209  2013-10-08 4.046128e-01 A-W-X-R-J  TRUE  TRUE-Z #> 210  2013-10-07 4.096620e-01 D-H-G-X-L  TRUE  TRUE-Z #> 211  2013-10-06 8.032386e-01 E-C-V-U-T  TRUE  TRUE-Z #> 212  2013-10-05 1.048603e-01 D-W-P-Z-F  TRUE  TRUE-Z #> 213  2013-10-04 7.560703e-01 V-O-M-P-R  TRUE  TRUE-Z #> 214  2013-10-03 4.910320e-01 P-L-B-X-N  TRUE  TRUE-Z #> 215  2013-10-02 4.351230e-01 Z-U-F-D-V FALSE FALSE-Z #> 216  2013-10-01 8.293104e-01 M-K-Z-S-Y  TRUE  TRUE-Z #> 217  2013-09-30 9.064469e-01 X-P-N-T-D  TRUE  TRUE-Z #> 218  2013-09-29 6.923933e-01 U-Q-D-T-S  TRUE  TRUE-Z #> 219  2013-09-28 7.440026e-01 N-I-X-S-O  TRUE  TRUE-Z #> 220  2013-09-27 6.782748e-01 S-C-K-F-D  TRUE  TRUE-Z #> 221  2013-09-26 7.001851e-02 N-V-I-R-D  TRUE  TRUE-Z #> 222  2013-09-25 1.751707e-01 Z-X-Y-B-P  TRUE  TRUE-Z #> 223  2013-09-24 5.956157e-01 U-W-R-D-V  TRUE  TRUE-Z #> 224  2013-09-23 3.800334e-01 G-V-I-N-K  TRUE  TRUE-Z #> 225  2013-09-22 2.678604e-01 D-Y-N-T-J  TRUE  TRUE-Z #> 226  2013-09-21 2.175806e-01 P-K-F-U-W  TRUE  TRUE-Z #> 227  2013-09-20 2.840439e-02 U-I-P-D-Q  TRUE  TRUE-Z #> 228  2013-09-19 5.280619e-01 R-T-Q-N-Z  TRUE  TRUE-Z #> 229  2013-09-18 5.199341e-01 Z-R-D-V-O  TRUE  TRUE-Z #> 230  2013-09-17 1.457898e-01 Z-S-F-T-D  TRUE  TRUE-Z #> 231  2013-09-16 3.775263e-01 X-K-Z-B-W  TRUE  TRUE-Z #> 232  2013-09-15 5.013753e-02 U-F-Z-S-Y  TRUE  TRUE-Z #> 233  2013-09-14 1.417980e-01 X-I-T-Z-K  TRUE  TRUE-Z #> 234  2013-09-13 8.328823e-01 A-X-H-N-Z  TRUE  TRUE-Z #> 235  2013-09-12 6.896593e-01 R-U-Q-W-J  TRUE  TRUE-Z #> 236  2013-09-11 5.721815e-01 C-H-P-V-Y FALSE FALSE-Z #> 237  2013-09-10 6.764407e-01 R-O-A-T-E  TRUE  TRUE-Z #> 238  2013-09-09 1.500976e-01 L-F-B-X-A  TRUE  TRUE-Z #> 239  2013-09-08 5.506938e-02 Z-X-E-C-G  TRUE  TRUE-Z #> 240  2013-09-07 7.278550e-01 R-B-C-Q-W  TRUE  TRUE-Z #> 241  2013-09-06 9.526125e-01 A-O-Z-U-B  TRUE  TRUE-Z #> 242  2013-09-05 7.262125e-01 R-W-P-S-H  TRUE  TRUE-Z #> 243  2013-09-04 3.341343e-02 R-Y-B-A-W  TRUE  TRUE-Z #> 244  2013-09-03 4.543915e-01 K-X-U-I-M  TRUE  TRUE-Z #> 245  2013-09-02 6.090344e-01 O-X-F-P-A  TRUE  TRUE-Z #> 246  2013-09-01 5.110663e-01 U-Y-P-D-M  TRUE  TRUE-Z #> 247  2013-08-31 2.940946e-01 A-D-K-R-M  TRUE  TRUE-Z #> 248  2013-08-30 4.841691e-01 R-U-D-T-M  TRUE  TRUE-Z #> 249  2013-08-29 3.571011e-01 H-Q-Y-K-J  TRUE  TRUE-Z #> 250  2013-08-28 5.161900e-01 T-B-H-N-U  TRUE  TRUE-Z #> 251  2013-08-27 7.132380e-01 P-I-V-X-W  TRUE  TRUE-Z #> 252  2013-08-26 1.453541e-01 S-H-X-C-U  TRUE  TRUE-Z #> 253  2013-08-25 8.302638e-01 I-O-Y-G-W  TRUE  TRUE-Z #> 254  2013-08-24 6.094859e-01 A-U-Z-J-R  TRUE  TRUE-Z #> 255  2013-08-23 2.303861e-01 Q-U-H-M-A  TRUE  TRUE-Z #> 256  2013-08-22 8.092319e-01 B-W-M-I-C  TRUE  TRUE-Z #> 257  2013-08-21 8.265004e-01 P-X-Z-Y-N FALSE FALSE-Z #> 258  2013-08-20 2.238271e-01 Y-J-W-N-B  TRUE  TRUE-Z #> 259  2013-08-19 7.671408e-01 V-Y-U-S-B  TRUE  TRUE-Z #> 260  2013-08-18 2.656867e-01 K-W-S-Q-M  TRUE  TRUE-Z #> 261  2013-08-17 1.462490e-01 I-K-X-H-S  TRUE  TRUE-Z #> 262  2013-08-16 4.386821e-01 F-L-M-Q-T  TRUE  TRUE-Z #> 263  2013-08-15 1.898170e-02 S-Z-O-K-L  TRUE  TRUE-Z #> 264  2013-08-14 2.769696e-01 O-P-N-G-E  TRUE  TRUE-Z #> 265  2013-08-13 2.006933e-01 P-H-R-Q-T  TRUE  TRUE-Z #> 266  2013-08-12 4.124318e-01 M-L-A-D-T  TRUE  TRUE-Z #> 267  2013-08-11 2.771998e-01 D-S-X-V-H  TRUE  TRUE-Z #> 268  2013-08-10 2.894200e-01 F-C-O-A-B  TRUE  TRUE-Z #> 269  2013-08-09 7.563260e-01 P-I-N-O-H  TRUE  TRUE-Z #> 270  2013-08-08 4.066559e-01 H-X-Y-I-C  TRUE  TRUE-Z #> 271  2013-08-07 6.309178e-02 S-I-R-P-Q  TRUE  TRUE-Z #> 272  2013-08-06 9.101010e-01 P-M-F-H-Y  TRUE  TRUE-Z #> 273  2013-08-05 4.708938e-01 S-R-O-T-Q  TRUE  TRUE-Z #> 274  2013-08-04 3.138368e-01 X-H-O-B-R  TRUE  TRUE-Z #> 275  2013-08-03 2.940156e-01 W-P-A-Q-V  TRUE  TRUE-Z #> 276  2013-08-02 4.205088e-01 E-L-Q-G-Y  TRUE  TRUE-Z #> 277  2013-08-01 2.370593e-01 I-S-T-W-C  TRUE  TRUE-Z #> 278  2013-07-31 5.511415e-01 B-M-R-G-Y FALSE FALSE-Z #> 279  2013-07-30 6.394788e-01 S-J-A-K-Q  TRUE  TRUE-Z #> 280  2013-07-29 8.849915e-01 E-P-B-G-J  TRUE  TRUE-Z #> 281  2013-07-28 9.970799e-02 R-Y-E-L-D  TRUE  TRUE-Z #> 282  2013-07-27 5.156794e-01 A-R-C-N-S  TRUE  TRUE-Z #> 283  2013-07-26 1.044848e-01 Y-H-B-M-I  TRUE  TRUE-Z #> 284  2013-07-25 1.467757e-01 T-Q-C-K-N  TRUE  TRUE-Z #> 285  2013-07-24 8.403512e-01 L-T-Z-V-C  TRUE  TRUE-Z #> 286  2013-07-23 7.938804e-01 Q-L-N-J-K  TRUE  TRUE-Z #> 287  2013-07-22 5.308965e-01 T-E-J-M-Y  TRUE  TRUE-Z #> 288  2013-07-21 4.123413e-01 E-M-F-R-C  TRUE  TRUE-Z #> 289  2013-07-20 9.181988e-01 M-A-Y-D-I  TRUE  TRUE-Z #> 290  2013-07-19 6.370414e-01 G-M-Y-F-Q  TRUE  TRUE-Z #> 291  2013-07-18 8.524787e-01 A-X-B-E-N  TRUE  TRUE-Z #> 292  2013-07-17 9.623132e-01 F-Y-E-H-L  TRUE  TRUE-Z #> 293  2013-07-16 8.046037e-01 S-Z-R-M-O  TRUE  TRUE-Z #> 294  2013-07-15 3.506518e-01 U-V-W-S-I  TRUE  TRUE-Z #> 295  2013-07-14 6.361183e-01 D-S-E-L-K  TRUE  TRUE-Z #> 296  2013-07-13 4.810985e-01 B-C-X-V-F  TRUE  TRUE-Z #> 297  2013-07-12 6.981530e-01 Q-V-L-F-H  TRUE  TRUE-Z #> 298  2013-07-11 7.071610e-01 H-Z-I-J-P  TRUE  TRUE-Z #> 299  2013-07-10 2.618893e-01 W-U-O-M-D  TRUE  TRUE-Z #> 300  2013-07-09 2.000171e-01 A-Y-T-O-X  TRUE  TRUE-Z #> 301  2013-07-08 9.224882e-01 Y-C-Z-V-D  TRUE  TRUE-Z #> 302  2013-07-07 5.899087e-01 E-L-O-X-Y FALSE FALSE-Z #> 303  2013-07-06 5.024922e-01 D-U-K-X-A  TRUE  TRUE-Z #> 304  2013-07-05 8.431734e-01 S-W-K-N-E  TRUE  TRUE-Z #> 305  2013-07-04 8.454302e-01 D-F-T-E-Y  TRUE  TRUE-Z #> 306  2013-07-03 4.489723e-01 J-T-B-C-L  TRUE  TRUE-Z #> 307  2013-07-02 6.289985e-01 E-T-Z-V-F  TRUE  TRUE-Z #> 308  2013-07-01 5.278467e-01 Q-D-U-P-E  TRUE  TRUE-Z #> 309  2013-06-30 2.807479e-01 M-Q-X-T-J  TRUE  TRUE-Z #> 310  2013-06-29 7.709890e-01 A-M-I-K-P  TRUE  TRUE-Z #> 311  2013-06-28 3.461238e-01 J-T-B-E-R  TRUE  TRUE-Z #> 312  2013-06-27 6.608487e-02 L-X-J-O-F  TRUE  TRUE-Z #> 313  2013-06-26 1.796650e-01 X-B-V-W-P  TRUE  TRUE-Z #> 314  2013-06-25 7.518018e-01 Y-N-H-G-Z  TRUE  TRUE-Z #> 315  2013-06-24 1.121137e-01 M-F-K-S-P  TRUE  TRUE-Z #> 316  2013-06-23 8.669481e-01 K-B-V-Z-L  TRUE  TRUE-Z #> 317  2013-06-22 7.975384e-01 T-L-Y-G-A  TRUE  TRUE-Z #> 318  2013-06-21 3.620417e-02 N-U-X-C-D  TRUE  TRUE-Z #> 319  2013-06-20 6.989088e-01 W-B-O-X-Z  TRUE  TRUE-Z #> 320  2013-06-19 5.541278e-01 U-Y-J-F-A  TRUE  TRUE-Z #> 321  2013-06-18 1.686177e-02 T-V-J-I-S  TRUE  TRUE-Z #> 322  2013-06-17 1.302121e-01 T-L-W-X-Z  TRUE  TRUE-Z #> 323  2013-06-16 4.167969e-01 V-K-X-C-N FALSE FALSE-Z #> 324  2013-06-15 5.358923e-01 G-C-I-S-Z  TRUE  TRUE-Z #> 325  2013-06-14 1.438554e-01 C-T-K-S-Z  TRUE  TRUE-Z #> 326  2013-06-13 8.308509e-02 F-I-D-N-E  TRUE  TRUE-Z #> 327  2013-06-12 4.526376e-01 E-C-M-Y-J  TRUE  TRUE-Z #> 328  2013-06-11 2.908923e-01 N-C-Y-S-I  TRUE  TRUE-Z #> 329  2013-06-10 2.406834e-01 B-N-I-L-D  TRUE  TRUE-Z #> 330  2013-06-09 3.994954e-02 Y-F-T-M-V  TRUE  TRUE-Z #> 331  2013-06-08 6.844729e-01 R-A-E-O-M  TRUE  TRUE-Z #> 332  2013-06-07 7.808552e-01 M-G-P-W-X  TRUE  TRUE-Z #> 333  2013-06-06 3.121375e-01 H-B-C-D-R  TRUE  TRUE-Z #> 334  2013-06-05 4.397020e-01 A-J-N-C-H  TRUE  TRUE-Z #> 335  2013-06-04 8.206256e-01 R-O-F-D-N  TRUE  TRUE-Z #> 336  2013-06-03 9.735546e-01 H-E-R-T-K  TRUE  TRUE-Z #> 337  2013-06-02 6.733851e-02 M-U-S-V-A  TRUE  TRUE-Z #> 338  2013-06-01 9.969514e-01 L-V-F-A-H  TRUE  TRUE-Z #> 339  2013-05-31 8.020895e-01 E-Q-N-Y-C  TRUE  TRUE-Z #> 340  2013-05-30 8.937871e-01 T-N-L-X-S  TRUE  TRUE-Z #> 341  2013-05-29 2.224200e-01 C-F-X-A-N  TRUE  TRUE-Z #> 342  2013-05-28 7.255034e-01 M-X-Y-C-Z  TRUE  TRUE-Z #> 343  2013-05-27 5.071947e-02 A-N-F-B-K  TRUE  TRUE-Z #> 344  2013-05-26 5.131081e-01 J-Q-R-Z-D  TRUE  TRUE-Z #> 345  2013-05-25 7.785234e-01 Q-P-Y-G-N  TRUE  TRUE-Z #> 346  2013-05-24 9.909332e-01 D-Y-O-R-J  TRUE  TRUE-Z #> 347  2013-05-23 7.120945e-01 K-R-Y-N-O FALSE FALSE-Z #> 348  2013-05-22 3.081211e-01 A-H-K-J-B  TRUE  TRUE-Z #> 349  2013-05-21 1.923949e-01 O-G-J-A-S  TRUE  TRUE-Z #> 350  2013-05-20 2.013344e-01 T-N-K-X-S  TRUE  TRUE-Z #> 351  2013-05-19 9.013764e-02 V-P-X-Y-F  TRUE  TRUE-Z #> 352  2013-05-18 2.999483e-01 R-P-V-G-T  TRUE  TRUE-Z #> 353  2013-05-17 7.926220e-01 O-B-F-E-D  TRUE  TRUE-Z #> 354  2013-05-16 1.997192e-02 Z-P-I-T-F  TRUE  TRUE-Z #> 355  2013-05-15 6.289250e-01 T-S-D-X-G  TRUE  TRUE-Z #> 356  2013-05-14 7.191125e-01 Y-J-P-Z-U  TRUE  TRUE-Z #> 357  2013-05-13 8.767138e-02 H-W-Y-K-J  TRUE  TRUE-Z #> 358  2013-05-12 4.280298e-01 H-Z-C-F-Q  TRUE  TRUE-Z #> 359  2013-05-11 4.670744e-01 D-I-B-N-X  TRUE  TRUE-Z #> 360  2013-05-10 4.682063e-01 K-B-U-H-E  TRUE  TRUE-Z #> 361  2013-05-09 8.100659e-01 H-Y-U-Q-A  TRUE  TRUE-Z #> 362  2013-05-08 7.218488e-01 N-Q-G-T-I FALSE FALSE-Z #> 363  2013-05-07 6.112317e-01 J-B-V-E-G FALSE FALSE-Z #> 364  2013-05-06 9.776841e-02 M-F-O-E-H FALSE FALSE-Z #> 365  2013-05-05 3.217087e-01 B-P-K-M-I FALSE FALSE-Z #> 366  2013-05-04 5.274709e-01 T-Z-B-Q-Y FALSE FALSE-Z #> 367  2013-05-03 4.454252e-01 X-Y-T-P-O FALSE FALSE-Z #> 368  2013-05-02 6.408906e-01 E-K-I-W-C FALSE FALSE-Z #> 369  2013-05-01 8.356702e-02 C-M-R-S-Y FALSE FALSE-Z #> 370  2013-04-30 2.162456e-01 F-Y-M-W-L FALSE FALSE-Z #> 371  2013-04-29 1.481394e-01 A-S-E-U-J FALSE FALSE-Z #> 372  2013-04-28 5.628703e-01 I-P-W-N-G  TRUE  TRUE-Z #> 373  2013-04-27 8.690325e-01 V-G-R-E-T  TRUE  TRUE-Z #> 374  2013-04-26 7.200129e-01 H-O-W-G-Y  TRUE  TRUE-Z #> 375  2013-04-25 3.855071e-02 O-H-B-C-P  TRUE  TRUE-Z #> 376  2013-04-24 6.065397e-01 C-Y-D-Q-X  TRUE  TRUE-Z #> 377  2013-04-23 2.461762e-01 X-Y-I-Z-U  TRUE  TRUE-Z #> 378  2013-04-22 2.954371e-01 R-I-Q-Y-P  TRUE  TRUE-Z #> 379  2013-04-21 9.455793e-02 E-M-L-D-Y  TRUE  TRUE-Z #> 380  2013-04-20 8.054102e-01 B-G-P-Y-T  TRUE  TRUE-Z #> 381  2013-04-19 2.563454e-01 Z-H-X-D-V  TRUE  TRUE-Z #> 382  2013-04-18 9.892731e-01 S-B-R-J-F  TRUE  TRUE-Z #> 383  2013-04-17 2.852564e-01 O-T-X-P-W  TRUE  TRUE-Z #> 384  2013-04-16 6.560066e-01 Y-C-T-M-E  TRUE  TRUE-Z #> 385  2013-04-15 1.087884e-02 J-A-D-O-P  TRUE  TRUE-Z #> 386  2013-04-14 1.656885e-01 B-W-Q-D-I  TRUE  TRUE-Z #> 387  2013-04-13 9.322303e-01 Y-T-X-K-Q  TRUE  TRUE-Z #> 388  2013-04-12 7.221795e-01 F-D-P-X-J  TRUE  TRUE-Z #> 389  2013-04-11 8.847854e-01 Z-G-Y-O-N  TRUE  TRUE-Z #> 390  2013-04-10 1.799917e-01 J-N-Z-Q-P  TRUE  TRUE-Z #> 391  2013-04-09 4.827527e-01 W-C-E-I-U  TRUE  TRUE-Z #> 392  2013-04-08 9.136715e-02 L-R-K-F-H  TRUE  TRUE-Z #> 393  2013-04-07 1.402776e-01 X-I-G-B-O  TRUE  TRUE-Z #> 394  2013-04-06 6.473617e-01 M-C-Q-Y-Z  TRUE  TRUE-Z #> 395  2013-04-05 3.262586e-01 S-T-W-J-E  TRUE  TRUE-Z #> 396  2013-04-04 3.053001e-01 G-O-N-Y-Q  TRUE  TRUE-Z #> 397  2013-04-03 8.681362e-01 O-Q-R-Z-B  TRUE  TRUE-Z #> 398  2013-04-02 9.619942e-01 X-G-E-C-I  TRUE  TRUE-Z #> 399  2013-04-01 3.236691e-01 P-B-D-F-Q  TRUE  TRUE-Z #> 400  2013-03-31 1.199828e-01 Q-H-D-I-V  TRUE  TRUE-Z #> 401  2013-03-30 5.165690e-01 H-I-J-D-Q  TRUE  TRUE-Z #> 402  2013-03-29 5.317363e-01 C-B-S-I-G  TRUE  TRUE-Z #> 403  2013-03-28 4.448271e-01 M-A-F-D-B  TRUE  TRUE-Z #> 404  2013-03-27 9.223514e-01 G-Z-R-U-K  TRUE  TRUE-Z #> 405  2013-03-26 3.151108e-01 N-U-L-Q-R  TRUE  TRUE-Z #> 406  2013-03-25 9.698686e-01 C-A-K-M-T  TRUE  TRUE-Z #> 407  2013-03-24 9.403027e-01 F-S-R-B-K  TRUE  TRUE-Z #> 408  2013-03-23 9.062943e-01 O-D-X-S-W  TRUE  TRUE-Z #> 409  2013-03-22 7.986533e-01 H-J-N-P-C  TRUE  TRUE-Z #> 410  2013-03-21 2.625185e-01 N-G-Y-L-J  TRUE  TRUE-Z #> 411  2013-03-20 3.214562e-01 D-X-K-O-E  TRUE  TRUE-Z #> 412  2013-03-19 6.286771e-01 F-E-H-D-L  TRUE  TRUE-Z #> 413  2013-03-18 3.652456e-02 E-M-D-P-Z  TRUE  TRUE-Z #> 414  2013-03-17 1.181331e-01 Q-K-I-J-V FALSE FALSE-Z #> 415  2013-03-16 2.867508e-01 D-O-N-M-X FALSE FALSE-Z #> 416  2013-03-15 4.649334e-01 C-P-N-E-K FALSE FALSE-Z #> 417  2013-03-14 2.569895e-02 L-H-T-U-P FALSE FALSE-Z #> 418  2013-03-13 2.014355e-01 M-T-Z-P-H FALSE FALSE-Z #> 419  2013-03-12 6.412533e-01 B-T-L-Z-G FALSE FALSE-Z #> 420  2013-03-11 1.795431e-01 Z-V-R-C-I FALSE FALSE-Z #> 421  2013-03-10 9.669685e-01 J-M-R-D-G FALSE FALSE-Z #> 422  2013-03-09 3.760621e-01 I-V-L-Q-T FALSE FALSE-Z #> 423  2013-03-08 8.269406e-01 O-V-X-A-M FALSE FALSE-Z #> 424  2013-03-07 1.162854e-01 V-L-N-A-T FALSE FALSE-Z #> 425  2013-03-06 8.860740e-01 M-B-R-U-O FALSE FALSE-Z #> 426  2013-03-05 6.761222e-01 O-B-Q-F-X FALSE FALSE-Z #> 427  2013-03-04 3.793392e-01 H-O-E-K-G FALSE FALSE-Z #> 428  2013-03-03 8.093922e-01 S-H-G-B-D FALSE FALSE-Z #> 429  2013-03-02 5.450891e-01 N-Z-C-L-D FALSE FALSE-Z #> 430  2013-03-01 4.552354e-01 M-F-J-H-K FALSE FALSE-Z #> 431  2013-02-28 4.502201e-01 A-O-D-W-B FALSE FALSE-Z #> 432  2013-02-27 4.015229e-01 I-X-G-K-W FALSE FALSE-Z #> 433  2013-02-26 8.992261e-01 B-S-O-K-Q FALSE FALSE-Z #> 434  2013-02-25 8.853806e-01 X-T-Z-I-D FALSE FALSE-Z #> 435  2013-02-24 4.772708e-01 N-D-G-B-L FALSE FALSE-Z #> 436  2013-02-23 3.403184e-01 Z-O-U-I-X FALSE FALSE-Z #> 437  2013-02-22 2.958262e-02 W-B-A-R-H FALSE FALSE-Z #> 438  2013-02-21 2.897204e-01 S-G-Q-J-F FALSE FALSE-Z #> 439  2013-02-20 5.178426e-01 M-B-J-F-A FALSE FALSE-Z #> 440  2013-02-19 6.827849e-03 M-B-X-A-P FALSE FALSE-Z #> 441  2013-02-18 3.982929e-02 F-M-S-Y-V  TRUE  TRUE-Z #> 442  2013-02-17 7.243733e-02 T-K-B-G-C  TRUE  TRUE-Z #> 443  2013-02-16 7.076550e-01 H-V-C-G-X  TRUE  TRUE-Z #> 444  2013-02-15 2.491240e-01 V-A-S-I-T  TRUE  TRUE-Z #> 445  2013-02-14 7.262884e-01 Z-X-G-U-S  TRUE  TRUE-Z #> 446  2013-02-13 8.143545e-01 U-J-Y-M-H  TRUE  TRUE-Z #> 447  2013-02-12 6.763752e-01 D-Y-H-X-S  TRUE  TRUE-Z #> 448  2013-02-11 8.825519e-01 T-Q-X-I-E  TRUE  TRUE-Z #> 449  2013-02-10 4.759888e-02 S-V-K-M-T  TRUE  TRUE-Z #> 450  2013-02-09 8.378848e-01 S-Z-P-O-Y  TRUE  TRUE-Z #> 451  2013-02-08 4.660025e-01 V-Y-Q-L-F  TRUE  TRUE-Z #> 452  2013-02-07 2.539268e-01 A-E-R-V-G  TRUE  TRUE-Z #> 453  2013-02-06 2.396374e-01 E-C-M-G-O  TRUE  TRUE-Z #> 454  2013-02-05 3.925079e-01 T-B-U-M-V  TRUE  TRUE-Z #> 455  2013-02-04 3.178160e-01 M-R-V-A-E  TRUE  TRUE-Z #> 456  2013-02-03 2.655656e-01 C-A-R-W-N  TRUE  TRUE-Z #> 457  2013-02-02 7.173850e-01 Y-U-D-Z-X  TRUE  TRUE-Z #> 458  2013-02-01 7.405607e-01 Y-G-Z-C-Q  TRUE  TRUE-Z #> 459  2013-01-31 3.327007e-01 T-X-R-A-D  TRUE  TRUE-Z #> 460  2013-01-30 7.896979e-01 S-A-U-R-K  TRUE  TRUE-Z #> 461  2013-01-29 4.215529e-01 E-A-D-R-V  TRUE  TRUE-Z #> 462  2013-01-28 8.196618e-01 P-R-T-W-F  TRUE  TRUE-Z #> 463  2013-01-27 4.266387e-01 A-Z-Y-O-N  TRUE  TRUE-Z #> 464  2013-01-26 9.591491e-01 O-P-W-A-I  TRUE  TRUE-Z #> 465  2013-01-25 5.526072e-01 H-V-U-R-F  TRUE  TRUE-Z #> 466  2013-01-24 9.954496e-01 W-D-G-P-I  TRUE  TRUE-Z #> 467  2013-01-23 7.988865e-01 M-Z-Q-C-I  TRUE  TRUE-Z #> 468  2013-01-22 5.225765e-01 Y-S-H-W-I  TRUE  TRUE-Z #> 469  2013-01-21 8.115730e-01 F-J-C-N-S  TRUE  TRUE-Z #> 470  2013-01-20 7.478831e-01 H-C-Z-Y-K  TRUE  TRUE-Z #> 471  2013-01-19 8.893160e-01 W-J-K-Z-I  TRUE  TRUE-Z #> 472  2013-01-18 8.906421e-01 Q-T-G-C-X  TRUE  TRUE-Z #> 473  2013-01-17 5.459336e-01 S-Q-T-O-Y  TRUE  TRUE-Z #> 474  2013-01-16 9.911141e-01 Z-G-T-W-X  TRUE  TRUE-Z #> 475  2013-01-15 9.217261e-02 X-M-J-R-W  TRUE  TRUE-Z #> 476  2013-01-14 6.066116e-01 S-Y-N-F-H  TRUE  TRUE-Z #> 477  2013-01-13 5.704477e-01 C-F-V-G-A  TRUE  TRUE-Z #> 478  2013-01-12 7.035560e-01 W-R-J-I-B  TRUE  TRUE-Z #> 479  2013-01-11 6.261638e-01 I-V-B-A-M  TRUE  TRUE-Z #> 480  2013-01-10 8.161211e-01 R-C-D-L-U  TRUE  TRUE-Z #> 481  2013-01-09 6.357236e-01 S-T-B-A-N  TRUE  TRUE-Z #> 482  2013-01-08 5.116822e-01 F-W-J-M-A  TRUE  TRUE-Z #> 483  2013-01-07 1.353359e-01 J-I-R-E-H  TRUE  TRUE-Z #> 484  2013-01-06 6.346170e-01 Q-D-O-E-R  TRUE  TRUE-Z #> 485  2013-01-05 1.065817e-01 R-B-M-O-J  TRUE  TRUE-Z #> 486  2013-01-04 2.437729e-02 B-X-G-V-U  TRUE  TRUE-Z #> 487  2013-01-03 9.921653e-01 R-J-L-Y-M FALSE FALSE-Z #> 488  2013-01-02 3.332890e-01 R-F-A-X-J FALSE FALSE-Z #> 489  2013-01-01 8.693216e-01 N-I-J-V-Q FALSE FALSE-Z #> 490  2012-12-31 7.796334e-01 J-O-D-Q-Z FALSE FALSE-Z #> 491  2012-12-30 4.334015e-01 K-I-F-D-H  TRUE  TRUE-Z #> 492  2012-12-29 1.121316e-01 N-H-Q-Z-M  TRUE  TRUE-Z #> 493  2012-12-28 9.745093e-01 I-K-R-Z-X  TRUE  TRUE-Z #> 494  2012-12-27 9.912915e-01 O-D-U-T-I  TRUE  TRUE-Z #> 495  2012-12-26 2.976009e-01 K-G-S-L-Y  TRUE  TRUE-Z #> 496  2012-12-25 8.194680e-01 X-D-O-K-A  TRUE  TRUE-Z #> 497  2012-12-24 9.632934e-01 C-X-I-P-J  TRUE  TRUE-Z #> 498  2012-12-23 8.057873e-02 X-A-Y-V-T  TRUE  TRUE-Z #> 499  2012-12-22 9.111997e-01 I-V-T-J-O  TRUE  TRUE-Z #> 500  2012-12-21 7.913911e-01 X-D-M-H-U  TRUE  TRUE-Z #> 501  2012-12-20 1.212490e-01 M-L-R-Y-J  TRUE  TRUE-Z #> 502  2012-12-19 1.837844e-01 N-L-I-R-B  TRUE  TRUE-Z #> 503  2012-12-18 2.783216e-01 A-J-Z-O-Q  TRUE  TRUE-Z #> 504  2012-12-17 4.777276e-01 G-Y-I-S-E  TRUE  TRUE-Z #> 505  2012-12-16 1.562980e-01 N-F-X-Z-T  TRUE  TRUE-Z #> 506  2012-12-15 7.682495e-01 U-G-C-F-K  TRUE  TRUE-Z #> 507  2012-12-14 4.224766e-01 R-N-W-S-M  TRUE  TRUE-Z #> 508  2012-12-13 4.181287e-01 A-O-T-N-U  TRUE  TRUE-Z #> 509  2012-12-12 7.380166e-01 W-O-P-G-V  TRUE  TRUE-Z #> 510  2012-12-11 9.152957e-01 D-W-E-H-O  TRUE  TRUE-Z #> 511  2012-12-10 9.543615e-01 B-D-S-E-Z  TRUE  TRUE-Z #> 512  2012-12-09 4.526933e-01 C-L-V-M-I  TRUE  TRUE-Z #> 513  2012-12-08 2.341784e-01 Y-N-C-W-B  TRUE  TRUE-Z #> 514  2012-12-07 3.714304e-02 C-Q-L-P-W  TRUE  TRUE-Z #> 515  2012-12-06 8.769970e-01 X-H-L-B-M  TRUE  TRUE-Z #> 516  2012-12-05 3.850286e-01 H-V-D-K-Q  TRUE  TRUE-Z #> 517  2012-12-04 4.321368e-01 O-S-C-U-H  TRUE  TRUE-Z #> 518  2012-12-03 2.663421e-01 V-I-J-K-A  TRUE  TRUE-Z #> 519  2012-12-02 5.432072e-01 D-M-B-I-F  TRUE  TRUE-Z #> 520  2012-12-01 2.894188e-01 O-H-N-J-V FALSE FALSE-Z #> 521  2012-11-30 4.982812e-01 R-L-Q-J-Y FALSE FALSE-Z #> 522  2012-11-29 7.753381e-01 Q-P-B-S-X  TRUE  TRUE-Z #> 523  2012-11-28 7.510898e-01 J-K-V-H-F  TRUE  TRUE-Z #> 524  2012-11-27 8.596019e-01 A-T-L-Q-B  TRUE  TRUE-Z #> 525  2012-11-26 6.281185e-01 E-D-S-B-G  TRUE  TRUE-Z #> 526  2012-11-25 7.165150e-01 K-T-X-J-Q  TRUE  TRUE-Z #> 527  2012-11-24 3.979567e-01 W-L-U-B-H  TRUE  TRUE-Z #> 528  2012-11-23 4.519276e-02 T-Y-Z-G-V  TRUE  TRUE-Z #> 529  2012-11-22 4.307985e-01 G-S-C-X-P FALSE FALSE-Z #> 530  2012-11-21 1.589425e-01 D-C-M-Z-Y FALSE FALSE-Z #> 531  2012-11-20 1.219434e-02 V-G-F-D-E FALSE FALSE-Z #> 532  2012-11-19 9.600316e-01 Q-F-X-O-U  TRUE  TRUE-Z #> 533  2012-11-18 3.656627e-01 E-V-L-F-G  TRUE  TRUE-Z #> 534  2012-11-17 6.218534e-01 M-T-V-U-Y  TRUE  TRUE-Z #> 535  2012-11-16 6.865448e-01 Z-X-S-U-E  TRUE  TRUE-Z #> 536  2012-11-15 5.599752e-01 J-I-F-E-R  TRUE  TRUE-Z #> 537  2012-11-14 7.637829e-01 C-V-J-R-W  TRUE  TRUE-Z #> 538  2012-11-13 1.515439e-01 W-R-V-U-K  TRUE  TRUE-Z #> 539  2012-11-12 6.040111e-01 M-A-S-U-Q  TRUE  TRUE-Z #> 540  2012-11-11 1.092051e-01 J-K-O-F-I  TRUE  TRUE-Z #> 541  2012-11-10 4.778899e-02 I-Y-G-U-Z  TRUE  TRUE-Z #> 542  2012-11-09 8.124220e-01 B-Y-V-D-R  TRUE  TRUE-Z #> 543  2012-11-08 9.917012e-01 M-G-Q-N-J  TRUE  TRUE-Z #> 544  2012-11-07 3.462585e-02 A-F-N-K-M  TRUE  TRUE-Z #> 545  2012-11-06 2.420059e-01 R-B-D-Q-P  TRUE  TRUE-Z #> 546  2012-11-05 2.065078e-01 H-T-N-U-L  TRUE  TRUE-Z #> 547  2012-11-04 9.563402e-01 J-W-E-A-B  TRUE  TRUE-Z #> 548  2012-11-03 3.998011e-01 N-M-K-R-O  TRUE  TRUE-Z #> 549  2012-11-02 2.043884e-01 H-Q-A-N-E  TRUE  TRUE-Z #> 550  2012-11-01 8.008777e-01 U-B-Y-L-Q  TRUE  TRUE-Z #> 551  2012-10-31 5.929132e-01 J-E-N-T-Q  TRUE  TRUE-Z #> 552  2012-10-30 9.344804e-01 D-N-L-R-E  TRUE  TRUE-Z #> 553  2012-10-29 9.826588e-01 K-S-O-L-Z  TRUE  TRUE-Z #> 554  2012-10-28 8.319188e-01 Z-D-Y-A-N  TRUE  TRUE-Z #> 555  2012-10-27 6.781640e-01 D-Q-B-X-Z  TRUE  TRUE-Z #> 556  2012-10-26 5.883664e-01 J-E-F-O-Q  TRUE  TRUE-Z #> 557  2012-10-25 8.083223e-01 U-E-Q-T-R  TRUE  TRUE-Z #> 558  2012-10-24 3.682480e-01 U-H-F-N-L  TRUE  TRUE-Z #> 559  2012-10-23 7.935928e-01 C-T-I-V-X  TRUE  TRUE-Z #> 560  2012-10-22 4.976333e-02 V-L-Q-O-K  TRUE  TRUE-Z #> 561  2012-10-21 3.452818e-01 G-Q-D-P-V  TRUE  TRUE-Z #> 562  2012-10-20 2.143999e-01 D-T-V-G-S  TRUE  TRUE-Z #> 563  2012-10-19 3.262606e-01 I-G-H-Z-L  TRUE  TRUE-Z #> 564  2012-10-18 7.353328e-01 A-E-I-Y-B  TRUE  TRUE-Z #> 565  2012-10-17 6.421797e-01 S-V-N-B-R  TRUE  TRUE-Z #> 566  2012-10-16 2.734670e-01 M-P-J-Y-N  TRUE  TRUE-Z #> 567  2012-10-15 9.090327e-01 D-T-W-Q-Z  TRUE  TRUE-Z #> 568  2012-10-14 5.574429e-01 U-V-F-A-S  TRUE  TRUE-Z #> 569  2012-10-13 1.292878e-01 M-B-T-Y-Q  TRUE  TRUE-Z #> 570  2012-10-12 4.477141e-01 F-I-C-D-X  TRUE  TRUE-Z #> 571  2012-10-11 5.617493e-02 G-X-O-K-J  TRUE  TRUE-Z #> 572  2012-10-10 7.455755e-01 J-M-I-E-D  TRUE  TRUE-Z #> 573  2012-10-09 8.320332e-01 C-B-S-F-A  TRUE  TRUE-Z #> 574  2012-10-08 3.102269e-01 A-Y-O-Z-P  TRUE  TRUE-Z #> 575  2012-10-07 9.790659e-01 R-T-H-L-S  TRUE  TRUE-Z #> 576  2012-10-06 5.897677e-01 P-X-B-S-O  TRUE  TRUE-Z #> 577  2012-10-05 7.368925e-02 B-I-C-P-T  TRUE  TRUE-Z #> 578  2012-10-04 8.206541e-02 F-K-H-Z-N  TRUE  TRUE-Z #> 579  2012-10-03 6.454077e-02 R-D-Y-T-P  TRUE  TRUE-Z #> 580  2012-10-02 2.291423e-01 S-U-P-G-R  TRUE  TRUE-Z #> 581  2012-10-01 7.644402e-01 M-K-R-Q-V  TRUE  TRUE-Z #> 582  2012-09-30 8.124943e-01 Z-E-O-U-T  TRUE  TRUE-Z #> 583  2012-09-29 1.574722e-01 M-W-Y-X-C  TRUE  TRUE-Z #> 584  2012-09-28 1.061426e-01 Q-J-U-T-B  TRUE  TRUE-Z #> 585  2012-09-27 3.850349e-01 L-H-S-J-U  TRUE  TRUE-Z #> 586  2012-09-26 6.936692e-01 P-M-X-R-N  TRUE  TRUE-Z #> 587  2012-09-25 9.430001e-01 S-Y-T-G-W  TRUE  TRUE-Z #> 588  2012-09-24 3.433409e-01 W-P-N-V-O  TRUE  TRUE-Z #> 589  2012-09-23 5.072906e-01 E-U-I-L-M  TRUE  TRUE-Z #> 590  2012-09-22 3.375191e-02 V-S-K-J-R  TRUE  TRUE-Z #> 591  2012-09-21 1.131303e-01 P-E-T-C-X  TRUE  TRUE-Z #> 592  2012-09-20 7.595741e-02 E-V-C-S-Y  TRUE  TRUE-Z #> 593  2012-09-19 4.599678e-01 M-S-F-T-Q  TRUE  TRUE-Z #> 594  2012-09-18 3.914017e-01 L-D-P-K-T  TRUE  TRUE-Z #> 595  2012-09-17 4.014122e-01 D-Z-U-Q-P  TRUE  TRUE-Z #> 596  2012-09-16 9.399400e-01 D-H-L-W-N  TRUE  TRUE-Z #> 597  2012-09-15 1.051163e-02 V-U-Q-I-A  TRUE  TRUE-Z #> 598  2012-09-14 1.809558e-01 L-D-G-H-V  TRUE  TRUE-Z #> 599  2012-09-13 2.852413e-03 G-I-U-Q-E  TRUE  TRUE-Z #> 600  2012-09-12 7.210386e-01 G-E-D-R-H  TRUE  TRUE-Z #> 601  2012-09-11 8.167835e-01 N-T-L-K-H  TRUE  TRUE-Z #> 602  2012-09-10 2.314676e-02 J-U-K-F-V  TRUE  TRUE-Z #> 603  2012-09-09 6.613440e-01 G-J-Y-K-W  TRUE  TRUE-Z #> 604  2012-09-08 1.435112e-01 E-A-I-G-Q  TRUE  TRUE-Z #> 605  2012-09-07 3.347665e-01 S-U-H-R-T  TRUE  TRUE-Z #> 606  2012-09-06 6.863181e-01 L-S-W-H-C  TRUE  TRUE-Z #> 607  2012-09-05 4.937076e-01 P-V-I-Y-O  TRUE  TRUE-Z #> 608  2012-09-04 5.584956e-01 E-L-K-X-N  TRUE  TRUE-Z #> 609  2012-09-03 9.097050e-01 Y-B-S-T-N  TRUE  TRUE-Z #> 610  2012-09-02 6.350090e-01 N-U-V-E-Z  TRUE  TRUE-Z #> 611  2012-09-01 8.780759e-01 B-V-K-M-O  TRUE  TRUE-Z #> 612  2012-08-31 1.321571e-02 L-V-H-A-K  TRUE  TRUE-Z #> 613  2012-08-30 9.487765e-01 M-U-T-J-K  TRUE  TRUE-Z #> 614  2012-08-29 4.231001e-01 V-J-T-F-R  TRUE  TRUE-Z #> 615  2012-08-28 9.720429e-01 T-Y-E-U-W  TRUE  TRUE-Z #> 616  2012-08-27 8.067268e-01 C-D-B-A-L  TRUE  TRUE-Z #> 617  2012-08-26 8.788691e-01 K-E-U-S-A  TRUE  TRUE-Z #> 618  2012-08-25 5.798872e-02 D-H-R-X-Z  TRUE  TRUE-Z #> 619  2012-08-24 1.707717e-01 M-B-Z-G-C  TRUE  TRUE-Z #> 620  2012-08-23 7.835481e-02 P-E-T-S-Y  TRUE  TRUE-Z #> 621  2012-08-22 7.417758e-01 M-G-O-J-F  TRUE  TRUE-Z #> 622  2012-08-21 2.574061e-01 C-Y-E-P-X  TRUE  TRUE-Z #> 623  2012-08-20 9.720754e-01 R-V-D-C-N  TRUE  TRUE-Z #> 624  2012-08-19 6.655504e-01 S-Y-A-K-Z  TRUE  TRUE-Z #> 625  2012-08-18 7.806123e-02 K-S-G-T-D  TRUE  TRUE-Z #> 626  2012-08-17 6.817334e-01 D-F-G-U-K  TRUE  TRUE-Z #> 627  2012-08-16 7.405287e-01 F-B-P-T-M  TRUE  TRUE-Z #> 628  2012-08-15 1.221288e-01 P-G-O-D-W  TRUE  TRUE-Z #> 629  2012-08-14 2.322579e-01 U-L-I-R-J  TRUE  TRUE-Z #> 630  2012-08-13 5.725554e-01 F-Q-N-X-J  TRUE  TRUE-Z #> 631  2012-08-12 6.221911e-01 D-Q-F-V-B  TRUE  TRUE-Z #> 632  2012-08-11 3.528150e-01 R-P-E-Z-H  TRUE  TRUE-Z #> 633  2012-08-10 6.854113e-01 A-H-X-M-L  TRUE  TRUE-Z #> 634  2012-08-09 8.554500e-01 I-H-F-G-W  TRUE  TRUE-Z #> 635  2012-08-08 6.083556e-01 V-C-M-H-Y  TRUE  TRUE-Z #> 636  2012-08-07 2.378161e-01 V-H-L-Y-F  TRUE  TRUE-Z #> 637  2012-08-06 9.575247e-01 H-I-L-P-V  TRUE  TRUE-Z #> 638  2012-08-05 1.039594e-01 L-Q-W-K-A  TRUE  TRUE-Z #> 639  2012-08-04 7.801519e-01 D-W-J-R-L  TRUE  TRUE-Z #> 640  2012-08-03 5.461994e-01 W-E-V-J-L  TRUE  TRUE-Z #> 641  2012-08-02 7.005907e-01 F-Z-X-U-H  TRUE  TRUE-Z #> 642  2012-08-01 5.719224e-01 K-U-Q-I-R  TRUE  TRUE-Z #> 643  2012-07-31 3.483934e-01 S-D-N-E-V  TRUE  TRUE-Z #> 644  2012-07-30 9.244171e-01 G-T-E-L-Y  TRUE  TRUE-Z #> 645  2012-07-29 6.273048e-01 S-P-E-B-D  TRUE  TRUE-Z #> 646  2012-07-28 3.755645e-01 U-N-L-S-O  TRUE  TRUE-Z #> 647  2012-07-27 5.639085e-01 Z-G-W-I-X  TRUE  TRUE-Z #> 648  2012-07-26 9.500585e-01 M-C-X-S-E  TRUE  TRUE-Z #> 649  2012-07-25 3.124908e-01 P-C-S-X-Y  TRUE  TRUE-Z #> 650  2012-07-24 1.393400e-01 B-Z-K-R-H  TRUE  TRUE-Z #> 651  2012-07-23 3.687430e-01 D-J-W-Y-U  TRUE  TRUE-Z #> 652  2012-07-22 9.482995e-01 J-O-Q-F-P  TRUE  TRUE-Z #> 653  2012-07-21 6.235206e-01 I-A-V-G-Y  TRUE  TRUE-Z #> 654  2012-07-20 4.564948e-01 U-B-V-G-N  TRUE  TRUE-Z #> 655  2012-07-19 3.834379e-01 W-H-Q-M-E  TRUE  TRUE-Z #> 656  2012-07-18 9.481094e-01 J-R-O-D-F  TRUE  TRUE-Z #> 657  2012-07-17 7.817439e-01 W-M-C-O-P  TRUE  TRUE-Z #> 658  2012-07-16 1.302433e-01 R-I-F-M-Q  TRUE  TRUE-Z #> 659  2012-07-15 3.775199e-01 Q-L-D-W-X  TRUE  TRUE-Z #> 660  2012-07-14 9.169292e-01 M-A-Q-P-F  TRUE  TRUE-Z #> 661  2012-07-13 1.105166e-02 O-J-T-L-A  TRUE  TRUE-Z #> 662  2012-07-12 7.147161e-01 X-S-I-P-G  TRUE  TRUE-Z #> 663  2012-07-11 5.498017e-01 G-W-D-Y-F  TRUE  TRUE-Z #> 664  2012-07-10 4.583360e-01 T-B-M-N-J  TRUE  TRUE-Z #> 665  2012-07-09 2.136991e-01 Q-W-N-Z-C  TRUE  TRUE-Z #> 666  2012-07-08 6.160697e-01 M-F-C-O-H  TRUE  TRUE-Z #> 667  2012-07-07 7.753244e-01 Z-N-Q-X-P  TRUE  TRUE-Z #> 668  2012-07-06 4.223180e-01 Q-G-A-Y-C  TRUE  TRUE-Z #> 669  2012-07-05 3.290649e-01 R-F-G-P-E  TRUE  TRUE-Z #> 670  2012-07-04 6.862918e-01 X-J-F-R-C  TRUE  TRUE-Z #> 671  2012-07-03 9.918427e-01 J-S-Q-E-L  TRUE  TRUE-Z #> 672  2012-07-02 7.971302e-02 O-K-P-F-D  TRUE  TRUE-Z #> 673  2012-07-01 2.563777e-01 R-J-W-G-T  TRUE  TRUE-Z #> 674  2012-06-30 1.078343e-01 Y-P-J-N-D  TRUE  TRUE-Z #> 675  2012-06-29 8.237543e-01 N-S-F-Y-T  TRUE  TRUE-Z #> 676  2012-06-28 1.248143e-01 M-L-N-H-U  TRUE  TRUE-Z #> 677  2012-06-27 2.161991e-01 V-A-H-G-Q  TRUE  TRUE-Z #> 678  2012-06-26 9.335398e-01 H-L-W-K-P  TRUE  TRUE-Z #> 679  2012-06-25 6.376895e-03 U-P-G-V-O  TRUE  TRUE-Z #> 680  2012-06-24 2.555471e-01 V-N-P-I-Y  TRUE  TRUE-Z #> 681  2012-06-23 1.491608e-01 A-O-E-F-L  TRUE  TRUE-Z #> 682  2012-06-22 3.984610e-01 W-F-Q-J-G  TRUE  TRUE-Z #> 683  2012-06-21 5.227193e-01 B-A-L-V-Q  TRUE  TRUE-Z #> 684  2012-06-20 1.838573e-01 Y-J-F-V-S  TRUE  TRUE-Z #> 685  2012-06-19 6.679278e-02 O-F-E-J-A  TRUE  TRUE-Z #> 686  2012-06-18 4.890784e-01 X-O-F-M-B  TRUE  TRUE-Z #> 687  2012-06-17 7.786673e-01 B-M-L-H-W  TRUE  TRUE-Z #> 688  2012-06-16 6.695565e-01 Z-X-F-T-B  TRUE  TRUE-Z #> 689  2012-06-15 7.686014e-01 W-X-E-M-A  TRUE  TRUE-Z #> 690  2012-06-14 3.884502e-01 F-J-V-W-L  TRUE  TRUE-Z #> 691  2012-06-13 1.465828e-01 P-C-U-R-O  TRUE  TRUE-Z #> 692  2012-06-12 5.951610e-01 S-K-F-D-V  TRUE  TRUE-Z #> 693  2012-06-11 8.123718e-01 K-F-Z-Q-C  TRUE  TRUE-Z #> 694  2012-06-10 3.584486e-01 J-S-R-M-Q  TRUE  TRUE-Z #> 695  2012-06-09 5.054012e-01 E-H-L-Q-N  TRUE  TRUE-Z #> 696  2012-06-08 2.981414e-03 W-F-M-E-X  TRUE  TRUE-Z #> 697  2012-06-07 7.378407e-01 P-R-E-N-A  TRUE  TRUE-Z #> 698  2012-06-06 3.662202e-01 D-F-G-N-Y  TRUE  TRUE-Z #> 699  2012-06-05 8.727311e-01 I-S-O-V-T  TRUE  TRUE-Z #> 700  2012-06-04 8.598656e-01 R-I-C-N-L  TRUE  TRUE-Z #> 701  2012-06-03 5.499429e-01 I-T-C-Y-P  TRUE  TRUE-Z #> 702  2012-06-02 7.739776e-01 R-W-I-K-X  TRUE  TRUE-Z #> 703  2012-06-01 3.922823e-01 P-B-J-X-G  TRUE  TRUE-Z #> 704  2012-05-31 3.905795e-01 D-W-F-N-E  TRUE  TRUE-Z #> 705  2012-05-30 5.584909e-01 M-G-C-B-K  TRUE  TRUE-Z #> 706  2012-05-29 1.504314e-02 E-T-H-F-W  TRUE  TRUE-Z #> 707  2012-05-28 8.361845e-01 A-E-L-F-Z  TRUE  TRUE-Z #> 708  2012-05-27 4.241783e-02 Z-V-W-S-R  TRUE  TRUE-Z #> 709  2012-05-26 5.424997e-02 O-T-L-D-Q  TRUE  TRUE-Z #> 710  2012-05-25 6.779389e-01 S-E-M-Z-O  TRUE  TRUE-Z #> 711  2012-05-24 4.332743e-01 N-R-Y-A-U  TRUE  TRUE-Z #> 712  2012-05-23 5.713538e-01 Y-D-M-A-R  TRUE  TRUE-Z #> 713  2012-05-22 2.157338e-01 S-M-P-N-K  TRUE  TRUE-Z #> 714  2012-05-21 9.100763e-01 C-T-B-L-Z  TRUE  TRUE-Z #> 715  2012-05-20 2.517384e-01 X-A-L-I-V  TRUE  TRUE-Z #> 716  2012-05-19 7.163702e-01 B-V-M-G-S  TRUE  TRUE-Z #> 717  2012-05-18 3.904956e-01 N-R-K-Q-D  TRUE  TRUE-Z #> 718  2012-05-17 4.699671e-01 F-O-L-X-Y  TRUE  TRUE-Z #> 719  2012-05-16 6.959446e-01 Y-T-F-A-S  TRUE  TRUE-Z #> 720  2012-05-15 1.224816e-01 X-G-O-U-A  TRUE  TRUE-Z #> 721  2012-05-14 7.353423e-01 Z-F-I-B-T  TRUE  TRUE-Z #> 722  2012-05-13 3.572136e-01 V-H-B-N-W  TRUE  TRUE-Z #> 723  2012-05-12 6.473945e-01 V-K-B-W-S  TRUE  TRUE-Z #> 724  2012-05-11 7.971341e-01 V-C-T-L-G  TRUE  TRUE-Z #> 725  2012-05-10 7.796126e-01 X-N-L-Y-Q  TRUE  TRUE-Z #> 726  2012-05-09 2.609428e-01 N-D-L-I-Z  TRUE  TRUE-Z #> 727  2012-05-08 8.217891e-01 L-K-G-N-E  TRUE  TRUE-Z #> 728  2012-05-07 8.053648e-01 D-L-M-K-Z  TRUE  TRUE-Z #> 729  2012-05-06 2.872077e-01 E-I-P-Z-U  TRUE  TRUE-Z #> 730  2012-05-05 8.263160e-01 H-X-B-C-D  TRUE  TRUE-Z #> 731  2012-05-04 7.927179e-02 B-H-D-C-V  TRUE  TRUE-Z #> 732  2012-05-03 9.326904e-01 F-O-L-D-R  TRUE  TRUE-Z #> 733  2012-05-02 2.061998e-01 B-Z-J-Y-V  TRUE  TRUE-Z #> 734  2012-05-01 5.037057e-01 E-C-R-B-S  TRUE  TRUE-Z #> 735  2012-04-30 8.750662e-01 E-X-V-B-S  TRUE  TRUE-Z #> 736  2012-04-29 5.624227e-01 P-K-I-W-G  TRUE  TRUE-Z #> 737  2012-04-28 5.465367e-02 A-I-F-V-O  TRUE  TRUE-Z #> 738  2012-04-27 6.879782e-01 D-F-R-I-E  TRUE  TRUE-Z #> 739  2012-04-26 9.387610e-01 X-L-I-N-O  TRUE  TRUE-Z #> 740  2012-04-25 5.274325e-01 P-Y-Q-C-S  TRUE  TRUE-Z #> 741  2012-04-24 4.362092e-01 C-P-A-X-L  TRUE  TRUE-Z #> 742  2012-04-23 7.216035e-01 W-O-U-A-X  TRUE  TRUE-Z #> 743  2012-04-22 4.531286e-01 H-M-R-E-B  TRUE  TRUE-Z #> 744  2012-04-21 4.973640e-02 K-Y-P-G-A  TRUE  TRUE-Z #> 745  2012-04-20 9.705679e-01 O-E-V-D-C  TRUE  TRUE-Z #> 746  2012-04-19 4.182095e-01 Z-A-K-M-W  TRUE  TRUE-Z #> 747  2012-04-18 1.962055e-01 S-F-M-Z-E  TRUE  TRUE-Z #> 748  2012-04-17 5.051739e-01 X-U-I-C-J  TRUE  TRUE-Z #> 749  2012-04-16 9.554837e-01 C-V-T-B-N  TRUE  TRUE-Z #> 750  2012-04-15 2.277604e-01 Z-Q-Y-V-G  TRUE  TRUE-Z #> 751  2012-04-14 7.262628e-01 T-W-G-Q-D  TRUE  TRUE-Z #> 752  2012-04-13 4.902181e-01 K-Y-L-R-F  TRUE  TRUE-Z #> 753  2012-04-12 4.756828e-01 W-O-S-E-A  TRUE  TRUE-Z #> 754  2012-04-11 4.711389e-01 V-T-Q-F-G  TRUE  TRUE-Z #> 755  2012-04-10 2.866367e-01 G-V-J-M-U  TRUE  TRUE-Z #> 756  2012-04-09 7.244026e-01 P-R-A-N-C  TRUE  TRUE-Z #> 757  2012-04-08 8.099825e-01 I-R-A-F-T  TRUE  TRUE-Z #> 758  2012-04-07 6.996757e-01 X-Z-U-W-N  TRUE  TRUE-Z #> 759  2012-04-06 2.770726e-01 A-G-R-D-Y  TRUE  TRUE-Z #> 760  2012-04-05 7.920979e-01 J-U-T-A-Q  TRUE  TRUE-Z #> 761  2012-04-04 8.163988e-01 K-Y-T-H-U  TRUE  TRUE-Z #> 762  2012-04-03 4.932142e-01 P-Q-L-Z-G  TRUE  TRUE-Z #> 763  2012-04-02 9.282860e-01 N-K-Y-X-W  TRUE  TRUE-Z #> 764  2012-04-01 6.238666e-01 A-T-M-R-Z  TRUE  TRUE-Z #> 765  2012-03-31 6.039468e-01 M-B-P-C-L  TRUE  TRUE-Z #> 766  2012-03-30 3.122302e-01 M-Q-K-N-R  TRUE  TRUE-Z #> 767  2012-03-29 1.324855e-01 I-W-H-G-R  TRUE  TRUE-Z #> 768  2012-03-28 3.410259e-01 I-F-D-Q-A  TRUE  TRUE-Z #> 769  2012-03-27 3.616327e-01 V-G-F-C-X  TRUE  TRUE-Z #> 770  2012-03-26 5.209299e-01 H-Q-F-D-T  TRUE  TRUE-Z #> 771  2012-03-25 8.078016e-01 N-R-T-Q-G  TRUE  TRUE-Z #> 772  2012-03-24 8.323521e-01 X-V-P-B-G  TRUE  TRUE-Z #> 773  2012-03-23 1.644577e-01 V-H-B-N-X  TRUE  TRUE-Z #> 774  2012-03-22 6.751059e-01 G-Q-T-J-Y  TRUE  TRUE-Z #> 775  2012-03-21 6.702366e-01 P-F-A-N-H  TRUE  TRUE-Z #> 776  2012-03-20 3.718784e-01 C-D-I-W-K  TRUE  TRUE-Z #> 777  2012-03-19 1.802666e-01 T-R-J-B-P  TRUE  TRUE-Z #> 778  2012-03-18 1.507887e-01 E-P-X-L-S  TRUE  TRUE-Z #> 779  2012-03-17 6.753566e-01 O-K-B-L-M  TRUE  TRUE-Z #> 780  2012-03-16 2.794416e-01 Z-T-B-R-V  TRUE  TRUE-Z #> 781  2012-03-15 1.211404e-01 V-N-Y-Z-U  TRUE  TRUE-Z #> 782  2012-03-14 2.545448e-02 E-W-V-F-O  TRUE  TRUE-Z #> 783  2012-03-13 1.601294e-01 D-S-A-Z-J  TRUE  TRUE-Z #> 784  2012-03-12 6.135564e-01 R-O-W-A-Y  TRUE  TRUE-Z #> 785  2012-03-11 9.324093e-01 V-L-K-J-Q  TRUE  TRUE-Z #> 786  2012-03-10 3.003324e-01 Q-T-J-S-Z  TRUE  TRUE-Z #> 787  2012-03-09 3.062842e-01 M-G-L-Y-D  TRUE  TRUE-Z #> 788  2012-03-08 7.007533e-01 G-U-W-I-C  TRUE  TRUE-Z #> 789  2012-03-07 8.309969e-01 G-O-D-T-I  TRUE  TRUE-Z #> 790  2012-03-06 1.115814e-01 R-L-Z-P-V  TRUE  TRUE-Z #> 791  2012-03-05 4.010196e-01 W-G-M-T-I  TRUE  TRUE-Z #> 792  2012-03-04 2.721819e-01 S-F-H-Z-J  TRUE  TRUE-Z #> 793  2012-03-03 6.221074e-01 Z-L-O-V-N  TRUE  TRUE-Z #> 794  2012-03-02 6.601304e-01 G-D-A-U-H  TRUE  TRUE-Z #> 795  2012-03-01 2.341751e-01 Y-K-V-R-E  TRUE  TRUE-Z #> 796  2012-02-29 9.431206e-01 Y-O-L-R-I  TRUE  TRUE-Z #> 797  2012-02-28 2.994028e-01 X-V-Z-I-B  TRUE  TRUE-Z #> 798  2012-02-27 8.557806e-01 N-Z-S-D-O  TRUE  TRUE-Z #> 799  2012-02-26 1.594996e-01 N-X-Z-J-M  TRUE  TRUE-Z #> 800  2012-02-25 1.688677e-01 S-X-A-H-C  TRUE  TRUE-Z #> 801  2012-02-24 7.626417e-01 V-T-R-F-H  TRUE  TRUE-Z #> 802  2012-02-23 5.709485e-01 K-E-Q-B-J  TRUE  TRUE-Z #> 803  2012-02-22 5.441331e-01 V-R-J-U-G  TRUE  TRUE-Z #> 804  2012-02-21 5.668262e-01 Q-K-B-P-Z  TRUE  TRUE-Z #> 805  2012-02-20 8.693262e-01 Y-I-S-X-K  TRUE  TRUE-Z #> 806  2012-02-19 1.332421e-01 U-O-R-Q-J  TRUE  TRUE-Z #> 807  2012-02-18 9.811470e-01 Q-T-X-F-D  TRUE  TRUE-Z #> 808  2012-02-17 9.299383e-03 P-O-F-B-J  TRUE  TRUE-Z #> 809  2012-02-16 7.730635e-01 C-M-K-L-F  TRUE  TRUE-Z #> 810  2012-02-15 7.837689e-01 N-W-Y-A-V  TRUE  TRUE-Z #> 811  2012-02-14 4.409969e-01 E-H-I-G-U  TRUE  TRUE-Z #> 812  2012-02-13 1.475482e-01 L-J-X-A-C  TRUE  TRUE-Z #> 813  2012-02-12 8.167312e-01 Q-K-U-D-B  TRUE  TRUE-Z #> 814  2012-02-11 9.741239e-01 A-S-R-D-T  TRUE  TRUE-Z #> 815  2012-02-10 1.121547e-01 S-Z-E-Y-U  TRUE  TRUE-Z #> 816  2012-02-09 3.999528e-01 A-K-R-S-G  TRUE  TRUE-Z #> 817  2012-02-08 2.691925e-01 S-F-R-J-Q  TRUE  TRUE-Z #> 818  2012-02-07 2.699184e-01 A-Y-J-F-U  TRUE  TRUE-Z #> 819  2012-02-06 5.459330e-01 L-I-J-R-H  TRUE  TRUE-Z #> 820  2012-02-05 5.191556e-01 K-C-V-Q-F  TRUE  TRUE-Z #> 821  2012-02-04 6.683296e-01 H-U-A-T-D  TRUE  TRUE-Z #> 822  2012-02-03 5.018999e-01 E-W-L-I-C  TRUE  TRUE-Z #> 823  2012-02-02 1.001934e-01 Y-P-R-F-V  TRUE  TRUE-Z #> 824  2012-02-01 7.079459e-01 L-M-P-Z-U  TRUE  TRUE-Z #> 825  2012-01-31 5.993959e-02 T-Q-U-P-V  TRUE  TRUE-Z #> 826  2012-01-30 3.364885e-01 Q-W-T-M-K  TRUE  TRUE-Z #> 827  2012-01-29 4.701759e-01 P-D-G-Y-K  TRUE  TRUE-Z #> 828  2012-01-28 5.687637e-01 F-I-K-C-P  TRUE  TRUE-Z #> 829  2012-01-27 3.322440e-01 I-T-Y-K-L  TRUE  TRUE-Z #> 830  2012-01-26 8.086048e-01 H-T-K-I-R  TRUE  TRUE-Z #> 831  2012-01-25 2.535225e-01 H-K-B-M-F  TRUE  TRUE-Z #> 832  2012-01-24 4.405856e-02 J-P-D-Z-Q  TRUE  TRUE-Z #> 833  2012-01-23 9.917536e-01 D-M-K-C-V  TRUE  TRUE-Z #> 834  2012-01-22 1.475440e-01 E-K-Y-F-R  TRUE  TRUE-Z #> 835  2012-01-21 1.228797e-01 P-L-H-A-J  TRUE  TRUE-Z #> 836  2012-01-20 2.508804e-01 R-C-Z-V-T  TRUE  TRUE-Z #> 837  2012-01-19 8.136619e-02 I-W-G-A-T  TRUE  TRUE-Z #> 838  2012-01-18 9.442672e-01 Y-N-X-K-R  TRUE  TRUE-Z #> 839  2012-01-17 5.191810e-01 M-N-E-C-Q  TRUE  TRUE-Z #> 840  2012-01-16 8.609157e-01 J-B-W-R-X  TRUE  TRUE-Z #> 841  2012-01-15 8.912301e-01 R-M-D-T-F  TRUE  TRUE-Z #> 842  2012-01-14 8.733118e-01 R-V-L-Y-G  TRUE  TRUE-Z #> 843  2012-01-13 8.164634e-01 M-V-E-Z-Q  TRUE  TRUE-Z #> 844  2012-01-12 7.051160e-01 S-H-Q-X-G  TRUE  TRUE-Z #> 845  2012-01-11 9.033044e-01 H-P-Y-Q-G  TRUE  TRUE-Z #> 846  2012-01-10 5.353208e-01 F-N-K-T-W  TRUE  TRUE-Z #> 847  2012-01-09 4.454415e-01 I-B-Z-P-F  TRUE  TRUE-Z #> 848  2012-01-08 5.499866e-01 G-P-N-S-F  TRUE  TRUE-Z #> 849  2012-01-07 3.614653e-01 B-Y-S-N-A  TRUE  TRUE-Z #> 850  2012-01-06 2.589636e-01 P-I-Z-A-S  TRUE  TRUE-Z #> 851  2012-01-05 7.005323e-01 X-I-K-B-Y  TRUE  TRUE-Z #> 852  2012-01-04 6.520938e-01 B-Q-F-W-M  TRUE  TRUE-Z #> 853  2012-01-03 4.356564e-01 Y-E-J-P-M  TRUE  TRUE-Z #> 854  2012-01-02 9.579057e-01 V-E-T-G-O  TRUE  TRUE-Z #> 855  2012-01-01 4.893997e-01 M-N-L-K-I  TRUE  TRUE-Z #> 856  2011-12-31 6.375607e-02 N-D-W-B-V  TRUE  TRUE-Z #> 857  2011-12-30 6.005659e-02 F-P-S-M-X  TRUE  TRUE-Z #> 858  2011-12-29 3.347416e-01 K-H-Q-M-F  TRUE  TRUE-Z #> 859  2011-12-28 3.271060e-01 Z-B-O-I-L  TRUE  TRUE-Z #> 860  2011-12-27 1.626602e-01 L-F-D-S-E  TRUE  TRUE-Z #> 861  2011-12-26 7.878040e-01 W-Y-P-B-A  TRUE  TRUE-Z #> 862  2011-12-25 4.441043e-01 L-P-S-V-U  TRUE  TRUE-Z #> 863  2011-12-24 4.533461e-01 D-G-L-J-P  TRUE  TRUE-Z #> 864  2011-12-23 4.458490e-01 K-U-F-Y-E  TRUE  TRUE-Z #> 865  2011-12-22 8.784981e-01 J-G-R-M-N  TRUE  TRUE-Z #> 866  2011-12-21 1.448227e-01 J-U-P-H-O  TRUE  TRUE-Z #> 867  2011-12-20 7.058497e-01 O-U-N-M-W  TRUE  TRUE-Z #> 868  2011-12-19 3.922370e-01 X-V-J-K-E  TRUE  TRUE-Z #> 869  2011-12-18 6.252029e-01 C-W-G-L-K  TRUE  TRUE-Z #> 870  2011-12-17 7.027978e-01 D-H-A-O-K  TRUE  TRUE-Z #> 871  2011-12-16 9.299647e-01 H-G-C-X-P  TRUE  TRUE-Z #> 872  2011-12-15 9.227843e-01 B-C-I-J-D  TRUE  TRUE-Z #> 873  2011-12-14 4.763459e-01 N-L-T-D-S  TRUE  TRUE-Z #> 874  2011-12-13 5.361273e-01 X-D-C-A-T  TRUE  TRUE-Z #> 875  2011-12-12 7.401473e-01 Z-D-U-N-E  TRUE  TRUE-Z #> 876  2011-12-11 6.602447e-01 P-W-A-I-L  TRUE  TRUE-Z #> 877  2011-12-10 9.944414e-02 N-U-G-H-C  TRUE  TRUE-Z #> 878  2011-12-09 6.943323e-01 F-Q-E-V-T  TRUE  TRUE-Z #> 879  2011-12-08 1.866135e-01 X-O-M-S-U  TRUE  TRUE-Z #> 880  2011-12-07 2.748065e-01 Z-V-S-Q-R  TRUE  TRUE-Z #> 881  2011-12-06 4.581097e-01 K-Z-U-D-L  TRUE  TRUE-Z #> 882  2011-12-05 5.307047e-01 A-O-Z-C-T  TRUE  TRUE-Z #> 883  2011-12-04 6.700306e-01 S-K-U-T-Q  TRUE  TRUE-Z #> 884  2011-12-03 2.377836e-01 V-Q-I-B-Z  TRUE  TRUE-Z #> 885  2011-12-02 9.632542e-01 A-K-Z-N-Y  TRUE  TRUE-Z #> 886  2011-12-01 9.441112e-01 T-G-V-Y-O  TRUE  TRUE-Z #> 887  2011-11-30 4.247698e-01 G-K-R-A-J  TRUE  TRUE-Z #> 888  2011-11-29 3.008132e-01 Y-J-F-T-U  TRUE  TRUE-Z #> 889  2011-11-28 6.661062e-01 E-P-K-G-F  TRUE  TRUE-Z #> 890  2011-11-27 7.235207e-01 U-P-X-L-V  TRUE  TRUE-Z #> 891  2011-11-26 3.347939e-01 H-C-S-M-I  TRUE  TRUE-Z #> 892  2011-11-25 8.705232e-01 K-D-X-W-N  TRUE  TRUE-Z #> 893  2011-11-24 6.033735e-01 F-E-P-V-R  TRUE  TRUE-Z #> 894  2011-11-23 4.337945e-01 C-P-V-W-L  TRUE  TRUE-Z #> 895  2011-11-22 9.516445e-01 I-S-M-E-B  TRUE  TRUE-Z #> 896  2011-11-21 8.600901e-01 D-E-L-C-O  TRUE  TRUE-Z #> 897  2011-11-20 5.160538e-01 A-D-V-U-W  TRUE  TRUE-Z #> 898  2011-11-19 8.771795e-01 D-I-N-M-Z  TRUE  TRUE-Z #> 899  2011-11-18 5.340547e-01 O-Z-K-S-N  TRUE  TRUE-Z #> 900  2011-11-17 9.308389e-01 F-J-W-L-S  TRUE  TRUE-Z #> 901  2011-11-16 2.096972e-01 H-C-V-W-I  TRUE  TRUE-Z #> 902  2011-11-15 1.215499e-01 B-A-L-V-Y  TRUE  TRUE-Z #> 903  2011-11-14 2.594293e-01 N-K-Z-W-X  TRUE  TRUE-Z #> 904  2011-11-13 8.996560e-01 Z-C-X-K-A  TRUE  TRUE-Z #> 905  2011-11-12 2.438763e-01 S-X-H-G-Y  TRUE  TRUE-Z #> 906  2011-11-11 2.089148e-01 L-G-M-V-Q  TRUE  TRUE-Z #> 907  2011-11-10 6.445305e-01 Z-L-G-Y-Q  TRUE  TRUE-Z #> 908  2011-11-09 4.160701e-01 J-W-E-A-D  TRUE  TRUE-Z #> 909  2011-11-08 4.840937e-01 G-S-A-M-U  TRUE  TRUE-Z #> 910  2011-11-07 5.993154e-01 F-M-D-K-O  TRUE  TRUE-Z #> 911  2011-11-06 4.923971e-01 B-O-G-R-K  TRUE  TRUE-Z #> 912  2011-11-05 2.929799e-01 V-S-U-Q-B  TRUE  TRUE-Z #> 913  2011-11-04 3.718028e-01 R-X-O-N-F  TRUE  TRUE-Z #> 914  2011-11-03 7.655858e-02 Y-N-M-H-I  TRUE  TRUE-Z #> 915  2011-11-02 3.358934e-01 T-J-W-Q-L  TRUE  TRUE-Z #> 916  2011-11-01 7.759279e-01 R-W-P-B-H  TRUE  TRUE-Z #> 917  2011-10-31 3.515388e-01 D-A-I-P-E  TRUE  TRUE-Z #> 918  2011-10-30 3.974637e-01 D-P-Q-T-N  TRUE  TRUE-Z #> 919  2011-10-29 1.251294e-01 Y-K-Q-U-X  TRUE  TRUE-Z #> 920  2011-10-28 4.570323e-02 A-Y-M-C-R  TRUE  TRUE-Z #> 921  2011-10-27 1.927557e-01 M-O-I-L-B  TRUE  TRUE-Z #> 922  2011-10-26 9.046924e-01 Y-O-K-J-F  TRUE  TRUE-Z #> 923  2011-10-25 8.573358e-01 O-C-J-X-H  TRUE  TRUE-Z #> 924  2011-10-24 3.743152e-01 W-J-X-L-Z  TRUE  TRUE-Z #> 925  2011-10-23 4.515430e-01 F-P-H-A-L  TRUE  TRUE-Z #> 926  2011-10-22 1.484547e-01 M-T-F-U-P  TRUE  TRUE-Z #> 927  2011-10-21 6.497973e-01 W-H-F-C-X  TRUE  TRUE-Z #> 928  2011-10-20 1.278461e-01 R-C-D-Z-L  TRUE  TRUE-Z #> 929  2011-10-19 2.293177e-01 Y-B-A-I-L  TRUE  TRUE-Z #> 930  2011-10-18 3.287790e-01 S-I-Y-W-P  TRUE  TRUE-Z #> 931  2011-10-17 2.151715e-01 K-D-X-G-Z  TRUE  TRUE-Z #> 932  2011-10-16 3.743546e-01 O-W-Q-M-G  TRUE  TRUE-Z #> 933  2011-10-15 4.983079e-01 M-T-V-L-G  TRUE  TRUE-Z #> 934  2011-10-14 5.252320e-02 F-Z-Y-J-L  TRUE  TRUE-Z #> 935  2011-10-13 5.881870e-02 V-L-A-S-N  TRUE  TRUE-Z #> 936  2011-10-12 4.758647e-01 I-P-A-S-N  TRUE  TRUE-Z #> 937  2011-10-11 7.681417e-01 G-T-Q-D-F  TRUE  TRUE-Z #> 938  2011-10-10 3.919159e-01 G-R-L-W-V  TRUE  TRUE-Z #> 939  2011-10-09 6.170271e-01 I-R-Z-V-P  TRUE  TRUE-Z #> 940  2011-10-08 6.400272e-02 M-L-B-A-I  TRUE  TRUE-Z #> 941  2011-10-07 8.827702e-01 D-K-Z-F-M  TRUE  TRUE-Z #> 942  2011-10-06 6.327732e-01 M-O-G-X-V  TRUE  TRUE-Z #> 943  2011-10-05 4.761819e-01 Y-V-D-Z-W  TRUE  TRUE-Z #> 944  2011-10-04 6.190151e-01 M-S-O-G-T  TRUE  TRUE-Z #> 945  2011-10-03 1.242421e-01 Z-F-M-U-X  TRUE  TRUE-Z #> 946  2011-10-02 2.492024e-01 V-N-Z-P-I  TRUE  TRUE-Z #> 947  2011-10-01 4.672482e-01 N-D-F-U-J  TRUE  TRUE-Z #> 948  2011-09-30 9.203600e-01 G-O-U-E-S  TRUE  TRUE-Z #> 949  2011-09-29 3.565568e-01 Z-C-G-W-B  TRUE  TRUE-Z #> 950  2011-09-28 7.039005e-01 O-T-E-N-V  TRUE  TRUE-Z #> 951  2011-09-27 4.597188e-01 W-P-H-C-V  TRUE  TRUE-Z #> 952  2011-09-26 3.678469e-01 X-R-D-P-G  TRUE  TRUE-Z #> 953  2011-09-25 3.483917e-01 Y-C-E-F-T  TRUE  TRUE-Z #> 954  2011-09-24 1.503271e-01 V-O-G-K-I  TRUE  TRUE-Z #> 955  2011-09-23 7.409363e-01 S-I-W-M-L  TRUE  TRUE-Z #> 956  2011-09-22 5.458929e-01 M-H-C-O-A  TRUE  TRUE-Z #> 957  2011-09-21 8.471235e-01 Q-C-N-Z-D  TRUE  TRUE-Z #> 958  2011-09-20 1.075822e-01 A-N-L-S-T  TRUE  TRUE-Z #> 959  2011-09-19 1.945030e-02 X-W-I-L-K  TRUE  TRUE-Z #> 960  2011-09-18 8.736571e-01 A-Y-V-S-K  TRUE  TRUE-Z #> 961  2011-09-17 4.036991e-01 D-W-F-L-K  TRUE  TRUE-Z #> 962  2011-09-16 9.474161e-01 U-Z-I-R-Q  TRUE  TRUE-Z #> 963  2011-09-15 6.768839e-01 V-W-B-A-T  TRUE  TRUE-Z #> 964  2011-09-14 7.465871e-01 I-U-R-E-W  TRUE  TRUE-Z #> 965  2011-09-13 6.791926e-01 N-W-U-Q-O  TRUE  TRUE-Z #> 966  2011-09-12 9.136727e-01 F-H-L-N-O  TRUE  TRUE-Z #> 967  2011-09-11 9.010875e-01 D-I-T-J-H  TRUE  TRUE-Z #> 968  2011-09-10 6.371259e-01 W-K-Q-D-T  TRUE  TRUE-Z #> 969  2011-09-09 2.728645e-01 A-O-R-I-U  TRUE  TRUE-Z #> 970  2011-09-08 7.108759e-01 M-E-V-A-F  TRUE  TRUE-Z #> 971  2011-09-07 6.921493e-01 U-J-M-X-S  TRUE  TRUE-Z #> 972  2011-09-06 7.102431e-01 O-E-R-K-H  TRUE  TRUE-Z #> 973  2011-09-05 2.801858e-01 A-V-Z-T-D  TRUE  TRUE-Z #> 974  2011-09-04 7.262215e-01 C-Z-B-D-L  TRUE  TRUE-Z #> 975  2011-09-03 5.358566e-01 D-J-T-Q-G  TRUE  TRUE-Z #> 976  2011-09-02 1.451687e-01 A-O-C-I-Z  TRUE  TRUE-Z #> 977  2011-09-01 8.328115e-01 J-L-A-Y-C  TRUE  TRUE-Z #> 978  2011-08-31 8.464071e-01 P-O-H-E-V  TRUE  TRUE-Z #> 979  2011-08-30 8.627070e-01 A-M-Z-I-R  TRUE  TRUE-Z #> 980  2011-08-29 9.171679e-01 W-C-R-H-V  TRUE  TRUE-Z #> 981  2011-08-28 4.391912e-01 Z-G-I-V-N  TRUE  TRUE-Z #> 982  2011-08-27 2.927091e-01 K-M-W-T-Q  TRUE  TRUE-Z #> 983  2011-08-26 5.150371e-01 O-I-F-D-N  TRUE  TRUE-Z #> 984  2011-08-25 8.469911e-01 X-D-A-V-T  TRUE  TRUE-Z #> 985  2011-08-24 2.584920e-02 T-S-M-B-D  TRUE  TRUE-Z #> 986  2011-08-23 3.403057e-01 F-C-D-U-Q  TRUE  TRUE-Z #> 987  2011-08-22 1.110367e-01 B-H-M-Q-G  TRUE  TRUE-Z #> 988  2011-08-21 6.183967e-01 M-K-I-W-B  TRUE  TRUE-Z #> 989  2011-08-20 3.646473e-01 R-M-Q-W-P  TRUE  TRUE-Z #> 990  2011-08-19 6.001900e-01 N-Z-L-F-G  TRUE  TRUE-Z #> 991  2011-08-18 9.044391e-01 I-P-J-B-W  TRUE  TRUE-Z #> 992  2011-08-17 4.013362e-01 O-Y-W-U-V  TRUE  TRUE-Z #> 993  2011-08-16 4.948089e-01 C-V-Z-B-O  TRUE  TRUE-Z #> 994  2011-08-15 5.317803e-01 O-Q-S-F-X  TRUE  TRUE-Z #> 995  2011-08-14 9.931214e-01 B-G-F-M-W  TRUE  TRUE-Z #> 996  2011-08-13 7.879777e-01 N-X-R-P-S  TRUE  TRUE-Z #> 997  2011-08-12 9.390126e-01 L-T-A-H-R  TRUE  TRUE-Z #> 998  2011-08-11 2.589798e-01 G-O-E-L-X  TRUE  TRUE-Z #> 999  2011-08-10 6.026497e-01 R-I-U-X-Y  TRUE  TRUE-Z #> 1000 2011-08-09 2.409739e-01 Q-O-Z-F-V  TRUE  TRUE-Z #> 1001 2011-08-08 8.587786e-01 O-P-J-C-M  TRUE  TRUE-Z #> 1002 2011-08-07 3.646855e-01 D-W-G-S-L  TRUE  TRUE-Z #> 1003 2011-08-06 3.073066e-01 T-K-W-L-O  TRUE  TRUE-Z #> 1004 2011-08-05 4.359763e-02 E-I-O-K-D  TRUE  TRUE-Z #> 1005 2011-08-04 5.594589e-01 K-E-A-I-S  TRUE  TRUE-Z #> 1006 2011-08-03 7.689460e-02 M-I-W-F-K  TRUE  TRUE-Z #> 1007 2011-08-02 5.436014e-01 S-W-G-T-N  TRUE  TRUE-Z #> 1008 2011-08-01 3.125497e-01 P-L-J-D-A  TRUE  TRUE-Z #> 1009 2011-07-31 7.126029e-01 O-M-T-J-P  TRUE  TRUE-Z #> 1010 2011-07-30 3.557477e-01 C-R-Z-L-G  TRUE  TRUE-Z #> 1011 2011-07-29 1.342170e-01 F-S-D-V-K  TRUE  TRUE-Z #> 1012 2011-07-28 7.404115e-01 N-J-H-V-I  TRUE  TRUE-Z #> 1013 2011-07-27 6.180314e-01 D-I-A-F-J  TRUE  TRUE-Z #> 1014 2011-07-26 9.294429e-02 U-R-T-V-X  TRUE  TRUE-Z #> 1015 2011-07-25 1.898003e-01 J-N-T-R-S  TRUE  TRUE-Z #> 1016 2011-07-24 2.318869e-01 K-V-Z-T-Q  TRUE  TRUE-Z #> 1017 2011-07-23 3.543023e-01 J-L-C-R-M  TRUE  TRUE-Z #> 1018 2011-07-22 9.876575e-01 Z-A-R-L-E  TRUE  TRUE-Z #> 1019 2011-07-21 8.075074e-01 Y-L-W-I-S  TRUE  TRUE-Z #> 1020 2011-07-20 5.825451e-01 B-W-E-N-U  TRUE  TRUE-Z #> 1021 2011-07-19 4.982224e-01 B-S-W-J-F  TRUE  TRUE-Z #> 1022 2011-07-18 4.321728e-01 D-G-I-P-S  TRUE  TRUE-Z #> 1023 2011-07-17 1.646926e-01 D-Q-M-E-R  TRUE  TRUE-Z #> 1024 2011-07-16 2.141138e-01 K-T-R-A-D  TRUE  TRUE-Z #> 1025 2011-07-15 1.193934e-01 P-Q-L-E-U  TRUE  TRUE-Z #> 1026 2011-07-14 1.373858e-01 U-D-W-A-O  TRUE  TRUE-Z #> 1027 2011-07-13 3.989802e-02 Q-R-P-D-Y  TRUE  TRUE-Z #> 1028 2011-07-12 1.077064e-01 C-X-V-S-I  TRUE  TRUE-Z #> 1029 2011-07-11 8.262905e-01 F-E-U-I-K  TRUE  TRUE-Z #> 1030 2011-07-10 6.530593e-02 H-Z-T-L-P  TRUE  TRUE-Z #> 1031 2011-07-09 2.269190e-01 P-I-U-B-O  TRUE  TRUE-Z #> 1032 2011-07-08 1.658931e-01 S-Q-G-W-K  TRUE  TRUE-Z #> 1033 2011-07-07 7.720349e-01 K-V-S-U-L  TRUE  TRUE-Z #> 1034 2011-07-06 9.440383e-01 F-N-Q-O-P  TRUE  TRUE-Z #> 1035 2011-07-05 3.807872e-02 M-Q-F-C-L  TRUE  TRUE-Z #> 1036 2011-07-04 3.687363e-01 V-X-G-C-A  TRUE  TRUE-Z #> 1037 2011-07-03 4.831502e-02 N-S-E-C-V  TRUE  TRUE-Z #> 1038 2011-07-02 6.855858e-01 R-K-J-A-X  TRUE  TRUE-Z #> 1039 2011-07-01 8.530182e-01 D-L-H-W-S  TRUE  TRUE-Z #> 1040 2011-06-30 2.992074e-01 Z-C-Y-L-G  TRUE  TRUE-Z #> 1041 2011-06-29 7.749222e-01 M-D-W-F-U  TRUE  TRUE-Z #> 1042 2011-06-28 4.253611e-02 R-A-U-S-F  TRUE  TRUE-Z #> 1043 2011-06-27 2.599459e-01 Y-W-H-V-Q  TRUE  TRUE-Z #> 1044 2011-06-26 5.436341e-01 B-K-G-J-W  TRUE  TRUE-Z #> 1045 2011-06-25 7.853814e-01 B-V-H-E-C  TRUE  TRUE-Z #> 1046 2011-06-24 3.458716e-01 D-J-X-S-H  TRUE  TRUE-Z #> 1047 2011-06-23 4.883018e-01 W-C-H-Z-Q  TRUE  TRUE-Z #> 1048 2011-06-22 8.018212e-02 X-B-A-I-U  TRUE  TRUE-Z #> 1049 2011-06-21 4.351774e-01 D-A-J-C-F  TRUE  TRUE-Z #> 1050 2011-06-20 4.208960e-01 B-P-U-S-W  TRUE  TRUE-Z #> 1051 2011-06-19 4.066021e-01 A-D-R-Z-K  TRUE  TRUE-Z #> 1052 2011-06-18 9.819513e-01 S-H-P-A-Z  TRUE  TRUE-Z #> 1053 2011-06-17 6.068098e-01 J-O-U-P-S  TRUE  TRUE-Z #> 1054 2011-06-16 7.373955e-01 W-C-H-P-T  TRUE  TRUE-Z #> 1055 2011-06-15 1.163839e-02 C-U-Z-O-W  TRUE  TRUE-Z #> 1056 2011-06-14 3.023380e-02 P-E-H-M-S  TRUE  TRUE-Z #> 1057 2011-06-13 6.070677e-01 B-W-L-Y-N  TRUE  TRUE-Z #> 1058 2011-06-12 8.965365e-01 N-S-F-R-Y  TRUE  TRUE-Z #> 1059 2011-06-11 8.959194e-01 W-R-K-A-N  TRUE  TRUE-Z #> 1060 2011-06-10 7.165884e-01 G-X-V-D-E  TRUE  TRUE-Z #> 1061 2011-06-09 3.327608e-01 I-G-D-P-T  TRUE  TRUE-Z #> 1062 2011-06-08 5.133910e-01 W-N-J-R-L  TRUE  TRUE-Z #> 1063 2011-06-07 6.021128e-01 P-Q-H-A-V  TRUE  TRUE-Z #> 1064 2011-06-06 2.407180e-01 U-Q-R-P-W  TRUE  TRUE-Z #> 1065 2011-06-05 3.794995e-01 I-H-Q-X-U  TRUE  TRUE-Z #> 1066 2011-06-04 3.225976e-01 W-K-R-M-N  TRUE  TRUE-Z #> 1067 2011-06-03 8.350441e-02 U-H-Q-B-Y  TRUE  TRUE-Z #> 1068 2011-06-02 2.525535e-01 X-P-D-V-W  TRUE  TRUE-Z #> 1069 2011-06-01 4.195712e-01 E-K-F-R-C  TRUE  TRUE-Z #> 1070 2011-05-31 6.837863e-01 T-E-B-N-L  TRUE  TRUE-Z #> 1071 2011-05-30 8.177268e-01 I-S-K-Q-H  TRUE  TRUE-Z #> 1072 2011-05-29 9.535974e-01 Y-Z-V-Q-L  TRUE  TRUE-Z #> 1073 2011-05-28 3.869716e-01 W-L-U-P-I  TRUE  TRUE-Z #> 1074 2011-05-27 1.575127e-01 Y-P-F-H-O  TRUE  TRUE-Z #> 1075 2011-05-26 3.989303e-01 M-C-Y-T-I  TRUE  TRUE-Z #> 1076 2011-05-25 3.391906e-01 Q-A-V-Z-O  TRUE  TRUE-Z #> 1077 2011-05-24 9.302872e-01 I-H-U-K-F  TRUE  TRUE-Z #> 1078 2011-05-23 6.659391e-01 Q-Z-C-W-Y  TRUE  TRUE-Z #> 1079 2011-05-22 6.415838e-01 U-M-Q-C-R  TRUE  TRUE-Z #> 1080 2011-05-21 6.594896e-01 U-H-S-M-W  TRUE  TRUE-Z #> 1081 2011-05-20 5.579316e-01 R-C-M-Y-G  TRUE  TRUE-Z #> 1082 2011-05-19 9.173024e-01 R-C-J-A-V  TRUE  TRUE-Z #> 1083 2011-05-18 3.380193e-01 X-B-Z-C-Y  TRUE  TRUE-Z #> 1084 2011-05-17 9.084951e-01 P-C-O-J-I  TRUE  TRUE-Z #> 1085 2011-05-16 1.461826e-01 E-C-O-W-R  TRUE  TRUE-Z #> 1086 2011-05-15 9.045497e-01 E-T-Y-X-F  TRUE  TRUE-Z #> 1087 2011-05-14 9.467569e-01 Q-M-C-K-S  TRUE  TRUE-Z #> 1088 2011-05-13 9.614218e-01 H-I-O-J-K  TRUE  TRUE-Z #> 1089 2011-05-12 4.324699e-01 R-P-N-J-V  TRUE  TRUE-Z #> 1090 2011-05-11 8.084057e-01 H-Y-P-N-V  TRUE  TRUE-Z #> 1091 2011-05-10 6.912587e-01 R-J-I-L-S  TRUE  TRUE-Z #> 1092 2011-05-09 3.956301e-01 N-K-T-Z-O  TRUE  TRUE-Z #> 1093 2011-05-08 9.660831e-01 H-B-K-A-P  TRUE  TRUE-Z #> 1094 2011-05-07 6.254632e-01 P-G-J-A-B  TRUE  TRUE-Z #> 1095 2011-05-06 9.405503e-01 L-S-O-I-Y  TRUE  TRUE-Z #> 1096 2011-05-05 8.504873e-01 L-U-R-Z-D  TRUE  TRUE-Z #> 1097 2011-05-04 2.155319e-01 F-I-K-Q-B  TRUE  TRUE-Z #> 1098 2011-05-03 1.060564e-01 Q-K-X-B-M  TRUE  TRUE-Z #> 1099 2011-05-02 2.679610e-01 A-C-L-B-I  TRUE  TRUE-Z #> 1100 2011-05-01 9.924942e-01 J-E-O-D-K  TRUE  TRUE-Z #> 1101 2011-04-30 5.119886e-01 Y-W-V-G-D  TRUE  TRUE-Z #> 1102 2011-04-29 1.406612e-01 S-N-T-H-Q  TRUE  TRUE-Z #> 1103 2011-04-28 4.659442e-01 K-M-D-R-H  TRUE  TRUE-Z #> 1104 2011-04-27 9.270870e-01 B-U-N-A-T  TRUE  TRUE-Z #> 1105 2011-04-26 3.634432e-02 A-J-F-O-C  TRUE  TRUE-Z #> 1106 2011-04-25 2.608499e-01 J-L-V-R-D  TRUE  TRUE-Z #> 1107 2011-04-24 7.729144e-01 X-A-Q-J-R  TRUE  TRUE-Z #> 1108 2011-04-23 9.088104e-01 I-V-E-W-Z  TRUE  TRUE-Z #> 1109 2011-04-22 9.111387e-01 Q-G-K-P-X  TRUE  TRUE-Z #> 1110 2011-04-21 4.005157e-01 O-H-K-J-D  TRUE  TRUE-Z #> 1111 2011-04-20 7.868464e-01 N-K-I-J-B  TRUE  TRUE-Z #> 1112 2011-04-19 2.347015e-01 Y-R-N-G-C  TRUE  TRUE-Z #> 1113 2011-04-18 8.160958e-02 K-L-E-B-S  TRUE  TRUE-Z #> 1114 2011-04-17 8.481171e-01 O-P-T-D-G  TRUE  TRUE-Z #> 1115 2011-04-16 2.472411e-01 O-R-E-J-V  TRUE  TRUE-Z #> 1116 2011-04-15 8.364602e-01 X-V-B-Z-U  TRUE  TRUE-Z #> 1117 2011-04-14 7.212576e-01 Y-H-I-O-C  TRUE  TRUE-Z #> 1118 2011-04-13 3.214041e-01 B-O-Y-M-P  TRUE  TRUE-Z #> 1119 2011-04-12 1.030034e-03 J-Z-R-Q-P  TRUE  TRUE-Z #> 1120 2011-04-11 9.702011e-01 A-E-K-M-D  TRUE  TRUE-Z #> 1121 2011-04-10 2.250638e-01 D-X-L-F-U  TRUE  TRUE-Z #> 1122 2011-04-09 7.740916e-01 J-X-U-A-Z  TRUE  TRUE-Z #> 1123 2011-04-08 9.003398e-01 Y-R-G-X-Q  TRUE  TRUE-Z #> 1124 2011-04-07 8.970007e-01 Y-R-P-W-C  TRUE  TRUE-Z #> 1125 2011-04-06 8.378409e-01 K-Q-C-Y-L  TRUE  TRUE-Z #> 1126 2011-04-05 7.486153e-01 K-H-L-V-U  TRUE  TRUE-Z #> 1127 2011-04-04 2.808679e-01 P-A-N-I-C  TRUE  TRUE-Z #> 1128 2011-04-03 2.185624e-01 M-D-Y-F-A  TRUE  TRUE-Z #> 1129 2011-04-02 7.868698e-02 H-V-D-F-U  TRUE  TRUE-Z #> 1130 2011-04-01 5.579737e-02 Z-D-P-U-J  TRUE  TRUE-Z #> 1131 2011-03-31 7.350822e-02 O-E-I-Z-Q  TRUE  TRUE-Z #> 1132 2011-03-30 8.990223e-01 L-Q-A-O-I  TRUE  TRUE-Z #> 1133 2011-03-29 4.698539e-01 L-V-C-K-N  TRUE  TRUE-Z #> 1134 2011-03-28 4.611448e-01 E-Z-R-Q-K  TRUE  TRUE-Z #> 1135 2011-03-27 4.755253e-01 N-T-V-U-D  TRUE  TRUE-Z #> 1136 2011-03-26 3.546202e-01 U-B-O-H-Z  TRUE  TRUE-Z #> 1137 2011-03-25 7.820797e-03 F-X-D-H-U  TRUE  TRUE-Z #> 1138 2011-03-24 6.801777e-01 T-W-R-O-G  TRUE  TRUE-Z #> 1139 2011-03-23 7.779584e-01 G-A-O-Z-L  TRUE  TRUE-Z #> 1140 2011-03-22 8.009869e-01 Z-C-B-G-P  TRUE  TRUE-Z #> 1141 2011-03-21 4.762381e-01 O-I-B-S-N  TRUE  TRUE-Z #> 1142 2011-03-20 6.962442e-01 Z-R-I-O-Y  TRUE  TRUE-Z #> 1143 2011-03-19 9.653738e-01 K-B-L-C-Z  TRUE  TRUE-Z #> 1144 2011-03-18 3.013024e-01 Z-B-T-F-D  TRUE  TRUE-Z #> 1145 2011-03-17 7.210243e-01 B-H-P-J-C  TRUE  TRUE-Z #> 1146 2011-03-16 2.629766e-01 A-T-L-N-M  TRUE  TRUE-Z #> 1147 2011-03-15 5.755936e-01 O-P-W-M-S  TRUE  TRUE-Z #> 1148 2011-03-14 4.675569e-01 Q-I-L-G-J  TRUE  TRUE-Z #> 1149 2011-03-13 2.840083e-02 O-D-Q-J-M  TRUE  TRUE-Z #> 1150 2011-03-12 3.434781e-01 P-B-F-Z-V  TRUE  TRUE-Z #> 1151 2011-03-11 1.979386e-01 Q-H-J-I-C  TRUE  TRUE-Z #> 1152 2011-03-10 6.248964e-01 K-V-W-Z-D  TRUE  TRUE-Z #> 1153 2011-03-09 5.429373e-01 Y-A-R-Z-Q  TRUE  TRUE-Z #> 1154 2011-03-08 1.598995e-01 M-U-H-Q-N  TRUE  TRUE-Z #> 1155 2011-03-07 7.387486e-01 O-D-K-J-Z  TRUE  TRUE-Z #> 1156 2011-03-06 2.001932e-01 I-C-Z-J-H  TRUE  TRUE-Z #> 1157 2011-03-05 9.369037e-02 E-K-R-G-M  TRUE  TRUE-Z #> 1158 2011-03-04 1.021902e-01 D-B-G-Y-K  TRUE  TRUE-Z #> 1159 2011-03-03 8.924733e-01 U-Q-B-C-L  TRUE  TRUE-Z #> 1160 2011-03-02 9.610659e-01 Y-Q-M-W-L  TRUE  TRUE-Z #> 1161 2011-03-01 8.382226e-01 A-Z-J-B-S  TRUE  TRUE-Z #> 1162 2011-02-28 9.804605e-01 C-W-K-O-X  TRUE  TRUE-Z #> 1163 2011-02-27 2.148070e-01 G-E-V-B-R  TRUE  TRUE-Z #> 1164 2011-02-26 7.717229e-01 L-N-Q-T-H  TRUE  TRUE-Z #> 1165 2011-02-25 5.127700e-01 H-E-X-A-J  TRUE  TRUE-Z #> 1166 2011-02-24 5.083342e-01 U-O-Z-S-B  TRUE  TRUE-Z #> 1167 2011-02-23 5.997378e-01 P-G-W-K-D  TRUE  TRUE-Z #> 1168 2011-02-22 1.489139e-01 J-W-L-C-A  TRUE  TRUE-Z #> 1169 2011-02-21 4.168337e-01 L-C-E-V-Z  TRUE  TRUE-Z #> 1170 2011-02-20 4.434156e-01 T-K-Y-Q-P  TRUE  TRUE-Z #> 1171 2011-02-19 2.376219e-01 Z-J-Q-U-V  TRUE  TRUE-Z #> 1172 2011-02-18 7.783684e-01 V-C-P-K-X  TRUE  TRUE-Z #> 1173 2011-02-17 5.097352e-01 U-X-A-H-E  TRUE  TRUE-Z #> 1174 2011-02-16 3.822882e-01 I-J-E-Z-W  TRUE  TRUE-Z #> 1175 2011-02-15 4.098185e-01 O-M-W-F-S  TRUE  TRUE-Z #> 1176 2011-02-14 8.241178e-01 N-K-Y-P-M  TRUE  TRUE-Z #> 1177 2011-02-13 7.192375e-01 C-G-K-L-R  TRUE  TRUE-Z #> 1178 2011-02-12 7.029070e-01 M-T-V-A-E  TRUE  TRUE-Z #> 1179 2011-02-11 9.637447e-01 D-V-H-Q-F  TRUE  TRUE-Z #> 1180 2011-02-10 7.407156e-02 M-N-P-W-L  TRUE  TRUE-Z #> 1181 2011-02-09 6.109515e-01 G-E-F-T-M  TRUE  TRUE-Z #> 1182 2011-02-08 9.191554e-01 G-X-D-Q-O  TRUE  TRUE-Z #> 1183 2011-02-07 2.554417e-01 X-G-W-E-Z  TRUE  TRUE-Z #> 1184 2011-02-06 4.922110e-01 U-C-B-P-Z  TRUE  TRUE-Z #> 1185 2011-02-05 2.904480e-01 F-K-Z-W-H  TRUE  TRUE-Z #> 1186 2011-02-04 5.895318e-01 P-C-D-F-L  TRUE  TRUE-Z #> 1187 2011-02-03 2.909929e-01 N-V-G-R-T  TRUE  TRUE-Z #> 1188 2011-02-02 8.806318e-01 I-N-B-J-T  TRUE  TRUE-Z #> 1189 2011-02-01 8.609871e-01 B-T-A-M-L  TRUE  TRUE-Z #> 1190 2011-01-31 5.044228e-01 Q-D-N-Y-I  TRUE  TRUE-Z #> 1191 2011-01-30 4.685304e-01 B-I-K-X-A  TRUE  TRUE-Z #> 1192 2011-01-29 9.350761e-01 C-U-F-S-K  TRUE  TRUE-Z #> 1193 2011-01-28 5.034773e-01 W-X-G-P-L  TRUE  TRUE-Z #> 1194 2011-01-27 1.482317e-02 H-A-P-L-C  TRUE  TRUE-Z #> 1195 2011-01-26 6.261325e-01 W-T-K-P-F  TRUE  TRUE-Z #> 1196 2011-01-25 5.789501e-01 G-B-U-T-K  TRUE  TRUE-Z #> 1197 2011-01-24 3.973253e-02 U-S-Q-Y-Z  TRUE  TRUE-Z #> 1198 2011-01-23 3.463767e-01 G-C-E-Z-W  TRUE  TRUE-Z #> 1199 2011-01-22 6.199378e-01 Z-Y-Q-B-M  TRUE  TRUE-Z #> 1200 2011-01-21 9.658843e-01 D-Y-N-C-E  TRUE  TRUE-Z #> 1201 2011-01-20 7.830416e-01 E-J-Q-K-I  TRUE  TRUE-Z #> 1202 2011-01-19 7.377928e-01 P-R-O-B-V  TRUE  TRUE-Z #> 1203 2011-01-18 4.405786e-01 D-E-A-S-U  TRUE  TRUE-Z #> 1204 2011-01-17 9.869784e-01 I-A-M-E-L  TRUE  TRUE-Z #> 1205 2011-01-16 9.703278e-01 M-K-U-F-Y  TRUE  TRUE-Z #> 1206 2011-01-15 2.530407e-01 L-Q-H-S-O  TRUE  TRUE-Z #> 1207 2011-01-14 9.151571e-01 Z-F-V-T-P  TRUE  TRUE-Z #> 1208 2011-01-13 9.905988e-01 V-N-M-R-J  TRUE  TRUE-Z #> 1209 2011-01-12 4.251430e-01 Q-E-P-K-O  TRUE  TRUE-Z #> 1210 2011-01-11 5.209047e-01 O-H-J-U-K  TRUE  TRUE-Z #> 1211 2011-01-10 5.254616e-02 U-Z-Q-O-F  TRUE  TRUE-Z #> 1212 2011-01-09 9.370750e-01 R-X-K-O-C  TRUE  TRUE-Z #> 1213 2011-01-08 6.630067e-01 L-R-K-C-G  TRUE  TRUE-Z #> 1214 2011-01-07 8.119017e-01 V-F-B-S-K  TRUE  TRUE-Z #> 1215 2011-01-06 5.081383e-01 L-Z-O-H-E  TRUE  TRUE-Z #> 1216 2011-01-05 2.325233e-01 D-S-Y-V-K  TRUE  TRUE-Z #> 1217 2011-01-04 8.412020e-01 R-J-V-A-C  TRUE  TRUE-Z #> 1218 2011-01-03 5.492037e-01 P-L-B-Q-Z  TRUE  TRUE-Z #> 1219 2011-01-02 2.969677e-01 U-Q-Z-X-Y  TRUE  TRUE-Z #> 1220 2011-01-01 4.106053e-02 E-P-L-F-T  TRUE  TRUE-Z #> 1221 2010-12-31 6.137201e-01 Z-F-C-G-B  TRUE  TRUE-Z #> 1222 2010-12-30 1.764819e-01 W-V-C-A-J  TRUE  TRUE-Z #> 1223 2010-12-29 2.330076e-01 O-N-C-Y-H  TRUE  TRUE-Z #> 1224 2010-12-28 3.896057e-01 B-Y-C-D-Z  TRUE  TRUE-Z #> 1225 2010-12-27 6.106157e-01 E-X-G-H-Z  TRUE  TRUE-Z #> 1226 2010-12-26 4.368840e-01 Y-H-X-J-I  TRUE  TRUE-Z #> 1227 2010-12-25 4.223540e-01 O-K-P-J-D  TRUE  TRUE-Z #> 1228 2010-12-24 8.607134e-01 G-E-K-T-B  TRUE  TRUE-Z #> 1229 2010-12-23 6.089911e-01 G-A-K-Y-P  TRUE  TRUE-Z #> 1230 2010-12-22 8.596075e-01 T-V-X-P-H  TRUE  TRUE-Z #> 1231 2010-12-21 6.495007e-01 W-Y-D-K-V  TRUE  TRUE-Z #> 1232 2010-12-20 4.151329e-01 Z-W-B-P-Q  TRUE  TRUE-Z #> 1233 2010-12-19 5.521439e-02 A-J-F-U-P  TRUE  TRUE-Z #> 1234 2010-12-18 2.135797e-01 V-A-X-E-Z  TRUE  TRUE-Z #> 1235 2010-12-17 9.753969e-01 F-T-J-E-I  TRUE  TRUE-Z #> 1236 2010-12-16 5.184129e-01 V-M-L-Z-U  TRUE  TRUE-Z #> 1237 2010-12-15 1.967511e-01 H-I-B-L-Q  TRUE  TRUE-Z #> 1238 2010-12-14 9.812792e-01 C-D-V-K-M  TRUE  TRUE-Z #> 1239 2010-12-13 6.579551e-01 G-Z-F-J-R  TRUE  TRUE-Z #> 1240 2010-12-12 3.600916e-01 C-T-N-U-H  TRUE  TRUE-Z #> 1241 2010-12-11 7.279625e-01 W-Y-U-X-M  TRUE  TRUE-Z #> 1242 2010-12-10 6.892190e-01 T-F-I-W-V  TRUE  TRUE-Z #> 1243 2010-12-09 6.140066e-01 X-O-P-Y-W  TRUE  TRUE-Z #> 1244 2010-12-08 9.317760e-01 L-Z-P-B-K  TRUE  TRUE-Z #> 1245 2010-12-07 5.799362e-01 A-E-T-Q-K  TRUE  TRUE-Z #> 1246 2010-12-06 6.636765e-02 K-P-C-T-Z  TRUE  TRUE-Z #> 1247 2010-12-05 6.733128e-01 C-A-H-G-E  TRUE  TRUE-Z #> 1248 2010-12-04 4.373683e-01 B-W-G-D-V  TRUE  TRUE-Z #> 1249 2010-12-03 9.129226e-01 A-S-D-B-I  TRUE  TRUE-Z #> 1250 2010-12-02 4.573510e-01 T-D-G-C-P  TRUE  TRUE-Z #> 1251 2010-12-01 6.784792e-01 J-B-F-T-K  TRUE  TRUE-Z #> 1252 2010-11-30 7.954063e-01 V-R-L-U-F  TRUE  TRUE-Z #> 1253 2010-11-29 6.495878e-01 O-P-Q-X-M  TRUE  TRUE-Z #> 1254 2010-11-28 1.196992e-01 K-M-T-E-D  TRUE  TRUE-Z #> 1255 2010-11-27 2.198425e-01 R-B-H-X-G  TRUE  TRUE-Z #> 1256 2010-11-26 7.344902e-01 L-C-O-Y-B  TRUE  TRUE-Z #> 1257 2010-11-25 6.193761e-01 R-Z-U-E-I  TRUE  TRUE-Z #> 1258 2010-11-24 4.679225e-01 K-I-W-O-G  TRUE  TRUE-Z #> 1259 2010-11-23 2.252735e-01 Z-X-W-F-K  TRUE  TRUE-Z #> 1260 2010-11-22 4.203737e-01 Y-C-B-S-V  TRUE  TRUE-Z #> 1261 2010-11-21 7.842973e-01 L-M-R-N-Z  TRUE  TRUE-Z #> 1262 2010-11-20 5.219648e-01 B-Q-M-Z-K  TRUE  TRUE-Z #> 1263 2010-11-19 7.223144e-01 P-S-Z-O-T  TRUE  TRUE-Z #> 1264 2010-11-18 2.024974e-01 Y-A-Z-N-R  TRUE  TRUE-Z #> 1265 2010-11-17 3.131972e-01 L-O-A-P-J  TRUE  TRUE-Z #> 1266 2010-11-16 1.978810e-01 O-Z-Y-M-P  TRUE  TRUE-Z #> 1267 2010-11-15 9.499460e-01 C-P-S-J-Q  TRUE  TRUE-Z #> 1268 2010-11-14 5.602026e-01 Y-F-Q-A-R  TRUE  TRUE-Z #> 1269 2010-11-13 7.300705e-01 U-Z-K-B-X  TRUE  TRUE-Z #> 1270 2010-11-12 9.221218e-01 Q-R-T-H-X  TRUE  TRUE-Z #> 1271 2010-11-11 8.453139e-01 N-U-E-Q-A  TRUE  TRUE-Z #> 1272 2010-11-10 6.830901e-01 X-Z-R-J-C  TRUE  TRUE-Z #> 1273 2010-11-09 4.240522e-01 U-X-E-A-Z  TRUE  TRUE-Z #> 1274 2010-11-08 9.545127e-01 Y-M-O-A-V  TRUE  TRUE-Z #> 1275 2010-11-07 3.187691e-01 N-K-D-W-M  TRUE  TRUE-Z #> 1276 2010-11-06 1.751827e-01 V-Q-E-F-S  TRUE  TRUE-Z #> 1277 2010-11-05 8.638533e-03 L-U-A-Z-D  TRUE  TRUE-Z #> 1278 2010-11-04 4.818605e-01 X-S-R-P-E  TRUE  TRUE-Z #> 1279 2010-11-03 3.014538e-01 I-B-O-Z-L  TRUE  TRUE-Z #> 1280 2010-11-02 6.037295e-01 J-G-K-H-Z  TRUE  TRUE-Z #> 1281 2010-11-01 5.115704e-01 T-P-O-Z-S  TRUE  TRUE-Z #> 1282 2010-10-31 6.297084e-01 L-I-R-G-N  TRUE  TRUE-Z #> 1283 2010-10-30 6.986390e-01 Y-C-O-Z-A  TRUE  TRUE-Z #> 1284 2010-10-29 6.037545e-02 H-B-D-Q-R  TRUE  TRUE-Z #> 1285 2010-10-28 5.798936e-01 C-L-J-E-T  TRUE  TRUE-Z #> 1286 2010-10-27 2.042949e-01 K-Z-N-U-X  TRUE  TRUE-Z #> 1287 2010-10-26 5.267871e-01 P-F-S-Z-H  TRUE  TRUE-Z #> 1288 2010-10-25 6.064540e-01 S-N-D-R-T  TRUE  TRUE-Z #> 1289 2010-10-24 1.216563e-01 V-R-S-T-G  TRUE  TRUE-Z #> 1290 2010-10-23 9.749724e-01 N-S-F-U-Y  TRUE  TRUE-Z #> 1291 2010-10-22 4.146256e-01 D-P-L-C-A  TRUE  TRUE-Z #> 1292 2010-10-21 1.935719e-01 B-X-V-M-S  TRUE  TRUE-Z #> 1293 2010-10-20 6.030829e-01 B-M-Z-E-Q  TRUE  TRUE-Z #> 1294 2010-10-19 4.848587e-01 K-Y-S-P-B  TRUE  TRUE-Z #> 1295 2010-10-18 9.405980e-01 K-T-V-F-G  TRUE  TRUE-Z #> 1296 2010-10-17 8.577105e-01 U-Z-B-W-E  TRUE  TRUE-Z #> 1297 2010-10-16 4.322297e-01 J-X-O-C-Y  TRUE  TRUE-Z #> 1298 2010-10-15 1.313905e-01 X-C-Q-P-D  TRUE  TRUE-Z #> 1299 2010-10-14 9.015732e-01 X-L-Y-J-Z  TRUE  TRUE-Z #> 1300 2010-10-13 1.870562e-01 Y-F-O-N-H  TRUE  TRUE-Z #> 1301 2010-10-12 2.723427e-01 M-J-B-Z-X  TRUE  TRUE-Z #> 1302 2010-10-11 3.729932e-01 G-X-R-A-D  TRUE  TRUE-Z #> 1303 2010-10-10 8.486964e-01 E-I-L-O-A  TRUE  TRUE-Z #> 1304 2010-10-09 5.448502e-02 B-R-C-I-K  TRUE  TRUE-Z #> 1305 2010-10-08 9.174470e-01 K-W-F-N-P  TRUE  TRUE-Z #> 1306 2010-10-07 1.882057e-01 C-Y-R-A-H  TRUE  TRUE-Z #> 1307 2010-10-06 7.740949e-02 J-H-D-N-C  TRUE  TRUE-Z #> 1308 2010-10-05 4.712519e-01 P-Y-C-I-D  TRUE  TRUE-Z #> 1309 2010-10-04 4.766718e-01 P-D-C-U-E  TRUE  TRUE-Z #> 1310 2010-10-03 9.723064e-01 H-A-I-E-P  TRUE  TRUE-Z #> 1311 2010-10-02 2.522709e-01 B-N-E-H-S  TRUE  TRUE-Z #> 1312 2010-10-01 4.434486e-02 C-Y-P-E-F  TRUE  TRUE-Z #> 1313 2010-09-30 4.420843e-01 K-F-X-B-S  TRUE  TRUE-Z #> 1314 2010-09-29 2.938818e-01 M-Q-D-I-Z  TRUE  TRUE-Z #> 1315 2010-09-28 2.954913e-01 V-S-P-K-O  TRUE  TRUE-Z #> 1316 2010-09-27 8.029588e-01 L-W-M-T-I  TRUE  TRUE-Z #> 1317 2010-09-26 5.700279e-01 K-N-B-V-D  TRUE  TRUE-Z #> 1318 2010-09-25 3.826774e-01 A-Z-N-X-G  TRUE  TRUE-Z #> 1319 2010-09-24 6.603859e-01 U-T-D-A-Y  TRUE  TRUE-Z #> 1320 2010-09-23 4.341619e-01 Q-Z-D-F-E  TRUE  TRUE-Z #> 1321 2010-09-22 5.145422e-01 J-Q-I-Y-C  TRUE  TRUE-Z #> 1322 2010-09-21 9.030563e-01 G-L-E-O-R  TRUE  TRUE-Z #> 1323 2010-09-20 8.432890e-01 V-J-Z-K-F  TRUE  TRUE-Z #> 1324 2010-09-19 6.564274e-01 O-W-F-X-H  TRUE  TRUE-Z #> 1325 2010-09-18 3.931607e-01 H-R-P-X-L  TRUE  TRUE-Z #> 1326 2010-09-17 3.240086e-01 B-F-X-G-P  TRUE  TRUE-Z #> 1327 2010-09-16 6.305917e-01 I-C-A-M-R  TRUE  TRUE-Z #> 1328 2010-09-15 8.425081e-01 P-N-W-Z-L  TRUE  TRUE-Z #> 1329 2010-09-14 7.522855e-01 R-G-O-H-D  TRUE  TRUE-Z #> 1330 2010-09-13 3.068652e-01 G-M-B-W-K  TRUE  TRUE-Z #> 1331 2010-09-12 8.197370e-02 G-D-E-H-P  TRUE  TRUE-Z #> 1332 2010-09-11 9.173358e-01 Z-K-I-P-N  TRUE  TRUE-Z #> 1333 2010-09-10 1.070329e-01 K-V-C-E-W  TRUE  TRUE-Z #> 1334 2010-09-09 6.885703e-01 O-K-N-T-R  TRUE  TRUE-Z #> 1335 2010-09-08 9.033872e-01 K-B-N-X-M  TRUE  TRUE-Z #> 1336 2010-09-07 8.734828e-01 E-V-A-X-P  TRUE  TRUE-Z #> 1337 2010-09-06 5.781769e-01 Q-J-I-Y-C  TRUE  TRUE-Z #> 1338 2010-09-05 9.439024e-01 I-T-U-J-D  TRUE  TRUE-Z #> 1339 2010-09-04 7.279790e-01 W-U-T-O-Q  TRUE  TRUE-Z #> 1340 2010-09-03 7.547501e-01 O-E-H-J-A  TRUE  TRUE-Z #> 1341 2010-09-02 4.425097e-01 D-K-P-A-I  TRUE  TRUE-Z #> 1342 2010-09-01 5.332224e-01 D-J-A-F-X  TRUE  TRUE-Z #> 1343 2010-08-31 8.233908e-01 T-X-D-V-A  TRUE  TRUE-Z #> 1344 2010-08-30 3.485979e-01 B-W-T-H-V  TRUE  TRUE-Z #> 1345 2010-08-29 9.180993e-01 H-G-Q-E-U  TRUE  TRUE-Z #> 1346 2010-08-28 4.702170e-01 B-U-F-Z-Y  TRUE  TRUE-Z #> 1347 2010-08-27 6.214183e-01 O-S-R-T-D  TRUE  TRUE-Z #> 1348 2010-08-26 9.704814e-02 F-W-S-I-G  TRUE  TRUE-Z #> 1349 2010-08-25 8.625809e-02 Z-O-X-C-S  TRUE  TRUE-Z #> 1350 2010-08-24 6.894579e-02 H-V-K-N-E  TRUE  TRUE-Z #> 1351 2010-08-23 2.353705e-01 Z-M-L-E-O  TRUE  TRUE-Z #> 1352 2010-08-22 1.949013e-01 Q-V-T-M-P  TRUE  TRUE-Z #> 1353 2010-08-21 5.710568e-02 T-N-D-C-S  TRUE  TRUE-Z #> 1354 2010-08-20 4.119496e-02 L-F-Q-R-Y  TRUE  TRUE-Z #> 1355 2010-08-19 3.548274e-01 U-F-S-I-O  TRUE  TRUE-Z #> 1356 2010-08-18 5.026328e-01 S-R-M-B-K  TRUE  TRUE-Z #> 1357 2010-08-17 9.778534e-02 D-P-W-U-A  TRUE  TRUE-Z #> 1358 2010-08-16 7.577682e-01 Y-W-A-T-E  TRUE  TRUE-Z #> 1359 2010-08-15 4.644734e-01 I-W-A-F-J  TRUE  TRUE-Z #> 1360 2010-08-14 9.687680e-02 V-J-G-A-Q  TRUE  TRUE-Z #> 1361 2010-08-13 2.281441e-01 Z-S-C-Y-L  TRUE  TRUE-Z #> 1362 2010-08-12 1.155074e-01 T-C-N-O-S  TRUE  TRUE-Z #> 1363 2010-08-11 5.604664e-01 J-R-Y-X-Q  TRUE  TRUE-Z #> 1364 2010-08-10 7.732823e-01 A-F-P-N-J  TRUE  TRUE-Z #> 1365 2010-08-09 5.014859e-01 R-Y-N-H-M  TRUE  TRUE-Z #> 1366 2010-08-08 9.458064e-01 S-W-Q-B-V  TRUE  TRUE-Z #> 1367 2010-08-07 8.719800e-01 N-Q-U-G-K  TRUE  TRUE-Z #> 1368 2010-08-06 6.130477e-01 T-A-Y-R-Z  TRUE  TRUE-Z #> 1369 2010-08-05 2.191274e-01 I-L-O-U-V  TRUE  TRUE-Z #> 1370 2010-08-04 3.023390e-01 W-B-L-F-Q  TRUE  TRUE-Z #> 1371 2010-08-03 8.426068e-01 N-T-E-W-G  TRUE  TRUE-Z #> 1372 2010-08-02 3.116597e-01 L-S-I-W-X  TRUE  TRUE-Z #> 1373 2010-08-01 8.103888e-01 P-A-Z-J-U  TRUE  TRUE-Z #> 1374 2010-07-31 8.930869e-01 Z-N-F-X-G  TRUE  TRUE-Z #> 1375 2010-07-30 4.508278e-01 P-B-O-E-N  TRUE  TRUE-Z #> 1376 2010-07-29 2.612405e-01 D-U-T-C-K  TRUE  TRUE-Z #> 1377 2010-07-28 4.634468e-01 G-Y-I-K-S  TRUE  TRUE-Z #> 1378 2010-07-27 7.941373e-01 F-H-W-X-P  TRUE  TRUE-Z #> 1379 2010-07-26 1.868199e-01 O-B-T-E-Z  TRUE  TRUE-Z #> 1380 2010-07-25 2.885768e-01 N-K-T-S-X  TRUE  TRUE-Z #> 1381 2010-07-24 2.349319e-02 E-S-T-N-V  TRUE  TRUE-Z #> 1382 2010-07-23 4.551204e-01 E-A-J-Q-F  TRUE  TRUE-Z #> 1383 2010-07-22 5.366230e-01 P-Q-D-X-B  TRUE  TRUE-Z #> 1384 2010-07-21 7.791532e-01 R-F-J-E-Q  TRUE  TRUE-Z #> 1385 2010-07-20 5.109369e-01 X-Z-S-M-V  TRUE  TRUE-Z #> 1386 2010-07-19 7.498818e-01 E-Z-Q-D-X  TRUE  TRUE-Z #> 1387 2010-07-18 7.872430e-01 M-O-T-U-D  TRUE  TRUE-Z #> 1388 2010-07-17 4.357687e-01 O-I-X-Z-H  TRUE  TRUE-Z #> 1389 2010-07-16 9.468772e-01 H-T-V-I-M  TRUE  TRUE-Z #> 1390 2010-07-15 4.079205e-01 U-E-A-D-W  TRUE  TRUE-Z #> 1391 2010-07-14 8.731711e-02 Z-D-F-A-X  TRUE  TRUE-Z #> 1392 2010-07-13 8.915814e-01 E-D-V-P-N  TRUE  TRUE-Z #> 1393 2010-07-12 2.139161e-01 K-J-R-M-H  TRUE  TRUE-Z #> 1394 2010-07-11 5.916244e-01 V-A-K-U-D  TRUE  TRUE-Z #> 1395 2010-07-10 2.410583e-01 S-B-L-A-N  TRUE  TRUE-Z #> 1396 2010-07-09 7.264158e-01 Q-C-Z-D-P  TRUE  TRUE-Z #> 1397 2010-07-08 5.981314e-01 U-Z-A-W-C  TRUE  TRUE-Z #> 1398 2010-07-07 7.599855e-01 V-D-M-G-B  TRUE  TRUE-Z #> 1399 2010-07-06 2.923340e-01 Z-H-A-I-X  TRUE  TRUE-Z #> 1400 2010-07-05 1.625988e-01 W-F-H-R-X  TRUE  TRUE-Z #> 1401 2010-07-04 9.302781e-01 G-E-V-F-K  TRUE  TRUE-Z #> 1402 2010-07-03 5.869171e-01 H-A-V-L-E  TRUE  TRUE-Z #> 1403 2010-07-02 3.684479e-01 K-P-E-X-Y  TRUE  TRUE-Z #> 1404 2010-07-01 8.150427e-01 T-O-Y-R-P  TRUE  TRUE-Z #> 1405 2010-06-30 8.331821e-01 H-T-F-U-K  TRUE  TRUE-Z #> 1406 2010-06-29 4.700606e-01 R-V-N-C-X  TRUE  TRUE-Z #> 1407 2010-06-28 4.506338e-01 K-H-Z-R-A  TRUE  TRUE-Z #> 1408 2010-06-27 6.268140e-01 Q-P-J-G-N  TRUE  TRUE-Z #> 1409 2010-06-26 6.338852e-01 T-F-L-K-E  TRUE  TRUE-Z #> 1410 2010-06-25 5.478765e-01 E-T-O-D-G  TRUE  TRUE-Z #> 1411 2010-06-24 9.827416e-01 J-K-E-S-N  TRUE  TRUE-Z #> 1412 2010-06-23 8.759471e-02 K-Q-D-C-B  TRUE  TRUE-Z #> 1413 2010-06-22 4.461539e-01 Q-R-A-F-D  TRUE  TRUE-Z #> 1414 2010-06-21 8.823328e-01 J-W-A-Q-I  TRUE  TRUE-Z #> 1415 2010-06-20 9.619785e-01 N-T-F-G-D  TRUE  TRUE-Z #> 1416 2010-06-19 3.002483e-01 E-R-I-D-N  TRUE  TRUE-Z #> 1417 2010-06-18 7.233907e-01 M-G-P-Q-V  TRUE  TRUE-Z #> 1418 2010-06-17 3.840981e-01 D-P-R-G-N  TRUE  TRUE-Z #> 1419 2010-06-16 2.250561e-01 N-C-F-T-A  TRUE  TRUE-Z #> 1420 2010-06-15 8.898181e-01 D-F-Q-X-O  TRUE  TRUE-Z #> 1421 2010-06-14 9.840380e-01 U-D-K-Q-X  TRUE  TRUE-Z #> 1422 2010-06-13 6.506647e-01 N-G-M-Q-A  TRUE  TRUE-Z #> 1423 2010-06-12 8.435327e-01 I-X-F-D-V  TRUE  TRUE-Z #> 1424 2010-06-11 2.753451e-01 R-T-C-K-I  TRUE  TRUE-Z #> 1425 2010-06-10 7.834872e-03 S-G-E-R-O  TRUE  TRUE-Z #> 1426 2010-06-09 7.080119e-01 R-B-J-G-Z  TRUE  TRUE-Z #> 1427 2010-06-08 6.935786e-01 J-X-G-K-R  TRUE  TRUE-Z #> 1428 2010-06-07 1.939524e-01 U-K-O-L-C  TRUE  TRUE-Z #> 1429 2010-06-06 9.079196e-01 X-Q-U-S-B  TRUE  TRUE-Z #> 1430 2010-06-05 7.030949e-01 B-A-M-V-N  TRUE  TRUE-Z #> 1431 2010-06-04 8.998052e-01 N-A-V-G-U  TRUE  TRUE-Z #> 1432 2010-06-03 7.446928e-01 I-Y-U-Z-C  TRUE  TRUE-Z #> 1433 2010-06-02 4.094981e-01 Y-R-I-M-V  TRUE  TRUE-Z #> 1434 2010-06-01 2.238380e-01 Y-I-R-P-N  TRUE  TRUE-Z #> 1435 2010-05-31 6.027427e-01 E-C-Q-A-P  TRUE  TRUE-Z #> 1436 2010-05-30 2.162475e-01 P-Z-B-O-A  TRUE  TRUE-Z #> 1437 2010-05-29 9.748876e-01 D-A-R-F-Y  TRUE  TRUE-Z #> 1438 2010-05-28 6.126052e-01 Q-E-T-L-N  TRUE  TRUE-Z #> 1439 2010-05-27 2.240276e-01 Z-D-F-Q-C  TRUE  TRUE-Z #> 1440 2010-05-26 7.132181e-01 X-T-Q-W-D  TRUE  TRUE-Z #> 1441 2010-05-25 2.844321e-01 D-P-Y-U-J  TRUE  TRUE-Z #> 1442 2010-05-24 4.280180e-01 S-J-Q-X-V  TRUE  TRUE-Z #> 1443 2010-05-23 4.876493e-01 E-O-P-W-N  TRUE  TRUE-Z #> 1444 2010-05-22 4.619832e-01 W-Q-B-O-Y  TRUE  TRUE-Z #> 1445 2010-05-21 2.851527e-01 Y-Z-W-Q-F  TRUE  TRUE-Z #> 1446 2010-05-20 6.617028e-01 H-Q-C-X-O  TRUE  TRUE-Z #> 1447 2010-05-19 2.102881e-01 S-B-W-V-L  TRUE  TRUE-Z #> 1448 2010-05-18 7.624565e-02 G-R-Y-V-J  TRUE  TRUE-Z #> 1449 2010-05-17 4.660125e-01 W-F-G-K-S  TRUE  TRUE-Z #> 1450 2010-05-16 8.245901e-01 F-N-P-D-S  TRUE  TRUE-Z #> 1451 2010-05-15 6.815892e-01 L-C-Q-T-Z  TRUE  TRUE-Z #> 1452 2010-05-14 1.007059e-01 V-S-Y-O-B  TRUE  TRUE-Z #> 1453 2010-05-13 5.617574e-01 L-F-X-U-Q  TRUE  TRUE-Z #> 1454 2010-05-12 2.831674e-01 G-D-R-M-E  TRUE  TRUE-Z #> 1455 2010-05-11 3.086273e-01 P-Q-R-Y-G  TRUE  TRUE-Z #> 1456 2010-05-10 4.481833e-01 N-E-H-L-P  TRUE  TRUE-Z #> 1457 2010-05-09 2.064662e-01 Z-R-F-M-U  TRUE  TRUE-Z #> 1458 2010-05-08 9.418260e-01 I-X-C-F-O  TRUE  TRUE-Z #> 1459 2010-05-07 9.070361e-01 L-E-X-K-O  TRUE  TRUE-Z #> 1460 2010-05-06 6.471291e-02 G-V-Y-X-F  TRUE  TRUE-Z #> 1461 2010-05-05 1.515176e-01 O-P-V-A-Z  TRUE  TRUE-Z #> 1462 2010-05-04 1.515536e-01 P-K-S-L-Y  TRUE  TRUE-Z #> 1463 2010-05-03 2.726038e-03 Q-R-K-M-D  TRUE  TRUE-Z #> 1464 2010-05-02 3.227492e-01 A-N-B-J-R  TRUE  TRUE-Z #> 1465 2010-05-01 6.757021e-01 C-S-G-R-M  TRUE  TRUE-Z #> 1466 2010-04-30 1.771263e-01 H-C-E-O-D  TRUE  TRUE-Z #> 1467 2010-04-29 6.663011e-01 E-I-N-F-O  TRUE  TRUE-Z #> 1468 2010-04-28 4.370777e-01 F-S-P-O-B  TRUE  TRUE-Z #> 1469 2010-04-27 2.128876e-01 T-S-A-X-B  TRUE  TRUE-Z #> 1470 2010-04-26 2.966197e-01 R-K-Y-L-M  TRUE  TRUE-Z #> 1471 2010-04-25 7.367177e-01 F-G-O-C-T  TRUE  TRUE-Z #> 1472 2010-04-24 5.657048e-01 C-F-H-Y-Z  TRUE  TRUE-Z #> 1473 2010-04-23 1.015328e-01 M-P-Z-A-V  TRUE  TRUE-Z #> 1474 2010-04-22 8.442299e-01 N-U-X-B-T  TRUE  TRUE-Z #> 1475 2010-04-21 7.420915e-02 Q-A-V-N-P  TRUE  TRUE-Z #> 1476 2010-04-20 3.738845e-01 D-R-V-C-K  TRUE  TRUE-Z #> 1477 2010-04-19 9.221736e-01 U-P-X-M-F  TRUE  TRUE-Z #> 1478 2010-04-18 8.593380e-02 S-P-I-T-Z  TRUE  TRUE-Z #> 1479 2010-04-17 3.435244e-01 O-Z-C-U-Y  TRUE  TRUE-Z #> 1480 2010-04-16 9.128591e-01 B-G-X-A-D  TRUE  TRUE-Z #> 1481 2010-04-15 1.568975e-01 Y-U-L-A-W  TRUE  TRUE-Z #> 1482 2010-04-14 5.694284e-01 O-J-Q-W-G  TRUE  TRUE-Z #> 1483 2010-04-13 8.427400e-01 V-B-I-F-D  TRUE  TRUE-Z #> 1484 2010-04-12 9.782829e-01 V-J-Q-K-A  TRUE  TRUE-Z #> 1485 2010-04-11 4.192930e-01 H-X-W-S-A  TRUE  TRUE-Z #> 1486 2010-04-10 2.800769e-01 E-D-F-T-I  TRUE  TRUE-Z #> 1487 2010-04-09 8.698503e-01 H-Q-V-R-L  TRUE  TRUE-Z #> 1488 2010-04-08 1.104243e-01 M-U-Z-K-Q  TRUE  TRUE-Z #> 1489 2010-04-07 1.809716e-01 V-Y-U-Q-X  TRUE  TRUE-Z #> 1490 2010-04-06 6.369470e-01 H-M-I-U-O  TRUE  TRUE-Z #> 1491 2010-04-05 6.291328e-01 N-Q-P-U-R  TRUE  TRUE-Z #> 1492 2010-04-04 8.778970e-01 Y-F-I-V-D  TRUE  TRUE-Z #> 1493 2010-04-03 8.189745e-01 F-A-L-W-M  TRUE  TRUE-Z #> 1494 2010-04-02 5.958766e-02 G-Q-M-L-B  TRUE  TRUE-Z #> 1495 2010-04-01 2.095802e-05 X-B-L-P-W  TRUE  TRUE-Z #> 1496 2010-03-31 3.929286e-01 I-A-R-Q-F  TRUE  TRUE-Z #> 1497 2010-03-30 3.667628e-01 U-E-J-T-V  TRUE  TRUE-Z #> 1498 2010-03-29 3.555830e-02 O-B-Q-U-S  TRUE  TRUE-Z #> 1499 2010-03-28 4.340840e-01 B-P-U-S-M  TRUE  TRUE-Z #> 1500 2010-03-27 9.397687e-01 N-Z-D-O-V  TRUE  TRUE-Z #> 1501 2010-03-26 2.130238e-01 A-X-S-T-V  TRUE  TRUE-Z #> 1502 2010-03-25 2.706633e-01 O-Y-C-F-K  TRUE  TRUE-Z #> 1503 2010-03-24 3.692664e-01 D-S-I-M-Y  TRUE  TRUE-Z #> 1504 2010-03-23 3.473924e-01 B-Y-N-G-I  TRUE  TRUE-Z #> 1505 2010-03-22 6.649731e-01 G-P-U-M-F  TRUE  TRUE-Z #> 1506 2010-03-21 9.485233e-01 V-B-G-N-W  TRUE  TRUE-Z #> 1507 2010-03-20 9.452722e-01 C-K-I-S-Y  TRUE  TRUE-Z #> 1508 2010-03-19 4.837048e-01 U-B-I-R-V  TRUE  TRUE-Z #> 1509 2010-03-18 9.741956e-01 L-R-M-C-Z  TRUE  TRUE-Z #> 1510 2010-03-17 7.777304e-01 T-Z-D-U-M  TRUE  TRUE-Z #> 1511 2010-03-16 6.901473e-01 R-M-F-T-O  TRUE  TRUE-Z #> 1512 2010-03-15 7.557100e-01 S-V-D-F-Y  TRUE  TRUE-Z #> 1513 2010-03-14 4.810865e-01 M-F-R-C-J  TRUE  TRUE-Z #> 1514 2010-03-13 4.602154e-01 G-P-O-X-W  TRUE  TRUE-Z #> 1515 2010-03-12 2.648870e-01 M-R-X-H-Z  TRUE  TRUE-Z #> 1516 2010-03-11 9.230572e-01 N-D-J-R-Y  TRUE  TRUE-Z #> 1517 2010-03-10 3.188456e-01 B-J-W-U-L  TRUE  TRUE-Z #> 1518 2010-03-09 6.908779e-01 T-E-U-D-J  TRUE  TRUE-Z #> 1519 2010-03-08 1.268615e-01 M-V-J-R-B  TRUE  TRUE-Z #> 1520 2010-03-07 4.578080e-01 G-X-Z-U-Y  TRUE  TRUE-Z #> 1521 2010-03-06 3.446779e-02 L-C-P-M-D  TRUE  TRUE-Z #> 1522 2010-03-05 7.097235e-01 H-Z-W-E-T  TRUE  TRUE-Z #> 1523 2010-03-04 5.831913e-01 O-H-Y-C-K  TRUE  TRUE-Z #> 1524 2010-03-03 2.931526e-01 M-B-Q-N-E  TRUE  TRUE-Z #> 1525 2010-03-02 8.544765e-01 B-D-E-U-V  TRUE  TRUE-Z #> 1526 2010-03-01 5.609322e-01 V-P-F-Y-R  TRUE  TRUE-Z #> 1527 2010-02-28 9.322354e-01 U-M-C-J-L  TRUE  TRUE-Z #> 1528 2010-02-27 4.197301e-01 P-X-L-Z-A  TRUE  TRUE-Z #> 1529 2010-02-26 3.578705e-01 D-E-F-X-H  TRUE  TRUE-Z #> 1530 2010-02-25 5.728269e-01 P-I-Z-C-V  TRUE  TRUE-Z #> 1531 2010-02-24 3.628489e-01 V-N-O-B-G  TRUE  TRUE-Z #> 1532 2010-02-23 4.536802e-01 M-T-U-D-P  TRUE  TRUE-Z #> 1533 2010-02-22 3.959633e-01 I-A-E-O-Q  TRUE  TRUE-Z #> 1534 2010-02-21 7.117502e-01 V-R-S-L-A  TRUE  TRUE-Z #> 1535 2010-02-20 8.821912e-01 S-I-Q-N-T  TRUE  TRUE-Z #> 1536 2010-02-19 8.753402e-01 A-W-T-O-U  TRUE  TRUE-Z #> 1537 2010-02-18 2.382082e-01 O-T-V-A-Q  TRUE  TRUE-Z #> 1538 2010-02-17 1.769601e-01 D-R-O-Z-F  TRUE  TRUE-Z #> 1539 2010-02-16 4.400184e-03 Z-M-F-Q-I  TRUE  TRUE-Z #> 1540 2010-02-15 6.258251e-01 B-H-E-L-M  TRUE  TRUE-Z #> 1541 2010-02-14 9.410979e-01 Z-S-D-L-G  TRUE  TRUE-Z #> 1542 2010-02-13 3.455787e-01 E-B-N-A-Q  TRUE  TRUE-Z #> 1543 2010-02-12 5.178562e-01 K-Z-O-C-D  TRUE  TRUE-Z #> 1544 2010-02-11 7.064294e-01 Y-J-M-C-Z  TRUE  TRUE-Z #> 1545 2010-02-10 2.402365e-01 K-O-F-A-G  TRUE  TRUE-Z #> 1546 2010-02-09 7.237772e-01 J-U-L-Y-G  TRUE  TRUE-Z #> 1547 2010-02-08 2.726451e-01 A-F-C-V-D  TRUE  TRUE-Z #> 1548 2010-02-07 1.307714e-01 S-B-H-T-U  TRUE  TRUE-Z #> 1549 2010-02-06 6.600298e-01 J-F-V-T-Q  TRUE  TRUE-Z #> 1550 2010-02-05 5.510832e-01 H-L-Z-K-M  TRUE  TRUE-Z #> 1551 2010-02-04 1.343284e-01 F-Q-O-K-S  TRUE  TRUE-Z #> 1552 2010-02-03 3.335679e-01 P-S-U-V-A  TRUE  TRUE-Z #> 1553 2010-02-02 1.559276e-01 Y-L-E-D-F  TRUE  TRUE-Z #> 1554 2010-02-01 3.099824e-01 Z-L-U-K-V  TRUE  TRUE-Z #> 1555 2010-01-31 9.001523e-01 J-N-M-P-F  TRUE  TRUE-Z #> 1556 2010-01-30 1.658393e-01 G-M-F-Y-Z  TRUE  TRUE-Z #> 1557 2010-01-29 6.131827e-01 W-P-N-D-U  TRUE  TRUE-Z #> 1558 2010-01-28 3.814094e-01 J-V-Q-H-P  TRUE  TRUE-Z #> 1559 2010-01-27 4.424345e-01 Q-B-H-O-R  TRUE  TRUE-Z #> 1560 2010-01-26 1.722988e-01 U-R-J-K-W  TRUE  TRUE-Z #> 1561 2010-01-25 6.547646e-01 J-Q-S-O-F  TRUE  TRUE-Z #> 1562 2010-01-24 3.111825e-01 S-J-N-T-O  TRUE  TRUE-Z #> 1563 2010-01-23 7.089219e-01 A-S-B-Q-W  TRUE  TRUE-Z #> 1564 2010-01-22 5.742671e-01 W-X-Q-H-I  TRUE  TRUE-Z #> 1565 2010-01-21 7.260551e-01 K-R-V-S-X  TRUE  TRUE-Z #> 1566 2010-01-20 8.459602e-01 Q-S-O-R-W  TRUE  TRUE-Z #> 1567 2010-01-19 9.508438e-01 R-Q-N-G-Z  TRUE  TRUE-Z #> 1568 2010-01-18 3.731339e-01 Z-P-A-S-R  TRUE  TRUE-Z #> 1569 2010-01-17 5.447247e-01 F-N-X-K-D  TRUE  TRUE-Z #> 1570 2010-01-16 3.481018e-01 S-I-X-A-W  TRUE  TRUE-Z #> 1571 2010-01-15 3.432848e-01 K-E-J-H-G  TRUE  TRUE-Z #> 1572 2010-01-14 1.814010e-01 D-N-Z-W-U  TRUE  TRUE-Z #> 1573 2010-01-13 8.997331e-01 X-Y-T-J-O  TRUE  TRUE-Z #> 1574 2010-01-12 3.630838e-01 X-I-J-Z-S  TRUE  TRUE-Z #> 1575 2010-01-11 9.083579e-01 R-V-L-W-C  TRUE  TRUE-Z #> 1576 2010-01-10 9.546440e-01 X-T-A-M-I  TRUE  TRUE-Z #> 1577 2010-01-09 7.376293e-02 A-W-B-K-M  TRUE  TRUE-Z #> 1578 2010-01-08 8.125615e-01 E-C-Q-T-X  TRUE  TRUE-Z #> 1579 2010-01-07 5.117138e-01 A-B-V-W-X  TRUE  TRUE-Z #> 1580 2010-01-06 2.662683e-01 K-O-B-W-Q  TRUE  TRUE-Z #> 1581 2010-01-05 8.262129e-01 V-Y-F-P-C  TRUE  TRUE-Z #> 1582 2010-01-04 3.718505e-01 H-O-E-X-D  TRUE  TRUE-Z #> 1583 2010-01-03 2.284966e-01 I-Y-A-H-Q  TRUE  TRUE-Z #> 1584 2010-01-02 8.676267e-01 J-U-N-D-F  TRUE  TRUE-Z #> 1585 2010-01-01 7.920185e-01 O-V-N-P-Y  TRUE  TRUE-Z #> 1586 2009-12-31 9.012160e-01 X-R-O-C-J  TRUE  TRUE-Z #> 1587 2009-12-30 2.386436e-01 W-I-D-R-M  TRUE  TRUE-Z #> 1588 2009-12-29 9.899649e-01 Q-C-O-H-N  TRUE  TRUE-Z #> 1589 2009-12-28 5.946505e-01 L-Z-Y-W-T  TRUE  TRUE-Z #> 1590 2009-12-27 1.700896e-01 L-H-J-U-I  TRUE  TRUE-Z #> 1591 2009-12-26 6.644820e-01 X-M-E-R-U  TRUE  TRUE-Z #> 1592 2009-12-25 2.682302e-01 R-J-K-Z-E  TRUE  TRUE-Z #> 1593 2009-12-24 8.565514e-01 Q-A-I-P-R  TRUE  TRUE-Z #> 1594 2009-12-23 7.532569e-01 A-D-L-Q-M  TRUE  TRUE-Z #> 1595 2009-12-22 7.458634e-01 F-E-M-B-Z  TRUE  TRUE-Z #> 1596 2009-12-21 3.524403e-01 S-J-N-H-P  TRUE  TRUE-Z #> 1597 2009-12-20 2.289516e-01 I-Y-C-L-F  TRUE  TRUE-Z #> 1598 2009-12-19 5.882615e-01 W-Y-O-N-I  TRUE  TRUE-Z #> 1599 2009-12-18 3.709711e-02 S-E-N-B-H  TRUE  TRUE-Z #> 1600 2009-12-17 1.813508e-01 K-Z-E-U-V  TRUE  TRUE-Z #> 1601 2009-12-16 8.714345e-01 D-N-Y-Z-O  TRUE  TRUE-Z #> 1602 2009-12-15 7.274860e-01 Q-S-B-J-P  TRUE  TRUE-Z #> 1603 2009-12-14 5.123611e-01 J-N-V-T-B  TRUE  TRUE-Z #> 1604 2009-12-13 3.342654e-02 U-H-Q-L-S  TRUE  TRUE-Z #> 1605 2009-12-12 6.118415e-01 U-C-N-Q-L  TRUE  TRUE-Z #> 1606 2009-12-11 2.393311e-01 A-L-R-Q-F  TRUE  TRUE-Z #> 1607 2009-12-10 4.095016e-01 J-Y-K-P-L  TRUE  TRUE-Z #> 1608 2009-12-09 2.387309e-01 W-S-O-M-U  TRUE  TRUE-Z #> 1609 2009-12-08 7.253510e-01 L-P-S-U-T  TRUE  TRUE-Z #> 1610 2009-12-07 2.161716e-01 U-V-P-F-M  TRUE  TRUE-Z #> 1611 2009-12-06 7.693942e-01 C-J-W-Q-N  TRUE  TRUE-Z #> 1612 2009-12-05 3.784132e-01 A-V-C-P-L  TRUE  TRUE-Z #> 1613 2009-12-04 1.595052e-01 P-V-N-Y-E  TRUE  TRUE-Z #> 1614 2009-12-03 9.941702e-01 A-S-M-K-G  TRUE  TRUE-Z #> 1615 2009-12-02 3.018596e-02 T-U-I-W-H  TRUE  TRUE-Z #> 1616 2009-12-01 8.491483e-01 E-K-G-P-M  TRUE  TRUE-Z #> 1617 2009-11-30 3.931433e-01 Z-F-O-H-E  TRUE  TRUE-Z #> 1618 2009-11-29 9.931482e-01 C-G-I-X-R  TRUE  TRUE-Z #> 1619 2009-11-28 9.654853e-01 R-F-D-O-X  TRUE  TRUE-Z #> 1620 2009-11-27 7.658934e-01 C-R-F-M-Q  TRUE  TRUE-Z #> 1621 2009-11-26 8.472479e-01 H-F-M-N-W  TRUE  TRUE-Z #> 1622 2009-11-25 7.669222e-01 M-Y-F-I-X  TRUE  TRUE-Z #> 1623 2009-11-24 3.517338e-02 A-B-U-X-S  TRUE  TRUE-Z #> 1624 2009-11-23 7.697102e-01 C-F-G-R-D  TRUE  TRUE-Z #> 1625 2009-11-22 7.439630e-01 M-A-G-L-C  TRUE  TRUE-Z #> 1626 2009-11-21 5.224828e-01 W-L-Y-F-U  TRUE  TRUE-Z #> 1627 2009-11-20 3.993014e-01 U-M-C-R-H  TRUE  TRUE-Z #> 1628 2009-11-19 6.727492e-01 A-C-P-Y-K  TRUE  TRUE-Z #> 1629 2009-11-18 1.162951e-02 A-E-V-C-P  TRUE  TRUE-Z #> 1630 2009-11-17 7.307418e-01 M-C-A-J-B  TRUE  TRUE-Z #> 1631 2009-11-16 4.188564e-01 M-O-Z-G-A  TRUE  TRUE-Z #> 1632 2009-11-15 9.711307e-01 T-R-E-Y-M  TRUE  TRUE-Z #> 1633 2009-11-14 2.973015e-01 F-K-E-S-C  TRUE  TRUE-Z #> 1634 2009-11-13 1.324644e-01 F-Q-B-J-T  TRUE  TRUE-Z #> 1635 2009-11-12 4.084731e-01 R-Y-D-V-B  TRUE  TRUE-Z #> 1636 2009-11-11 1.219484e-01 J-M-C-R-W  TRUE  TRUE-Z #> 1637 2009-11-10 8.431357e-01 L-S-E-Z-R  TRUE  TRUE-Z #> 1638 2009-11-09 5.233659e-01 J-A-E-P-N  TRUE  TRUE-Z #> 1639 2009-11-08 9.579960e-01 Y-S-K-B-O  TRUE  TRUE-Z #> 1640 2009-11-07 4.549290e-01 S-Y-N-G-C  TRUE  TRUE-Z #> 1641 2009-11-06 7.483641e-01 B-Q-I-W-H  TRUE  TRUE-Z #> 1642 2009-11-05 2.600395e-01 W-T-U-J-Y  TRUE  TRUE-Z #> 1643 2009-11-04 1.272739e-01 O-J-W-G-C  TRUE  TRUE-Z #> 1644 2009-11-03 9.821556e-01 Q-B-G-I-F  TRUE  TRUE-Z #> 1645 2009-11-02 7.978603e-01 W-E-B-T-N  TRUE  TRUE-Z #> 1646 2009-11-01 7.896581e-02 M-A-U-R-G  TRUE  TRUE-Z #> 1647 2009-10-31 3.640899e-01 Q-R-O-X-P  TRUE  TRUE-Z #> 1648 2009-10-30 8.825321e-01 H-T-Y-N-P  TRUE  TRUE-Z #> 1649 2009-10-29 8.177174e-01 L-Q-A-G-X  TRUE  TRUE-Z #> 1650 2009-10-28 6.154791e-01 U-S-D-R-C  TRUE  TRUE-Z #> 1651 2009-10-27 8.226908e-01 I-J-F-R-Q  TRUE  TRUE-Z #> 1652 2009-10-26 4.168728e-01 K-T-G-C-E  TRUE  TRUE-Z #> 1653 2009-10-25 4.151031e-01 M-K-P-C-T  TRUE  TRUE-Z #> 1654 2009-10-24 2.688933e-01 W-Z-L-N-K  TRUE  TRUE-Z #> 1655 2009-10-23 8.503852e-01 B-O-G-U-P  TRUE  TRUE-Z #> 1656 2009-10-22 9.616660e-02 C-F-V-D-P  TRUE  TRUE-Z #> 1657 2009-10-21 9.140452e-01 G-A-P-R-X  TRUE  TRUE-Z #> 1658 2009-10-20 1.915181e-01 E-I-Y-K-F  TRUE  TRUE-Z #> 1659 2009-10-19 4.982869e-01 W-H-G-P-S  TRUE  TRUE-Z #> 1660 2009-10-18 1.256406e-01 G-J-W-M-B  TRUE  TRUE-Z #> 1661 2009-10-17 2.983613e-01 R-Y-B-F-L  TRUE  TRUE-Z #> 1662 2009-10-16 2.379742e-01 T-F-Y-Q-I  TRUE  TRUE-Z #> 1663 2009-10-15 3.988101e-02 R-L-O-C-F  TRUE  TRUE-Z #> 1664 2009-10-14 1.248426e-01 I-X-S-G-O  TRUE  TRUE-Z #> 1665 2009-10-13 6.253510e-01 F-R-M-A-X  TRUE  TRUE-Z #> 1666 2009-10-12 5.946133e-01 H-B-L-Z-A  TRUE  TRUE-Z #> 1667 2009-10-11 2.571401e-01 A-L-M-N-C  TRUE  TRUE-Z #> 1668 2009-10-10 3.516244e-01 F-D-Q-X-L  TRUE  TRUE-Z #> 1669 2009-10-09 5.392471e-01 Y-K-S-Q-D  TRUE  TRUE-Z #> 1670 2009-10-08 1.631753e-01 I-Z-B-O-D  TRUE  TRUE-Z #> 1671 2009-10-07 4.183544e-01 R-M-A-S-C  TRUE  TRUE-Z #> 1672 2009-10-06 4.185589e-01 J-S-U-H-T  TRUE  TRUE-Z #> 1673 2009-10-05 3.498846e-01 Q-B-A-P-Z  TRUE  TRUE-Z #> 1674 2009-10-04 5.503277e-01 I-D-X-Q-O  TRUE  TRUE-Z #> 1675 2009-10-03 4.551217e-01 F-H-S-W-Z  TRUE  TRUE-Z #> 1676 2009-10-02 2.183986e-01 P-V-K-R-G  TRUE  TRUE-Z #> 1677 2009-10-01 8.368857e-02 L-B-A-H-I  TRUE  TRUE-Z #> 1678 2009-09-30 4.030210e-01 I-P-T-O-Q  TRUE  TRUE-Z #> 1679 2009-09-29 1.162700e-01 N-F-K-Y-V  TRUE  TRUE-Z #> 1680 2009-09-28 3.547165e-01 T-U-M-A-G  TRUE  TRUE-Z #> 1681 2009-09-27 6.827174e-01 S-N-X-W-F  TRUE  TRUE-Z #> 1682 2009-09-26 6.949764e-01 I-V-Y-O-C  TRUE  TRUE-Z #> 1683 2009-09-25 7.688364e-01 M-T-Z-G-O  TRUE  TRUE-Z #> 1684 2009-09-24 9.889813e-01 R-V-B-J-I  TRUE  TRUE-Z #> 1685 2009-09-23 3.118305e-01 O-X-N-R-V  TRUE  TRUE-Z #> 1686 2009-09-22 1.105484e-01 W-N-M-F-J  TRUE  TRUE-Z #> 1687 2009-09-21 9.308963e-01 I-L-R-D-B  TRUE  TRUE-Z #> 1688 2009-09-20 3.455082e-01 E-G-F-V-Z  TRUE  TRUE-Z #> 1689 2009-09-19 3.319529e-01 A-P-S-L-Y  TRUE  TRUE-Z #> 1690 2009-09-18 7.745477e-01 U-A-X-G-O  TRUE  TRUE-Z #> 1691 2009-09-17 8.418117e-01 Y-D-B-O-M  TRUE  TRUE-Z #> 1692 2009-09-16 8.223261e-01 T-Q-K-M-D  TRUE  TRUE-Z #> 1693 2009-09-15 6.830948e-01 L-K-D-X-G  TRUE  TRUE-Z #> 1694 2009-09-14 4.876491e-01 V-Z-J-A-C  TRUE  TRUE-Z #> 1695 2009-09-13 8.786593e-01 T-N-I-W-H  TRUE  TRUE-Z #> 1696 2009-09-12 3.076881e-01 Z-C-S-R-E  TRUE  TRUE-Z #> 1697 2009-09-11 7.888587e-01 X-P-C-S-J  TRUE  TRUE-Z #> 1698 2009-09-10 7.118279e-01 O-A-F-C-R  TRUE  TRUE-Z #> 1699 2009-09-09 3.336087e-01 P-Z-X-W-E  TRUE  TRUE-Z #> 1700 2009-09-08 6.771472e-01 N-L-Q-W-Z  TRUE  TRUE-Z #> 1701 2009-09-07 9.477907e-01 M-J-W-D-T  TRUE  TRUE-Z #> 1702 2009-09-06 5.250121e-01 R-S-Q-G-O  TRUE  TRUE-Z #> 1703 2009-09-05 8.363414e-01 Z-C-Q-Y-S  TRUE  TRUE-Z #> 1704 2009-09-04 8.093662e-01 S-J-Y-R-V  TRUE  TRUE-Z #> 1705 2009-09-03 7.506141e-01 B-H-M-G-A  TRUE  TRUE-Z #> 1706 2009-09-02 4.789768e-01 Y-K-D-O-N  TRUE  TRUE-Z #> 1707 2009-09-01 6.022891e-01 Y-F-G-W-J  TRUE  TRUE-Z #> 1708 2009-08-31 2.252852e-01 I-G-T-C-V  TRUE  TRUE-Z #> 1709 2009-08-30 4.896295e-01 U-D-T-B-F  TRUE  TRUE-Z #> 1710 2009-08-29 7.512201e-01 N-Q-X-R-V  TRUE  TRUE-Z #> 1711 2009-08-28 2.083841e-01 F-O-N-L-V  TRUE  TRUE-Z #> 1712 2009-08-27 7.790966e-02 R-C-X-F-I  TRUE  TRUE-Z #> 1713 2009-08-26 4.371859e-01 C-G-H-U-X  TRUE  TRUE-Z #> 1714 2009-08-25 7.169855e-01 T-I-J-W-G  TRUE  TRUE-Z #> 1715 2009-08-24 7.224105e-01 U-B-G-O-Y  TRUE  TRUE-Z #> 1716 2009-08-23 1.519892e-01 G-C-H-Q-V  TRUE  TRUE-Z #> 1717 2009-08-22 4.872124e-01 S-U-D-A-H  TRUE  TRUE-Z #> 1718 2009-08-21 7.416761e-01 F-B-S-I-H  TRUE  TRUE-Z #> 1719 2009-08-20 5.466389e-01 X-R-S-O-B  TRUE  TRUE-Z #> 1720 2009-08-19 5.746895e-01 M-H-C-E-K  TRUE  TRUE-Z #> 1721 2009-08-18 4.100784e-02 Y-J-A-T-N  TRUE  TRUE-Z #> 1722 2009-08-17 5.081569e-01 Z-B-I-D-X  TRUE  TRUE-Z #> 1723 2009-08-16 7.528960e-01 R-I-U-E-B  TRUE  TRUE-Z #> 1724 2009-08-15 9.418294e-01 C-S-O-V-X  TRUE  TRUE-Z #> 1725 2009-08-14 5.132583e-01 S-Y-G-E-M  TRUE  TRUE-Z #> 1726 2009-08-13 8.699377e-01 N-O-D-H-Z  TRUE  TRUE-Z #> 1727 2009-08-12 1.135447e-01 U-D-V-T-S  TRUE  TRUE-Z #> 1728 2009-08-11 5.937288e-01 U-I-H-Q-M  TRUE  TRUE-Z #> 1729 2009-08-10 8.873476e-01 L-E-S-U-Y  TRUE  TRUE-Z #> 1730 2009-08-09 6.379851e-01 L-Q-Y-W-P  TRUE  TRUE-Z #> 1731 2009-08-08 1.841623e-01 J-K-U-C-V  TRUE  TRUE-Z #> 1732 2009-08-07 8.760900e-01 A-Z-R-S-N  TRUE  TRUE-Z #> 1733 2009-08-06 2.135041e-01 Z-F-A-Y-L  TRUE  TRUE-Z #> 1734 2009-08-05 6.857201e-01 C-L-G-R-I  TRUE  TRUE-Z #> 1735 2009-08-04 7.362069e-02 A-N-Q-C-Z  TRUE  TRUE-Z #> 1736 2009-08-03 2.227468e-01 A-X-P-R-Z  TRUE  TRUE-Z #> 1737 2009-08-02 6.605117e-01 W-N-I-M-X  TRUE  TRUE-Z #> 1738 2009-08-01 4.615546e-01 O-I-L-B-N  TRUE  TRUE-Z #> 1739 2009-07-31 6.185444e-01 P-U-Q-S-Y  TRUE  TRUE-Z #> 1740 2009-07-30 3.133580e-01 N-M-W-L-D  TRUE  TRUE-Z #> 1741 2009-07-29 2.063376e-01 D-V-X-C-R  TRUE  TRUE-Z #> 1742 2009-07-28 9.622526e-01 P-G-J-I-X  TRUE  TRUE-Z #> 1743 2009-07-27 7.864440e-01 Y-G-C-T-H  TRUE  TRUE-Z #> 1744 2009-07-26 1.275456e-01 R-S-V-N-X  TRUE  TRUE-Z #> 1745 2009-07-25 2.633389e-01 Y-H-O-Q-D  TRUE  TRUE-Z #> 1746 2009-07-24 4.776816e-02 Q-N-Y-Z-H  TRUE  TRUE-Z #> 1747 2009-07-23 1.846281e-01 D-Q-J-B-H  TRUE  TRUE-Z #> 1748 2009-07-22 6.831451e-01 N-X-O-Z-T  TRUE  TRUE-Z #> 1749 2009-07-21 8.185133e-01 R-Q-B-X-J  TRUE  TRUE-Z #> 1750 2009-07-20 5.307102e-01 V-S-U-E-K  TRUE  TRUE-Z #> 1751 2009-07-19 6.694135e-01 H-X-U-C-K  TRUE  TRUE-Z #> 1752 2009-07-18 4.211712e-01 W-X-E-I-P  TRUE  TRUE-Z #> 1753 2009-07-17 4.594479e-01 Z-H-J-N-L  TRUE  TRUE-Z #> 1754 2009-07-16 6.083538e-01 A-R-N-V-H  TRUE  TRUE-Z #> 1755 2009-07-15 2.169670e-01 R-W-L-O-N  TRUE  TRUE-Z #> 1756 2009-07-14 9.965534e-02 Q-Z-K-E-G  TRUE  TRUE-Z #> 1757 2009-07-13 9.172546e-01 M-X-L-W-F  TRUE  TRUE-Z #> 1758 2009-07-12 4.932190e-01 Z-R-L-K-J  TRUE  TRUE-Z #> 1759 2009-07-11 6.014168e-02 S-E-G-Y-N  TRUE  TRUE-Z #> 1760 2009-07-10 3.175504e-01 R-H-K-V-L  TRUE  TRUE-Z #> 1761 2009-07-09 9.163327e-01 A-V-Q-R-I  TRUE  TRUE-Z #> 1762 2009-07-08 4.532648e-01 Z-L-J-B-O  TRUE  TRUE-Z #> 1763 2009-07-07 3.100180e-01 W-S-R-C-V  TRUE  TRUE-Z #> 1764 2009-07-06 3.231094e-01 S-L-Q-M-R  TRUE  TRUE-Z #> 1765 2009-07-05 2.572668e-01 T-P-Y-A-K  TRUE  TRUE-Z #> 1766 2009-07-04 6.238227e-01 W-R-H-U-O  TRUE  TRUE-Z #> 1767 2009-07-03 3.683196e-01 Z-B-Q-P-J  TRUE  TRUE-Z #> 1768 2009-07-02 9.406333e-01 I-H-Q-Y-U  TRUE  TRUE-Z #> 1769 2009-07-01 4.199728e-01 W-K-U-I-S  TRUE  TRUE-Z #> 1770 2009-06-30 1.462995e-01 V-Y-N-M-W  TRUE  TRUE-Z #> 1771 2009-06-29 4.554848e-01 O-C-P-J-V  TRUE  TRUE-Z #> 1772 2009-06-28 1.430683e-01 M-S-Z-W-G  TRUE  TRUE-Z #> 1773 2009-06-27 7.961862e-01 T-M-E-X-F  TRUE  TRUE-Z #> 1774 2009-06-26 9.397490e-01 E-W-A-P-N  TRUE  TRUE-Z #> 1775 2009-06-25 5.544889e-01 Z-S-N-B-K  TRUE  TRUE-Z #> 1776 2009-06-24 6.743841e-01 G-D-X-R-V  TRUE  TRUE-Z #> 1777 2009-06-23 5.512056e-01 O-D-J-X-I  TRUE  TRUE-Z #> 1778 2009-06-22 6.184595e-01 F-V-G-U-L  TRUE  TRUE-Z #> 1779 2009-06-21 6.503202e-02 R-U-I-Z-M  TRUE  TRUE-Z #> 1780 2009-06-20 7.912314e-01 G-E-O-L-I  TRUE  TRUE-Z #> 1781 2009-06-19 9.260098e-01 K-T-B-F-X  TRUE  TRUE-Z #> 1782 2009-06-18 2.453404e-02 I-M-R-C-T  TRUE  TRUE-Z #> 1783 2009-06-17 6.198090e-01 B-Q-M-F-C  TRUE  TRUE-Z #> 1784 2009-06-16 3.897454e-01 E-J-F-W-B  TRUE  TRUE-Z #> 1785 2009-06-15 4.145801e-01 W-P-N-H-G  TRUE  TRUE-Z #> 1786 2009-06-14 8.592132e-01 E-F-G-O-J  TRUE  TRUE-Z #> 1787 2009-06-13 3.967882e-01 P-C-O-S-H  TRUE  TRUE-Z #> 1788 2009-06-12 9.245951e-01 C-L-A-N-W  TRUE  TRUE-Z #> 1789 2009-06-11 2.806718e-01 J-N-B-F-K  TRUE  TRUE-Z #> 1790 2009-06-10 4.728918e-02 S-X-A-E-Z  TRUE  TRUE-Z #> 1791 2009-06-09 2.339152e-01 G-B-F-T-P  TRUE  TRUE-Z #> 1792 2009-06-08 1.783004e-01 K-C-G-D-E  TRUE  TRUE-Z #> 1793 2009-06-07 1.708627e-02 T-I-O-G-U  TRUE  TRUE-Z #> 1794 2009-06-06 9.055107e-01 B-R-W-Q-Z  TRUE  TRUE-Z #> 1795 2009-06-05 7.620668e-01 L-C-R-G-N  TRUE  TRUE-Z #> 1796 2009-06-04 2.737380e-01 F-A-B-V-G  TRUE  TRUE-Z #> 1797 2009-06-03 9.222182e-01 R-E-Q-W-L  TRUE  TRUE-Z #> 1798 2009-06-02 2.390657e-02 L-Z-J-H-S  TRUE  TRUE-Z #> 1799 2009-06-01 8.180841e-01 E-R-L-D-N  TRUE  TRUE-Z #> 1800 2009-05-31 6.472952e-01 N-D-A-O-F  TRUE  TRUE-Z #> 1801 2009-05-30 5.376482e-01 V-O-A-C-L  TRUE  TRUE-Z #> 1802 2009-05-29 6.460054e-01 A-J-S-M-W  TRUE  TRUE-Z #> 1803 2009-05-28 4.826439e-01 K-B-V-T-O  TRUE  TRUE-Z #> 1804 2009-05-27 9.885383e-01 J-D-P-K-L  TRUE  TRUE-Z #> 1805 2009-05-26 3.192981e-01 J-Y-T-D-X  TRUE  TRUE-Z #> 1806 2009-05-25 5.615120e-01 Z-A-E-K-B  TRUE  TRUE-Z #> 1807 2009-05-24 2.150102e-01 L-D-R-Z-Q  TRUE  TRUE-Z #> 1808 2009-05-23 3.095346e-01 O-X-L-B-G  TRUE  TRUE-Z #> 1809 2009-05-22 6.519040e-01 B-P-V-O-K  TRUE  TRUE-Z #> 1810 2009-05-21 2.050685e-01 Y-J-D-T-E  TRUE  TRUE-Z #> 1811 2009-05-20 2.515345e-01 C-F-R-N-W  TRUE  TRUE-Z #> 1812 2009-05-19 4.026183e-02 U-Y-M-Q-E  TRUE  TRUE-Z #> 1813 2009-05-18 2.188413e-01 Y-O-V-X-H  TRUE  TRUE-Z #> 1814 2009-05-17 1.318065e-01 Z-K-D-V-Q  TRUE  TRUE-Z #> 1815 2009-05-16 3.617246e-01 A-Q-B-P-S  TRUE  TRUE-Z #> 1816 2009-05-15 1.631872e-01 W-S-O-Z-B  TRUE  TRUE-Z #> 1817 2009-05-14 6.929462e-01 W-D-U-F-S  TRUE  TRUE-Z #> 1818 2009-05-13 7.021989e-01 A-H-P-R-E  TRUE  TRUE-Z #> 1819 2009-05-12 9.086073e-01 W-N-V-J-K  TRUE  TRUE-Z #> 1820 2009-05-11 5.607096e-02 D-F-U-Y-S  TRUE  TRUE-Z #> 1821 2009-05-10 3.673204e-01 O-A-G-P-V  TRUE  TRUE-Z #> 1822 2009-05-09 2.395380e-01 V-J-R-E-P  TRUE  TRUE-Z #> 1823 2009-05-08 1.102208e-01 I-P-R-E-U  TRUE  TRUE-Z #> 1824 2009-05-07 9.652705e-01 F-T-C-O-G  TRUE  TRUE-Z #> 1825 2009-05-06 2.015588e-01 K-F-U-M-H  TRUE  TRUE-Z #> 1826 2009-05-05 4.484012e-01 V-N-F-X-U  TRUE  TRUE-Z #> 1827 2009-05-04 8.664611e-01 E-R-C-H-B  TRUE  TRUE-Z #> 1828 2009-05-03 2.840508e-01 D-U-C-V-X  TRUE  TRUE-Z #> 1829 2009-05-02 2.719678e-03 Q-Z-U-C-A  TRUE  TRUE-Z #> 1830 2009-05-01 6.181336e-01 B-G-I-O-T  TRUE  TRUE-Z #> 1831 2009-04-30 3.231211e-02 L-C-S-Z-M  TRUE  TRUE-Z #> 1832 2009-04-29 7.386404e-01 S-Y-A-W-P  TRUE  TRUE-Z #> 1833 2009-04-28 6.502361e-01 K-M-D-G-N  TRUE  TRUE-Z #> 1834 2009-04-27 4.347761e-01 O-I-D-R-Q  TRUE  TRUE-Z #> 1835 2009-04-26 1.304864e-01 D-P-J-Q-C  TRUE  TRUE-Z #> 1836 2009-04-25 8.484349e-01 T-N-I-B-L  TRUE  TRUE-Z #> 1837 2009-04-24 4.191671e-01 I-G-M-D-A  TRUE  TRUE-Z #> 1838 2009-04-23 1.996055e-01 O-D-C-L-Y  TRUE  TRUE-Z #> 1839 2009-04-22 1.812201e-01 B-D-Q-H-F  TRUE  TRUE-Z #> 1840 2009-04-21 6.230984e-01 H-M-W-P-X  TRUE  TRUE-Z #> 1841 2009-04-20 4.872611e-02 Z-Q-U-T-L  TRUE  TRUE-Z #> 1842 2009-04-19 5.423519e-01 K-F-I-O-R  TRUE  TRUE-Z #> 1843 2009-04-18 9.794448e-01 U-W-L-M-V  TRUE  TRUE-Z #> 1844 2009-04-17 3.451869e-01 M-A-N-D-Y  TRUE  TRUE-Z #> 1845 2009-04-16 7.610888e-02 M-E-X-I-K  TRUE  TRUE-Z #> 1846 2009-04-15 4.182614e-01 Y-S-F-L-V  TRUE  TRUE-Z #> 1847 2009-04-14 6.589995e-01 Q-Y-O-L-E  TRUE  TRUE-Z #> 1848 2009-04-13 8.152217e-02 T-K-G-A-O  TRUE  TRUE-Z #> 1849 2009-04-12 1.288958e-01 I-S-J-V-Q  TRUE  TRUE-Z #> 1850 2009-04-11 3.697630e-01 J-K-P-B-G  TRUE  TRUE-Z #> 1851 2009-04-10 6.063794e-01 D-P-F-I-T  TRUE  TRUE-Z #> 1852 2009-04-09 1.070928e-01 I-Q-B-J-M  TRUE  TRUE-Z #> 1853 2009-04-08 6.907270e-01 E-Q-H-V-W  TRUE  TRUE-Z #> 1854 2009-04-07 2.345349e-01 J-D-C-E-Q  TRUE  TRUE-Z #> 1855 2009-04-06 3.636904e-01 Q-U-V-D-J  TRUE  TRUE-Z #> 1856 2009-04-05 7.970471e-01 G-D-S-Z-T  TRUE  TRUE-Z #> 1857 2009-04-04 1.418668e-01 U-M-X-Z-C  TRUE  TRUE-Z #> 1858 2009-04-03 3.858034e-01 Q-R-Z-G-W  TRUE  TRUE-Z #> 1859 2009-04-02 3.498005e-01 R-C-L-Q-J  TRUE  TRUE-Z #> 1860 2009-04-01 6.181850e-01 E-I-O-V-W  TRUE  TRUE-Z #> 1861 2009-03-31 4.583746e-02 S-E-R-D-Q  TRUE  TRUE-Z #> 1862 2009-03-30 8.392564e-01 V-J-E-D-T  TRUE  TRUE-Z #> 1863 2009-03-29 1.297114e-01 K-A-D-N-T  TRUE  TRUE-Z #> 1864 2009-03-28 2.373429e-01 P-C-R-Z-X  TRUE  TRUE-Z #> 1865 2009-03-27 6.341067e-01 P-B-I-T-E  TRUE  TRUE-Z #> 1866 2009-03-26 2.449537e-01 H-W-Q-L-C  TRUE  TRUE-Z #> 1867 2009-03-25 3.965561e-01 C-J-K-E-G  TRUE  TRUE-Z #> 1868 2009-03-24 3.044496e-01 R-Y-D-P-Q  TRUE  TRUE-Z #> 1869 2009-03-23 1.960866e-01 R-X-U-L-K  TRUE  TRUE-Z #> 1870 2009-03-22 8.633162e-01 R-T-Q-G-Y  TRUE  TRUE-Z #> 1871 2009-03-21 2.480082e-01 X-H-J-T-D  TRUE  TRUE-Z #> 1872 2009-03-20 9.477866e-01 U-E-F-I-A  TRUE  TRUE-Z #> 1873 2009-03-19 3.264629e-01 L-K-O-C-M  TRUE  TRUE-Z #> 1874 2009-03-18 5.418800e-01 K-Y-H-M-J  TRUE  TRUE-Z #> 1875 2009-03-17 9.700884e-01 T-M-K-L-Y  TRUE  TRUE-Z #> 1876 2009-03-16 1.666746e-01 B-D-U-L-P  TRUE  TRUE-Z #> 1877 2009-03-15 7.601390e-01 D-G-N-F-H  TRUE  TRUE-Z #> 1878 2009-03-14 6.606508e-01 H-K-O-J-B  TRUE  TRUE-Z #> 1879 2009-03-13 8.178026e-01 L-A-C-X-D  TRUE  TRUE-Z #> 1880 2009-03-12 7.510753e-01 L-D-P-Q-J  TRUE  TRUE-Z #> 1881 2009-03-11 8.819931e-01 A-F-T-U-R  TRUE  TRUE-Z #> 1882 2009-03-10 5.282981e-01 M-W-H-Q-V  TRUE  TRUE-Z #> 1883 2009-03-09 4.276205e-01 T-F-J-S-G  TRUE  TRUE-Z #> 1884 2009-03-08 2.286208e-01 C-T-W-E-N  TRUE  TRUE-Z #> 1885 2009-03-07 9.063104e-01 K-U-F-A-D  TRUE  TRUE-Z #> 1886 2009-03-06 6.769083e-01 S-U-Q-T-P  TRUE  TRUE-Z #> 1887 2009-03-05 1.681937e-01 K-V-Y-B-T  TRUE  TRUE-Z #> 1888 2009-03-04 7.171204e-01 E-V-Y-O-S  TRUE  TRUE-Z #> 1889 2009-03-03 5.150993e-01 D-J-E-I-C  TRUE  TRUE-Z #> 1890 2009-03-02 2.173119e-01 Y-P-M-X-O  TRUE  TRUE-Z #> 1891 2009-03-01 8.401818e-01 Q-X-W-K-S  TRUE  TRUE-Z #> 1892 2009-02-28 5.148941e-01 G-W-O-B-C  TRUE  TRUE-Z #> 1893 2009-02-27 4.794015e-01 A-V-G-B-D  TRUE  TRUE-Z #> 1894 2009-02-26 2.230201e-01 I-L-V-D-K  TRUE  TRUE-Z #> 1895 2009-02-25 1.349184e-01 R-V-G-B-W  TRUE  TRUE-Z #> 1896 2009-02-24 9.752084e-01 Z-S-O-M-G  TRUE  TRUE-Z #> 1897 2009-02-23 8.480769e-01 B-A-C-X-W  TRUE  TRUE-Z #> 1898 2009-02-22 9.060330e-01 S-P-X-G-Q  TRUE  TRUE-Z #> 1899 2009-02-21 2.322063e-01 A-I-S-C-B  TRUE  TRUE-Z #> 1900 2009-02-20 8.321568e-01 Q-N-S-J-P  TRUE  TRUE-Z #> 1901 2009-02-19 8.960494e-01 E-T-W-J-B  TRUE  TRUE-Z #> 1902 2009-02-18 5.873093e-01 R-X-Y-T-E  TRUE  TRUE-Z #> 1903 2009-02-17 7.720980e-01 X-G-Z-V-S  TRUE  TRUE-Z #> 1904 2009-02-16 4.905220e-01 C-M-B-A-N  TRUE  TRUE-Z #> 1905 2009-02-15 8.042217e-01 N-L-W-B-I  TRUE  TRUE-Z #> 1906 2009-02-14 5.683956e-01 R-H-E-F-X  TRUE  TRUE-Z #> 1907 2009-02-13 6.501710e-01 E-U-I-Z-C  TRUE  TRUE-Z #> 1908 2009-02-12 3.619472e-02 N-F-E-Z-V  TRUE  TRUE-Z #> 1909 2009-02-11 8.206858e-01 T-S-O-J-F  TRUE  TRUE-Z #> 1910 2009-02-10 6.543640e-01 R-U-B-S-K  TRUE  TRUE-Z #> 1911 2009-02-09 8.680336e-01 R-A-S-K-G  TRUE  TRUE-Z #> 1912 2009-02-08 1.099453e-01 O-F-K-R-V  TRUE  TRUE-Z #> 1913 2009-02-07 4.051736e-02 N-X-J-A-M  TRUE  TRUE-Z #> 1914 2009-02-06 2.435000e-01 E-A-Z-T-X  TRUE  TRUE-Z #> 1915 2009-02-05 6.407777e-01 H-G-S-J-M  TRUE  TRUE-Z #> 1916 2009-02-04 6.537747e-02 H-E-A-J-U  TRUE  TRUE-Z #> 1917 2009-02-03 5.361307e-01 N-Z-M-Q-O  TRUE  TRUE-Z #> 1918 2009-02-02 1.706226e-01 B-M-R-E-S  TRUE  TRUE-Z #> 1919 2009-02-01 6.518819e-01 X-Y-Z-E-U  TRUE  TRUE-Z #> 1920 2009-01-31 1.252060e-01 W-I-H-R-J  TRUE  TRUE-Z #> 1921 2009-01-30 9.358340e-01 N-W-M-Y-Q  TRUE  TRUE-Z #> 1922 2009-01-29 1.597821e-01 I-N-O-T-P  TRUE  TRUE-Z #> 1923 2009-01-28 9.246301e-01 C-N-T-H-W  TRUE  TRUE-Z #> 1924 2009-01-27 9.837055e-01 O-C-M-H-L  TRUE  TRUE-Z #> 1925 2009-01-26 1.718460e-01 V-U-X-N-Q  TRUE  TRUE-Z #> 1926 2009-01-25 1.142669e-01 M-B-W-A-N  TRUE  TRUE-Z #> 1927 2009-01-24 9.948345e-01 H-Q-Z-B-L  TRUE  TRUE-Z #> 1928 2009-01-23 9.308827e-01 H-E-C-O-Y  TRUE  TRUE-Z #> 1929 2009-01-22 5.745774e-01 A-D-W-F-Y  TRUE  TRUE-Z #> 1930 2009-01-21 3.251257e-01 C-G-L-M-O  TRUE  TRUE-Z #> 1931 2009-01-20 9.005792e-01 A-D-U-O-C  TRUE  TRUE-Z #> 1932 2009-01-19 7.765947e-01 U-O-V-R-H  TRUE  TRUE-Z #> 1933 2009-01-18 4.156388e-01 Z-B-Y-G-L  TRUE  TRUE-Z #> 1934 2009-01-17 5.277963e-01 L-X-C-E-P  TRUE  TRUE-Z #> 1935 2009-01-16 1.801897e-01 L-P-K-M-R  TRUE  TRUE-Z #> 1936 2009-01-15 6.719752e-01 A-F-T-M-B  TRUE  TRUE-Z #> 1937 2009-01-14 1.998622e-01 E-Z-B-K-U  TRUE  TRUE-Z #> 1938 2009-01-13 1.634418e-01 D-F-E-A-Y  TRUE  TRUE-Z #> 1939 2009-01-12 2.288012e-01 J-A-R-M-O  TRUE  TRUE-Z #> 1940 2009-01-11 5.576403e-02 T-N-I-U-X  TRUE  TRUE-Z #> 1941 2009-01-10 8.621785e-02 F-Q-B-D-J  TRUE  TRUE-Z #> 1942 2009-01-09 1.153721e-01 N-J-M-R-Z  TRUE  TRUE-Z #> 1943 2009-01-08 7.349998e-02 Z-G-C-A-K  TRUE  TRUE-Z #> 1944 2009-01-07 4.363548e-01 U-G-V-X-H  TRUE  TRUE-Z #> 1945 2009-01-06 8.577730e-01 D-I-R-Z-W  TRUE  TRUE-Z #> 1946 2009-01-05 1.391287e-01 E-O-M-R-T  TRUE  TRUE-Z #> 1947 2009-01-04 6.881537e-01 L-G-S-F-M  TRUE  TRUE-Z #> 1948 2009-01-03 6.208049e-01 A-J-C-K-N  TRUE  TRUE-Z #> 1949 2009-01-02 4.723761e-01 Z-N-D-L-H  TRUE  TRUE-Z #> 1950 2009-01-01 7.245793e-01 X-Y-S-U-V  TRUE  TRUE-Z #> 1951 2008-12-31 3.289019e-01 B-Q-I-L-Y  TRUE  TRUE-Z #> 1952 2008-12-30 9.234487e-02 J-C-D-Z-E  TRUE  TRUE-Z #> 1953 2008-12-29 5.925990e-01 S-U-K-T-G  TRUE  TRUE-Z #> 1954 2008-12-28 6.247537e-01 P-W-T-X-U  TRUE  TRUE-Z #> 1955 2008-12-27 2.313214e-01 D-I-H-B-A  TRUE  TRUE-Z #> 1956 2008-12-26 1.767949e-01 Y-W-L-U-E  TRUE  TRUE-Z #> 1957 2008-12-25 9.153638e-01 F-O-A-S-V  TRUE  TRUE-Z #> 1958 2008-12-24 6.435101e-01 B-H-R-Z-J  TRUE  TRUE-Z #> 1959 2008-12-23 1.241471e-01 B-V-C-Y-L  TRUE  TRUE-Z #> 1960 2008-12-22 7.410140e-01 Z-C-J-F-H  TRUE  TRUE-Z #> 1961 2008-12-21 5.664869e-02 Z-Y-V-A-T  TRUE  TRUE-Z #> 1962 2008-12-20 9.483385e-02 R-F-D-E-Y  TRUE  TRUE-Z #> 1963 2008-12-19 8.098345e-01 J-O-L-A-M  TRUE  TRUE-Z #> 1964 2008-12-18 7.094748e-01 L-B-Z-F-P  TRUE  TRUE-Z #> 1965 2008-12-17 5.282238e-01 X-P-S-D-R  TRUE  TRUE-Z #> 1966 2008-12-16 3.983266e-01 O-E-B-R-S  TRUE  TRUE-Z #> 1967 2008-12-15 8.903167e-01 J-P-B-Q-X  TRUE  TRUE-Z #> 1968 2008-12-14 1.282983e-01 Q-E-Z-I-U  TRUE  TRUE-Z #> 1969 2008-12-13 9.913759e-02 Q-N-G-U-P  TRUE  TRUE-Z #> 1970 2008-12-12 7.336354e-01 W-O-L-I-T  TRUE  TRUE-Z #> 1971 2008-12-11 7.723936e-01 D-O-B-K-Z  TRUE  TRUE-Z #> 1972 2008-12-10 1.567529e-01 Z-E-A-V-J  TRUE  TRUE-Z #> 1973 2008-12-09 9.531533e-02 K-D-E-W-A  TRUE  TRUE-Z #> 1974 2008-12-08 9.573719e-01 Y-B-M-C-Z  TRUE  TRUE-Z #> 1975 2008-12-07 3.942823e-01 B-N-Y-J-O  TRUE  TRUE-Z #> 1976 2008-12-06 5.495256e-01 L-U-F-E-J  TRUE  TRUE-Z #> 1977 2008-12-05 8.365069e-01 B-V-X-O-F FALSE FALSE-Z #> 1978 2008-12-04 5.669291e-01 V-X-S-A-P FALSE FALSE-Z #> 1979 2008-12-03 5.633892e-01 L-B-Y-D-E FALSE FALSE-Z #> 1980 2008-12-02 8.326903e-01 E-U-D-V-T FALSE FALSE-Z #> 1981 2008-12-01 4.435740e-01 J-P-T-D-A FALSE FALSE-Z #> 1982 2008-11-30 2.004024e-01 Q-C-R-X-V FALSE FALSE-Z #> 1983 2008-11-29 4.705892e-01 I-D-L-A-O FALSE FALSE-Z #> 1984 2008-11-28 8.730780e-01 R-G-Q-V-K FALSE FALSE-Z #> 1985 2008-11-27 2.235390e-01 H-S-W-R-F FALSE FALSE-Z #> 1986 2008-11-26 9.837938e-01 C-E-F-Y-O FALSE FALSE-Z #> 1987 2008-11-25 4.861381e-01 S-P-B-Q-M FALSE FALSE-Z #> 1988 2008-11-24 3.350410e-01 B-J-Z-F-Q  TRUE  TRUE-Z #> 1989 2008-11-23 7.609194e-01 U-E-C-P-Z  TRUE  TRUE-Z #> 1990 2008-11-22 3.097541e-01 D-H-O-E-B  TRUE  TRUE-Z #> 1991 2008-11-21 9.564721e-01 G-J-L-R-S  TRUE  TRUE-Z #> 1992 2008-11-20 3.040386e-01 L-C-V-T-S  TRUE  TRUE-Z #> 1993 2008-11-19 9.024246e-02 R-V-W-K-I  TRUE  TRUE-Z #> 1994 2008-11-18 7.656723e-02 A-M-X-W-P  TRUE  TRUE-Z #> 1995 2008-11-17 8.401366e-01 W-B-K-A-C  TRUE  TRUE-Z #> 1996 2008-11-16 4.755605e-02 P-O-I-L-S  TRUE  TRUE-Z #> 1997 2008-11-15 9.885586e-01 A-K-T-B-Y  TRUE  TRUE-Z #> 1998 2008-11-14 4.147993e-01 K-B-X-R-T  TRUE  TRUE-Z #> 1999 2008-11-13 7.426229e-01 S-P-T-Q-W  TRUE  TRUE-Z #> 2000 2008-11-12 8.947266e-02 D-Z-U-W-B  TRUE  TRUE-Z #> 2001 2008-11-11 6.447914e-03 L-S-E-H-Q  TRUE  TRUE-Z #> 2002 2008-11-10 4.182994e-01 G-F-W-U-N  TRUE  TRUE-Z #> 2003 2008-11-09 4.275366e-01 J-T-E-Z-F  TRUE  TRUE-Z #> 2004 2008-11-08 1.294895e-02 V-X-N-T-B  TRUE  TRUE-Z #> 2005 2008-11-07 4.120267e-01 T-K-D-N-R  TRUE  TRUE-Z #> 2006 2008-11-06 2.500273e-01 L-K-Q-I-T  TRUE  TRUE-Z #> 2007 2008-11-05 2.140714e-01 N-E-X-D-Q  TRUE  TRUE-Z #> 2008 2008-11-04 1.603478e-01 Y-B-S-X-A  TRUE  TRUE-Z #> 2009 2008-11-03 7.633435e-01 S-D-W-J-Q  TRUE  TRUE-Z #> 2010 2008-11-02 9.106400e-01 U-H-J-W-I  TRUE  TRUE-Z #> 2011 2008-11-01 6.373717e-01 X-Z-A-J-B  TRUE  TRUE-Z #> 2012 2008-10-31 5.143851e-01 E-S-D-O-H  TRUE  TRUE-Z #> 2013 2008-10-30 8.541204e-01 G-O-Y-N-Q  TRUE  TRUE-Z #> 2014 2008-10-29 8.398545e-01 U-F-I-B-A  TRUE  TRUE-Z #> 2015 2008-10-28 8.439492e-01 M-H-W-C-O  TRUE  TRUE-Z #> 2016 2008-10-27 1.531047e-01 F-Z-C-B-M  TRUE  TRUE-Z #> 2017 2008-10-26 6.287256e-01 S-C-A-O-V  TRUE  TRUE-Z #> 2018 2008-10-25 1.095340e-02 G-R-H-Q-U  TRUE  TRUE-Z #> 2019 2008-10-24 4.244415e-01 V-N-J-Q-P  TRUE  TRUE-Z #> 2020 2008-10-23 7.117491e-01 V-P-Y-M-U  TRUE  TRUE-Z #> 2021 2008-10-22 5.150884e-02 R-J-O-Q-V  TRUE  TRUE-Z #> 2022 2008-10-21 2.093196e-01 G-C-U-E-I  TRUE  TRUE-Z #> 2023 2008-10-20 1.560335e-01 C-A-T-L-R  TRUE  TRUE-Z #> 2024 2008-10-19 7.010178e-02 O-N-S-G-H  TRUE  TRUE-Z #> 2025 2008-10-18 9.772322e-01 P-Z-K-U-V  TRUE  TRUE-Z #> 2026 2008-10-17 5.890501e-01 R-Z-H-D-N  TRUE  TRUE-Z #> 2027 2008-10-16 3.622866e-02 G-E-X-C-L  TRUE  TRUE-Z #> 2028 2008-10-15 9.842663e-01 Q-K-E-P-S  TRUE  TRUE-Z #> 2029 2008-10-14 5.985178e-01 N-K-I-H-A  TRUE  TRUE-Z #> 2030 2008-10-13 9.885502e-01 A-N-T-R-M FALSE FALSE-Z #> 2031 2008-10-12 3.167636e-01 T-R-G-E-F  TRUE  TRUE-Z #> 2032 2008-10-11 8.099170e-01 I-B-T-S-D  TRUE  TRUE-Z #> 2033 2008-10-10 3.107743e-01 G-R-J-L-W  TRUE  TRUE-Z #> 2034 2008-10-09 7.935364e-01 I-P-Y-K-L  TRUE  TRUE-Z #> 2035 2008-10-08 1.974962e-01 S-J-M-F-W  TRUE  TRUE-Z #> 2036 2008-10-07 8.247456e-01 U-H-D-P-T  TRUE  TRUE-Z #> 2037 2008-10-06 6.168240e-01 A-D-H-M-B  TRUE  TRUE-Z #> 2038 2008-10-05 3.114069e-01 S-T-Z-P-U  TRUE  TRUE-Z #> 2039 2008-10-04 6.898755e-01 N-I-G-R-S  TRUE  TRUE-Z #> 2040 2008-10-03 5.374547e-03 U-V-M-Q-S  TRUE  TRUE-Z #> 2041 2008-10-02 3.677609e-01 E-F-S-J-R  TRUE  TRUE-Z #> 2042 2008-10-01 6.019337e-01 F-H-O-S-Z  TRUE  TRUE-Z #> 2043 2008-09-30 6.131039e-02 O-G-R-E-Z  TRUE  TRUE-Z #> 2044 2008-09-29 5.287872e-01 B-M-A-N-T  TRUE  TRUE-Z #> 2045 2008-09-28 1.050562e-01 Z-H-D-L-Q  TRUE  TRUE-Z #> 2046 2008-09-27 7.272791e-01 Q-R-N-J-K  TRUE  TRUE-Z #> 2047 2008-09-26 8.250341e-01 C-X-H-Y-L  TRUE  TRUE-Z #> 2048 2008-09-25 7.527396e-01 I-X-W-G-E  TRUE  TRUE-Z #> 2049 2008-09-24 7.657879e-01 T-B-M-Q-S  TRUE  TRUE-Z #> 2050 2008-09-23 8.195013e-01 A-H-Z-V-B  TRUE  TRUE-Z #> 2051 2008-09-22 5.350249e-01 R-Z-M-X-G  TRUE  TRUE-Z #> 2052 2008-09-21 7.695357e-01 M-U-K-H-E  TRUE  TRUE-Z #> 2053 2008-09-20 3.978801e-01 G-B-L-A-W  TRUE  TRUE-Z #> 2054 2008-09-19 5.883776e-01 R-X-T-S-F  TRUE  TRUE-Z #> 2055 2008-09-18 4.793695e-01 D-W-Q-M-S  TRUE  TRUE-Z #> 2056 2008-09-17 7.225998e-01 P-B-F-Q-K  TRUE  TRUE-Z #> 2057 2008-09-16 6.055461e-01 R-H-I-J-V  TRUE  TRUE-Z #> 2058 2008-09-15 2.421840e-01 I-F-J-V-C FALSE FALSE-Z #> 2059 2008-09-14 6.676361e-03 U-T-K-R-F FALSE FALSE-Z #> 2060 2008-09-13 9.906491e-01 P-T-L-U-R FALSE FALSE-Z #> 2061 2008-09-12 6.874652e-01 I-L-P-N-F  TRUE  TRUE-Z #> 2062 2008-09-11 9.892703e-01 D-H-K-X-J  TRUE  TRUE-Z #> 2063 2008-09-10 3.471236e-01 A-Q-B-M-S  TRUE  TRUE-Z #> 2064 2008-09-09 4.805380e-01 B-V-L-Q-F  TRUE  TRUE-Z #> 2065 2008-09-08 6.617933e-01 C-H-K-V-A  TRUE  TRUE-Z #> 2066 2008-09-07 3.585241e-01 T-Y-C-P-U  TRUE  TRUE-Z #> 2067 2008-09-06 5.197121e-02 B-U-P-Q-H  TRUE  TRUE-Z #> 2068 2008-09-05 5.324304e-01 M-H-Q-E-I  TRUE  TRUE-Z #> 2069 2008-09-04 7.876534e-01 E-Z-S-U-K  TRUE  TRUE-Z #> 2070 2008-09-03 8.786605e-01 H-W-Q-R-M  TRUE  TRUE-Z #> 2071 2008-09-02 8.784812e-01 C-I-B-J-K  TRUE  TRUE-Z #> 2072 2008-09-01 2.003025e-01 E-I-O-S-H FALSE FALSE-Z #> 2073 2008-08-31 1.603535e-01 Y-I-E-X-L  TRUE  TRUE-Z #> 2074 2008-08-30 2.233115e-01 S-Q-O-L-N  TRUE  TRUE-Z #> 2075 2008-08-29 9.811034e-01 J-H-L-T-G  TRUE  TRUE-Z #> 2076 2008-08-28 5.061146e-01 H-M-Q-J-I  TRUE  TRUE-Z #> 2077 2008-08-27 5.750698e-01 V-I-Z-J-Q  TRUE  TRUE-Z #> 2078 2008-08-26 5.945874e-01 B-G-R-J-P  TRUE  TRUE-Z #> 2079 2008-08-25 5.515020e-01 Z-I-W-B-O  TRUE  TRUE-Z #> 2080 2008-08-24 7.886945e-01 R-V-B-G-N  TRUE  TRUE-Z #> 2081 2008-08-23 3.215567e-01 B-I-N-J-R  TRUE  TRUE-Z #> 2082 2008-08-22 2.440724e-01 F-T-W-M-L  TRUE  TRUE-Z #> 2083 2008-08-21 7.853369e-01 F-S-K-I-J  TRUE  TRUE-Z #> 2084 2008-08-20 9.354080e-02 S-N-V-G-Z  TRUE  TRUE-Z #> 2085 2008-08-19 5.874611e-01 X-I-G-L-H  TRUE  TRUE-Z #> 2086 2008-08-18 2.195064e-01 K-B-X-V-A  TRUE  TRUE-Z #> 2087 2008-08-17 5.522673e-01 F-M-A-H-N  TRUE  TRUE-Z #> 2088 2008-08-16 1.850300e-01 Y-Z-I-W-A  TRUE  TRUE-Z #> 2089 2008-08-15 6.155422e-01 P-M-R-C-Z  TRUE  TRUE-Z    # erase empty columns from dataset   wb_to_df(wb1, skipEmptyCols = TRUE) #>     Var1 Var2  Var3  Var4       Var5         Var6    Var7 #> 2   TRUE    1     1     a 2015-02-07 3209324 This #DIV/0! #> 3   TRUE   NA #NUM!     b 2015-02-06         <NA>    <NA> #> 4   TRUE    2  1.34     c 2015-02-05         <NA>   #NUM! #> 5  FALSE    2  <NA> #NUM!       <NA>         <NA>    <NA> #> 6  FALSE    3  1.56     e       <NA>         <NA>    <NA> #> 7  FALSE    1   1.7     f 2015-02-02         <NA>    <NA> #> 8     NA   NA  <NA>  <NA> 2015-02-01         <NA>    <NA> #> 9  FALSE    2    23     h 2015-01-31         <NA>    <NA> #> 10 FALSE    3  67.3     i 2015-01-30         <NA>    <NA> #> 11    NA    1   123  <NA> 2015-01-29         <NA>    <NA>    # convert first row to rownames   wb_to_df(wb1, sheet = 3, dims = \"C6:G9\", rowNames = TRUE) #>                value      word  bool  wordZ2 #> 2014-04-28 0.8390764 N-U-B-R-A FALSE FALSE-Z #> 2014-04-27 0.8863800 N-Z-P-S-Y  TRUE  TRUE-Z #> 2014-04-26 0.5741314 C-G-D-X-H  TRUE  TRUE-Z    # define type of the data.frame   wb_to_df(wb1, cols = c(1, 4), types = c(\"Var1\" = 0, \"Var3\" = 1)) #>     Var1   Var3 #> 2   TRUE   1.00 #> 3   TRUE    NaN #> 4   TRUE   1.34 #> 5  FALSE     NA #> 6  FALSE   1.56 #> 7  FALSE   1.70 #> 8   <NA>     NA #> 9  FALSE  23.00 #> 10 FALSE  67.30 #> 11  <NA> 123.00    # start in row 5   wb_to_df(wb1, startRow = 5, colNames = FALSE) #>        A  B  C      D     E          F  G  H #> 5  FALSE  2 NA     NA #NUM!       <NA> NA NA #> 6  FALSE  3 NA   1.56     e       <NA> NA NA #> 7  FALSE  1 NA   1.70     f 2015-02-02 NA NA #> 8     NA NA NA     NA  <NA> 2015-02-01 NA NA #> 9  FALSE  2 NA  23.00     h 2015-01-31 NA NA #> 10 FALSE  3 NA  67.30     i 2015-01-30 NA NA #> 11    NA  1 NA 123.00  <NA> 2015-01-29 NA NA    # na string   wb_to_df(wb1, na.strings = \"\") #>     Var1 Var2 NA  Var3  Var4       Var5         Var6    Var7 #> 2   TRUE    1 NA     1     a 2015-02-07 3209324 This #DIV/0! #> 3   TRUE   NA NA #NUM!     b 2015-02-06         <NA>    #N/A #> 4   TRUE    2 NA  1.34     c 2015-02-05         <NA>   #NUM! #> 5  FALSE    2 NA  <NA> #NUM!       <NA>         <NA>    <NA> #> 6  FALSE    3 NA  1.56     e       <NA>         <NA>    <NA> #> 7  FALSE    1 NA   1.7     f 2015-02-02         <NA>    <NA> #> 8     NA   NA NA  <NA>  <NA> 2015-02-01         <NA>    <NA> #> 9  FALSE    2 NA    23     h 2015-01-31         <NA>    <NA> #> 10 FALSE    3 NA  67.3     i 2015-01-30         <NA>    <NA> #> 11    NA    1 NA   123  <NA> 2015-01-29         <NA>    <NA>    # read_xlsx(wb1)    ###########################################################################   # inlinestr   xlsxFile <- system.file(\"extdata\", \"inline_str.xlsx\", package = \"openxlsx2\")   wb2 <- wb_load(xlsxFile)    # read dataset with inlinestr   wb_to_df(wb2) #>    PairIndex Drug1 Drug2 Conc1 Conc2   Response ConcUnit #> 2          1   abc   def 10000 10000 -1.7960711       nM #> 3          1   abc   def 10000  3000  1.0102900       nM #> 4          1   abc   def 10000  1000  0.4490178       nM #> 5          1   abc   def 10000   300  0.0000000       nM #> 6          1   abc   def 10000   100  0.8980355       nM #> 7          1   abc   def 10000    30  0.1122544       nM #> 8          1   abc   def 10000    10  3.1431244       nM #> 9          1   abc   def 10000     0  1.4593078       nM #> 10         2   abc   def 10000     0  1.6838167       nM #> 11         2   abc   def 10000    10 -0.7857811       nM   # read_xlsx(wb2)    ###########################################################################   # named_region // namedRegion   xlsxFile <- system.file(\"extdata\", \"namedRegions3.xlsx\", package = \"openxlsx2\")   wb3 <- wb_load(xlsxFile)    # read dataset with named_region (returns global first)   wb_to_df(wb3, named_region = \"MyRange\", colNames = FALSE) #>      A    B #> 1 S2A1 S2B1    # read named_region from sheet   wb_to_df(wb3, named_region = \"MyRange\", sheet = 4, colNames = FALSE) #>      A    B #> 1 S3A1 S3B1"},{"path":"/dev/reference/wb_update_table.html","id":null,"dir":"Reference","previous_headings":"","what":"update a data_table — wb_update_table","title":"update a data_table — wb_update_table","text":"update data_table","code":""},{"path":"/dev/reference/wb_update_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"update a data_table — wb_update_table","text":"","code":"wb_update_table(wb, sheet = current_sheet(), dims = \"A1\", tabname)"},{"path":"/dev/reference/wb_update_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"update a data_table — wb_update_table","text":"wb workbook sheet worksheet dims cell used start tabname tablename","code":""},{"path":"/dev/reference/wb_update_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"update a data_table — wb_update_table","text":"aware function alter filter. Excluding adding rows make rows appear hide .","code":""},{"path":"/dev/reference/wb_update_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"update a data_table — wb_update_table","text":"","code":"wb <- wb_workbook()$add_worksheet()$add_data_table(x = mtcars) wb$update_table(tabname = \"Table1\", dims = \"A1:J4\")"},{"path":"/dev/reference/wb_workbook.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new Workbook object — wb_workbook","title":"Create a new Workbook object — wb_workbook","text":"Create new Workbook object","code":""},{"path":"/dev/reference/wb_workbook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new Workbook object — wb_workbook","text":"","code":"wb_workbook(   creator = NULL,   title = NULL,   subject = NULL,   category = NULL,   datetimeCreated = Sys.time(),   theme = NULL )"},{"path":"/dev/reference/wb_workbook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new Workbook object — wb_workbook","text":"creator Creator workbook (name). Defaults login username title Workbook properties title subject Workbook properties subject category Workbook properties category datetimeCreated time workbook created theme Optional theme identified string number","code":""},{"path":"/dev/reference/wb_workbook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new Workbook object — wb_workbook","text":"wbWorkbook object","code":""},{"path":"/dev/reference/wb_workbook.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a new Workbook object — wb_workbook","text":"\"Atlas\", \"Badge\", \"Berlin\", \"Celestial\", \"Crop\", \"Depth\", \"Droplet\", \"Facet\", \"Feathered\", \"Gallery\", \"Headlines\", \"Integral\", \"Ion\", \"Ion Boardroom\", \"Madison\", \"Main Event\", \"Mesh\", \"Office Theme\", \"Old Office Theme\", \"Organic\", \"Parallax\", \"Parcel\", \"Retrospect\", \"Savon\", \"Slice\", \"Vapor Trail\", \"View\", \"Wisp\", \"Wood Type\"","code":""},{"path":[]},{"path":"/dev/reference/wb_workbook.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new Workbook object — wb_workbook","text":"","code":"## Create a new workbook wb <- wb_workbook()  ## Set Workbook properties wb <- wb_workbook(   creator  = \"Me\",   title    = \"Expense Report\",   subject  = \"Expense Report - 2022 Q1\",   category = \"sales\" )"},{"path":"/dev/reference/workbook_grouping.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Rows and Columns — workbook_grouping","title":"Group Rows and Columns — workbook_grouping","text":"Group selection rows cols","code":""},{"path":"/dev/reference/workbook_grouping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Rows and Columns — workbook_grouping","text":"","code":"wb_group_cols(   wb,   sheet = current_sheet(),   cols,   collapsed = FALSE,   levels = NULL )  wb_ungroup_cols(wb, sheet = current_sheet(), cols)  wb_group_rows(   wb,   sheet = current_sheet(),   rows,   collapsed = FALSE,   levels = NULL )  wb_ungroup_rows(wb, sheet = current_sheet(), rows)"},{"path":"/dev/reference/workbook_grouping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Rows and Columns — workbook_grouping","text":"wb wbWorkbook object sheet name index worksheet collapsed TRUE grouped columns collapsed levels levels rows, cols Indices rows columns group","code":""},{"path":"/dev/reference/workbook_grouping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Group Rows and Columns — workbook_grouping","text":"row previously hidden, now shown","code":""},{"path":[]},{"path":"/dev/reference/workbook_grouping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group Rows and Columns — workbook_grouping","text":"","code":"# create matrix t1 <- AirPassengers t2 <- do.call(cbind, split(t1, cycle(t1))) dimnames(t2) <- dimnames(.preformat.ts(t1))  wb <- wb_workbook() wb$add_worksheet(\"AirPass\") wb$add_data(\"AirPass\", t2, rowNames = TRUE)  # groups will always end on/show the last row. in the example 1950, 1955, and 1960 wb <- wb_group_rows(wb, \"AirPass\", 2:3, collapsed = TRUE) # group years < 1950 wb <- wb_group_rows(wb, \"AirPass\", 4:8, collapsed = TRUE) # group years 1951-1955 wb <- wb_group_rows(wb, \"AirPass\", 9:13)                  # group years 1956-1960  wb$createCols(\"AirPass\", 13)  wb <- wb_group_cols(wb, \"AirPass\", 2:4, collapsed = TRUE) wb <- wb_group_cols(wb, \"AirPass\", 5:7, collapsed = TRUE) wb <- wb_group_cols(wb, \"AirPass\", 8:10, collapsed = TRUE) wb <- wb_group_cols(wb, \"AirPass\", 11:13)  ### create grouping levels grp_rows <- list(   \"1\" = seq(2, 3),   \"2\" = seq(4, 8),   \"3\" = seq(9, 13) )  grp_cols <- list(   \"1\" = seq(2, 4),   \"2\" = seq(5, 7),   \"3\" = seq(8, 10),   \"4\" = seq(11, 13) )  wb <- wb_workbook() wb$add_worksheet(\"AirPass\") wb$add_data(\"AirPass\", t2, rowNames = TRUE)  wb$createCols(\"AirPass\", 13)  wb$group_cols(\"AirPass\", cols = grp_cols) wb$group_rows(\"AirPass\", rows = grp_rows)"},{"path":"/dev/reference/write_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Add data to a worksheet — wb_add_data","title":"Add data to a worksheet — wb_add_data","text":"Add data worksheet optional styling. Write object worksheet optional styling.","code":""},{"path":"/dev/reference/write_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add data to a worksheet — wb_add_data","text":"","code":"wb_add_data(   wb,   sheet = current_sheet(),   x,   startCol = 1,   startRow = 1,   dims = rowcol_to_dims(startRow, startCol),   array = FALSE,   colNames = TRUE,   rowNames = FALSE,   withFilter = FALSE,   name = NULL,   sep = \", \",   applyCellStyle = TRUE,   removeCellStyle = FALSE,   na.strings = na_strings(),   inline_strings = TRUE )  write_data(   wb,   sheet,   x,   startCol = 1,   startRow = 1,   dims = rowcol_to_dims(startRow, startCol),   array = FALSE,   colNames = TRUE,   rowNames = FALSE,   withFilter = FALSE,   sep = \", \",   name = NULL,   applyCellStyle = TRUE,   removeCellStyle = FALSE,   na.strings = na_strings(),   inline_strings = TRUE )"},{"path":"/dev/reference/write_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add data to a worksheet — wb_add_data","text":"wb Workbook object containing worksheet. sheet worksheet write . Can worksheet index name. x Object written. classes supported look examples. startCol vector specifying starting column write . startRow vector specifying starting row write . dims Spreadsheet dimensions determine startCol startRow: \"A1\", \"A1:B2\", \":B\" array bool function written type array colNames TRUE, column names x written. rowNames TRUE, data.frame row names x written. withFilter TRUE, add filters column name row. NOTE can one filter per worksheet. name NULL, named region defined. sep applies list columns. separator used collapse list columns character vector e.g. sapply(x$list_column, paste, collapse = sep). applyCellStyle apply styles writing sheet removeCellStyle writing existing cells, cell style removed? na.strings Value used replacing NA values x. Default na_strings() uses special #N/value within workbook. inline_strings write characters inline strings","code":""},{"path":"/dev/reference/write_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add data to a worksheet — wb_add_data","text":"clone `wb`` invisible(0)","code":""},{"path":"/dev/reference/write_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add data to a worksheet — wb_add_data","text":"Formulae written using write_formula Workbook object get picked read_xlsx(). formula written left Excel evaluate formula file opened Excel. string \"_openxlsx_NA\" reserved openxlsx2. data frame contains string, output broken. Many base classes covered, though far third-party classes. data unknown class written, handled .character(). Formulae written using write_formula Workbook object get picked read_xlsx(). formula written left Excel evaluate formula file opened Excel. string \"_openxlsx_NA\" reserved openxlsx2. data frame contains string, output broken.","code":""},{"path":[]},{"path":"/dev/reference/write_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add data to a worksheet — wb_add_data","text":"","code":"## See formatting vignette for further examples.  ## Options for default styling (These are the defaults) options(\"openxlsx2.dateFormat\" = \"mm/dd/yyyy\") options(\"openxlsx2.datetimeFormat\" = \"yyyy-mm-dd hh:mm:ss\") options(\"openxlsx2.numFmt\" = NULL)  ##################################################################################### ## Create Workbook object and add worksheets wb <- wb_workbook()  ## Add worksheets wb$add_worksheet(\"Cars\") wb$add_worksheet(\"Formula\")  x <- mtcars[1:6, ] wb$add_data(\"Cars\", x, startCol = 2, startRow = 3, rowNames = TRUE)  ##################################################################################### ## Hyperlinks ## - vectors/columns with class 'hyperlink' are written as hyperlinks'  v <- rep(\"https://CRAN.R-project.org/\", 4) names(v) <- paste0(\"Hyperlink\", 1:4) # Optional: names will be used as display text class(v) <- \"hyperlink\" wb$add_data(\"Cars\", x = v, dims = c(\"B32\"))  ##################################################################################### ## Formulas ## - vectors/columns with class 'formula' are written as formulas'  df <- data.frame(   x = 1:3, y = 1:3,   z = paste(paste0(\"A\", 1:3 + 1L), paste0(\"B\", 1:3 + 1L), sep = \"+\"),   stringsAsFactors = FALSE )  class(df$z) <- c(class(df$z), \"formula\")  wb$add_data(sheet = \"Formula\", x = df)  ########################################################################### # update cell range and add mtcars xlsxFile <- system.file(\"extdata\", \"inline_str.xlsx\", package = \"openxlsx2\") wb2 <- wb_load(xlsxFile)  # read dataset with inlinestr wb_to_df(wb2) #>    PairIndex Drug1 Drug2 Conc1 Conc2   Response ConcUnit #> 2          1   abc   def 10000 10000 -1.7960711       nM #> 3          1   abc   def 10000  3000  1.0102900       nM #> 4          1   abc   def 10000  1000  0.4490178       nM #> 5          1   abc   def 10000   300  0.0000000       nM #> 6          1   abc   def 10000   100  0.8980355       nM #> 7          1   abc   def 10000    30  0.1122544       nM #> 8          1   abc   def 10000    10  3.1431244       nM #> 9          1   abc   def 10000     0  1.4593078       nM #> 10         2   abc   def 10000     0  1.6838167       nM #> 11         2   abc   def 10000    10 -0.7857811       nM # read_xlsx(wb2) write_data(wb2, 1, mtcars, startCol = 4, startRow = 4) #> A Workbook object. #>   #> Worksheets: #>  Sheets: Synergy  #>  Write order: 1 wb_to_df(wb2) #>    PairIndex Drug1 Drug2 Conc1 Conc2           Response ConcUnit   NA    NA #> 2          1   abc   def 10000 10000 -1.796071094480823       nM <NA>  <NA> #> 3          1   abc   def 10000  3000  1.010289990645463       nM <NA>  <NA> #> 4          1   abc   def   mpg   cyl               disp       hp drat    wt #> 5          1   abc   def    21     6                160      110  3.9  2.62 #> 6          1   abc   def    21     6                160      110  3.9 2.875 #> 7          1   abc   def  22.8     4                108       93 3.85  2.32 #> 8          1   abc   def  21.4     6                258      110 3.08 3.215 #> 9          1   abc   def  18.7     8                360      175 3.15  3.44 #> 10         2   abc   def  18.1     6                225      105 2.76  3.46 #> 11         2   abc   def  14.3     8                360      245 3.21  3.57 #> 12        NA  <NA>  <NA>  24.4     4              146.7       62 3.69  3.19 #> 13        NA  <NA>  <NA>  22.8     4              140.8       95 3.92  3.15 #> 14        NA  <NA>  <NA>  19.2     6              167.6      123 3.92  3.44 #> 15        NA  <NA>  <NA>  17.8     6              167.6      123 3.92  3.44 #> 16        NA  <NA>  <NA>  16.4     8              275.8      180 3.07  4.07 #> 17        NA  <NA>  <NA>  17.3     8              275.8      180 3.07  3.73 #> 18        NA  <NA>  <NA>  15.2     8              275.8      180 3.07  3.78 #> 19        NA  <NA>  <NA>  10.4     8                472      205 2.93  5.25 #> 20        NA  <NA>  <NA>  10.4     8                460      215    3 5.424 #> 21        NA  <NA>  <NA>  14.7     8                440      230 3.23 5.345 #> 22        NA  <NA>  <NA>  32.4     4               78.7       66 4.08   2.2 #> 23        NA  <NA>  <NA>  30.4     4               75.7       52 4.93 1.615 #> 24        NA  <NA>  <NA>  33.9     4               71.1       65 4.22 1.835 #> 25        NA  <NA>  <NA>  21.5     4              120.1       97  3.7 2.465 #> 26        NA  <NA>  <NA>  15.5     8                318      150 2.76  3.52 #> 27        NA  <NA>  <NA>  15.2     8                304      150 3.15 3.435 #> 28        NA  <NA>  <NA>  13.3     8                350      245 3.73  3.84 #> 29        NA  <NA>  <NA>  19.2     8                400      175 3.08 3.845 #> 30        NA  <NA>  <NA>  27.3     4                 79       66 4.08 1.935 #> 31        NA  <NA>  <NA>    26     4              120.3       91 4.43  2.14 #> 32        NA  <NA>  <NA>  30.4     4               95.1      113 3.77 1.513 #> 33        NA  <NA>  <NA>  15.8     8                351      264 4.22  3.17 #> 34        NA  <NA>  <NA>  19.7     6                145      175 3.62  2.77 #> 35        NA  <NA>  <NA>    15     8                301      335 3.54  3.57 #> 36        NA  <NA>  <NA>  21.4     4                121      109 4.11  2.78 #>       NA   NA   NA   NA   NA #> 2   <NA> <NA> <NA> <NA> <NA> #> 3   <NA> <NA> <NA> <NA> <NA> #> 4   qsec   vs   am gear carb #> 5  16.46    0    1    4    4 #> 6  17.02    0    1    4    4 #> 7  18.61    1    1    4    1 #> 8  19.44    1    0    3    1 #> 9  17.02    0    0    3    2 #> 10 20.22    1    0    3    1 #> 11 15.84    0    0    3    4 #> 12    20    1    0    4    2 #> 13  22.9    1    0    4    2 #> 14  18.3    1    0    4    4 #> 15  18.9    1    0    4    4 #> 16  17.4    0    0    3    3 #> 17  17.6    0    0    3    3 #> 18    18    0    0    3    3 #> 19 17.98    0    0    3    4 #> 20 17.82    0    0    3    4 #> 21 17.42    0    0    3    4 #> 22 19.47    1    1    4    1 #> 23 18.52    1    1    4    2 #> 24  19.9    1    1    4    1 #> 25 20.01    1    0    3    1 #> 26 16.87    0    0    3    2 #> 27  17.3    0    0    3    2 #> 28 15.41    0    0    3    4 #> 29 17.05    0    0    3    2 #> 30  18.9    1    1    4    1 #> 31  16.7    0    1    5    2 #> 32  16.9    1    1    5    2 #> 33  14.5    0    1    5    4 #> 34  15.5    0    1    5    6 #> 35  14.6    0    1    5    8 #> 36  18.6    1    1    4    2"},{"path":"/dev/reference/write_datatable.html","id":null,"dir":"Reference","previous_headings":"","what":"Write to a worksheet as an Excel table — write_datatable","title":"Write to a worksheet as an Excel table — write_datatable","text":"Write worksheet format Excel table","code":""},{"path":"/dev/reference/write_datatable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write to a worksheet as an Excel table — write_datatable","text":"","code":"write_datatable(   wb,   sheet,   x,   startCol = 1,   startRow = 1,   dims = rowcol_to_dims(startRow, startCol),   colNames = TRUE,   rowNames = FALSE,   tableStyle = \"TableStyleLight9\",   tableName = NULL,   withFilter = TRUE,   sep = \", \",   firstColumn = FALSE,   lastColumn = FALSE,   bandedRows = TRUE,   bandedCols = FALSE,   applyCellStyle = TRUE,   removeCellStyle = FALSE,   na.strings = na_strings(),   inline_strings = TRUE )"},{"path":"/dev/reference/write_datatable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write to a worksheet as an Excel table — write_datatable","text":"wb Workbook object containing worksheet. sheet worksheet write . Can worksheet index name. x data frame. startCol vector specifying starting column write df startRow vector specifying starting row write df dims Spreadsheet dimensions determine startCol startRow: \"A1\", \"A1:B2\", \":B\" colNames TRUE, column names x written. rowNames TRUE, row names x written. tableStyle excel table style name \"none\" (see \"formatting\" vignette). tableName name table workbook. table name must unique. withFilter TRUE, columns filters first row. sep applies list columns. separator used collapse list columns character vector e.g. sapply(x$list_column, paste, collapse = sep). options correspond Excel table options: firstColumn logical. TRUE, first column bold lastColumn logical. TRUE, last column bold bandedRows logical. TRUE, rows color banded bandedCols logical. TRUE, columns color banded applyCellStyle apply styles writing sheet removeCellStyle writing existing cells, cell style removed? na.strings Value used replacing NA values x. Default na_strings() uses special #N/value within workbook. inline_strings write characters inline strings","code":""},{"path":"/dev/reference/write_datatable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write to a worksheet as an Excel table — write_datatable","text":"columns x class Date/POSIXt, currency, accounting, hyperlink, percentage automatically styled dates, currency, accounting, hyperlinks, percentages respectively. string \"_openxlsx_NA\" reserved openxlsx2. data frame contains string, output broken.","code":""},{"path":[]},{"path":"/dev/reference/write_datatable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write to a worksheet as an Excel table — write_datatable","text":"","code":"## see package vignettes for further examples.  ##################################################################################### ## Create Workbook object and add worksheets wb <- wb_workbook() wb$add_worksheet(\"S1\") wb$add_worksheet(\"S2\") wb$add_worksheet(\"S3\")  ##################################################################################### ## -- write data.frame as an Excel table with column filters ## -- default table style is \"TableStyleMedium2\"  wb$add_data_table(\"S1\", x = iris)  wb$add_data_table(\"S2\",   x = mtcars, dims = c(\"B3\"), rowNames = TRUE,   tableStyle = \"TableStyleLight9\" )  df <- data.frame(   \"Date\" = Sys.Date() - 0:19,   \"T\" = TRUE, \"F\" = FALSE,   \"Time\" = Sys.time() - 0:19 * 60 * 60,   \"Cash\" = paste(\"$\", 1:20), \"Cash2\" = 31:50,   \"hLink\" = \"https://CRAN.R-project.org/\",   \"Percentage\" = seq(0, 1, length.out = 20),   \"TinyNumbers\" = runif(20) / 1E9, stringsAsFactors = FALSE )  ## openxlsx will apply default Excel styling for these classes class(df$Cash) <- c(class(df$Cash), \"currency\") class(df$Cash2) <- c(class(df$Cash2), \"accounting\") class(df$hLink) <- \"hyperlink\" class(df$Percentage) <- c(class(df$Percentage), \"percentage\") class(df$TinyNumbers) <- c(class(df$TinyNumbers), \"scientific\")  wb$add_data_table(\"S3\", x = df, startRow = 4, rowNames = TRUE, tableStyle = \"TableStyleMedium9\")  ##################################################################################### ## Additional Header Styling and remove column filters  write_datatable(wb,   sheet = 1,   x = iris,   startCol = 7,   withFilter = FALSE,   firstColumn = TRUE,   lastColumn  = TRUE,   bandedRows = TRUE,   bandedCols = TRUE ) #> A Workbook object. #>   #> Worksheets: #>  Sheets: S1 S2 S3  #>  Write order: 1, 2, 3  ##################################################################################### ## Pre-defined table styles gallery  wb <- wb_workbook(paste0(\"tableStylesGallery.xlsx\")) wb$add_worksheet(\"Style Samples\") for (i in 1:21) {   style <- paste0(\"TableStyleLight\", i)   write_datatable(wb,     x = data.frame(style), sheet = 1,     tableStyle = style, startRow = 1, startCol = i * 3 - 2   ) }  for (i in 1:28) {   style <- paste0(\"TableStyleMedium\", i)   write_datatable(wb,     x = data.frame(style), sheet = 1,     tableStyle = style, startRow = 4, startCol = i * 3 - 2   ) }  for (i in 1:11) {   style <- paste0(\"TableStyleDark\", i)   write_datatable(wb,     x = data.frame(style), sheet = 1,     tableStyle = style, startRow = 7, startCol = i * 3 - 2   ) }"},{"path":"/dev/reference/write_file.html","id":null,"dir":"Reference","previous_headings":"","what":"write xml file — write_file","title":"write xml file — write_file","text":"brings added benefit xml checking","code":""},{"path":"/dev/reference/write_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write xml file — write_file","text":"","code":"write_file(head = \"\", body = \"\", tail = \"\", fl = \"\", escapes = FALSE)"},{"path":"/dev/reference/write_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write xml file — write_file","text":"head head part xml body body part xml tail tail part xml fl file name full path escapes bool characters like \"&\" escaped. default escape, assuming xml export already valid.","code":""},{"path":"/dev/reference/write_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a character vector as an Excel Formula — write_formula","title":"Write a character vector as an Excel Formula — write_formula","text":"Write character vector containing Excel formula worksheet.","code":""},{"path":"/dev/reference/write_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a character vector as an Excel Formula — write_formula","text":"","code":"write_formula(   wb,   sheet,   x,   startCol = 1,   startRow = 1,   dims = rowcol_to_dims(startRow, startCol),   array = FALSE,   cm = FALSE,   applyCellStyle = TRUE,   removeCellStyle = FALSE )"},{"path":"/dev/reference/write_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a character vector as an Excel Formula — write_formula","text":"wb Workbook object containing worksheet. sheet worksheet write . Can worksheet index name. x character vector. startCol vector specifying starting column write . startRow vector specifying starting row write . dims Spreadsheet dimensions determine startCol startRow: \"A1\", \"A1:B2\", \":B\" array bool function written type array cm bool function type cm (array hidden curly braces) applyCellStyle apply styles writing sheet removeCellStyle writing existing cells, cell style removed?","code":""},{"path":"/dev/reference/write_formula.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a character vector as an Excel Formula — write_formula","text":"Currently English version functions supported. Please use local translation. examples show small list possible formulas: SUM(B2:B4) AVERAGE(B2:B4) MIN(B2:B4) MAX(B2:B4) ...","code":""},{"path":[]},{"path":"/dev/reference/write_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a character vector as an Excel Formula — write_formula","text":"","code":"## There are 3 ways to write a formula  wb <- wb_workbook() wb$add_worksheet(\"Sheet 1\") wb$add_data(\"Sheet 1\", x = iris)  ## SEE int2col() to convert int to Excel column label  ## 1. -  As a character vector using write_formula  v <- c(\"SUM(A2:A151)\", \"AVERAGE(B2:B151)\") ## skip header row write_formula(wb, sheet = 1, x = v, startCol = 10, startRow = 2) #> A Workbook object. #>   #> Worksheets: #>  Sheets: Sheet 1  #>  Write order: 1 write_formula(wb, 1, x = \"A2 + B2\", startCol = 10, startRow = 10) #> A Workbook object. #>   #> Worksheets: #>  Sheets: Sheet 1  #>  Write order: 1   ## 2. - As a data.frame column with class \"formula\" using write_data  df <- data.frame(   x = 1:3,   y = 1:3,   z = paste(paste0(\"A\", 1:3 + 1L), paste0(\"B\", 1:3 + 1L), sep = \" + \"),   z2 = sprintf(\"ADDRESS(1,%s)\", 1:3),   stringsAsFactors = FALSE )  class(df$z) <- c(class(df$z), \"formula\") class(df$z2) <- c(class(df$z2), \"formula\")  wb$add_worksheet(\"Sheet 2\") wb$add_data(sheet = 2, x = df)    ## 3. - As a vector with class \"formula\" using write_data  v2 <- c(\"SUM(A2:A4)\", \"AVERAGE(B2:B4)\", \"MEDIAN(C2:C4)\") class(v2) <- c(class(v2), \"formula\")  wb$add_data(sheet = 2, x = v2, startCol = 10, startRow = 2)  ## 4. - Writing internal hyperlinks  wb <- wb_workbook() wb$add_worksheet(\"Sheet1\") wb$add_worksheet(\"Sheet2\") write_formula(wb, \"Sheet1\", x = '=HYPERLINK(\"#Sheet2!B3\", \"Text to Display - Link to Sheet2\")') #> A Workbook object. #>   #> Worksheets: #>  Sheets: Sheet1 Sheet2  #>  Write order: 1, 2  ## 5. - Writing array formulas  set.seed(123) df <- data.frame(C = rnorm(10), D = rnorm(10))  wb <- wb_workbook() wb <- wb_add_worksheet(wb, \"df\")  wb$add_data(\"df\", df, startCol = \"C\")  write_formula(wb, \"df\", startCol = \"E\", startRow = \"2\",              x = \"SUM(C2:C11*D2:D11)\",              array = TRUE) #> A Workbook object. #>   #> Worksheets: #>  Sheets: df  #>  Write order: 1"},{"path":"/dev/reference/write_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"write data to an xlsx file — write_xlsx","title":"write data to an xlsx file — write_xlsx","text":"write data.frame list data.frames xlsx file","code":""},{"path":"/dev/reference/write_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write data to an xlsx file — write_xlsx","text":"","code":"write_xlsx(x, file, asTable = FALSE, ...)"},{"path":"/dev/reference/write_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write data to an xlsx file — write_xlsx","text":"x object list objects can handled write_data() write file file xlsx file name asTable write using write_datatable opposed write_data ... optional parameters pass functions: wb_workbook() wb_add_worksheet() wb_add_data() wb_freeze_pane wb_save() see details.","code":""},{"path":"/dev/reference/write_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"write data to an xlsx file — write_xlsx","text":"workbook object","code":""},{"path":"/dev/reference/write_xlsx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"write data to an xlsx file — write_xlsx","text":"Optional parameters : wb_workbook Parameters creator string specifying workbook author wb_add_worksheet() Parameters sheetName Name worksheet gridLines logical. FALSE, worksheet grid lines hidden. tabColor Color worksheet tab. valid color (belonging colors()) valid hex color beginning \"#\". zoom numeric 10 400. Worksheet zoom level percentage. write_data/write_datatable Parameters startCol vector specifying starting column(s) write df startRow vector specifying starting row(s) write df xy alternative specifying startCol startRow individually. vector form c(startCol, startRow) colNames col.names TRUE, column names x written. rowNames row.names TRUE, row names x written. na.strings NULL NA values converted string Excel. Defaults NULL. freezePane Parameters firstActiveRow Top row active region freeze pane. firstActiveCol Furthest left column active region freeze pane. firstRow TRUE, freezes first row (equivalent firstActiveRow = 2) firstCol TRUE, freezes first column (equivalent firstActiveCol = 2) colWidths Parameters colWidths May single value columns (\"auto\"), list vectors recycled sheet (see examples) wb_save Parameters overwrite Overwrite existing file (Defaults TRUE write.table) columns x class Date POSIXt automatically styled dates datetimes respectively.","code":""},{"path":[]},{"path":"/dev/reference/write_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"write data to an xlsx file — write_xlsx","text":"","code":"## write to working directory write_xlsx(iris, file = temp_xlsx(), colNames = TRUE)  write_xlsx(iris,   file = temp_xlsx(),   colNames = TRUE )  ## Lists elements are written to individual worksheets, using list names as sheet names if available l <- list(\"IRIS\" = iris, \"MTCATS\" = mtcars, matrix(runif(1000), ncol = 5)) write_xlsx(l, temp_xlsx(), colWidths = c(NA, \"auto\", \"auto\"))  ## different sheets can be given different parameters write_xlsx(l, temp_xlsx(),   startCol = c(1, 2, 3), startRow = 2,   asTable = c(TRUE, TRUE, FALSE), withFilter = c(TRUE, FALSE, FALSE) )  # specify column widths for multiple sheets write_xlsx(l, temp_xlsx(), colWidths = 20) write_xlsx(l, temp_xlsx(), colWidths = list(100, 200, 300)) write_xlsx(l, temp_xlsx(), colWidths = list(rep(10, 5), rep(8, 11), rep(5, 5)))"},{"path":"/dev/reference/ws_cell_merge.html","id":null,"dir":"Reference","previous_headings":"","what":"Worksheet cell merging — ws_cell_merge","title":"Worksheet cell merging — ws_cell_merge","text":"Merge cells within worksheet","code":""},{"path":"/dev/reference/ws_cell_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Worksheet cell merging — ws_cell_merge","text":"","code":"wb_merge_cells(wb, sheet = current_sheet(), rows = NULL, cols = NULL)  wb_unmerge_cells(wb, sheet = current_sheet(), rows = NULL, cols = NULL)"},{"path":"/dev/reference/ws_cell_merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Worksheet cell merging — ws_cell_merge","text":"wb workbook object sheet name index worksheet cols, rows Column row specifications merge .  Note: min() max() vector provided specs.  Skipping rows columns recognized.","code":""},{"path":"/dev/reference/ws_cell_merge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Worksheet cell merging — ws_cell_merge","text":"merged region must rectangular, min max cols rows used.","code":""},{"path":[]},{"path":"/dev/reference/ws_cell_merge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Worksheet cell merging — ws_cell_merge","text":"","code":"# Create a new workbook wb <- wb_workbook()  # Add a worksheets wb$add_worksheet(\"Sheet 1\") wb$add_worksheet(\"Sheet 2\")  # Merge cells: Row 2 column C to F (3:6) wb <- wb_merge_cells(wb, \"Sheet 1\", cols = 2, rows = 3:6)  # Merge cells:Rows 10 to 20 columns A to J (1:10) wb <- wb_merge_cells(wb, 1, cols = 1:10, rows = 10:20)  # Intersecting merges wb <- wb_merge_cells(wb, 2, cols = 1:10, rows = 1) wb <- wb_merge_cells(wb, 2, cols = 5:10, rows = 2) wb <- wb_merge_cells(wb, 2, cols = c(1, 10), rows = 12) # equivalent to 1:10 try(wb_merge_cells(wb, 2, cols = 1, rows = c(1,10)))    # intersects existing merge #> Error : Merge intersects with existing merged cells:  #> \t\tA1:J1. #> Remove existing merge first.  # remove merged cells wb <- wb_unmerge_cells(wb, 2, cols = 1, rows = 1)  # removes any intersecting merges wb <- wb_merge_cells(wb, 2, cols = 1, rows = 1:10) # Now this works"},{"path":"/dev/reference/ws_page_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Set page margins, orientation and print scaling — ws_page_setup","title":"Set page margins, orientation and print scaling — ws_page_setup","text":"Set page margins, orientation print scaling","code":""},{"path":"/dev/reference/ws_page_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set page margins, orientation and print scaling — ws_page_setup","text":"","code":"wb_page_setup(   wb,   sheet = current_sheet(),   orientation = NULL,   scale = 100,   left = 0.7,   right = 0.7,   top = 0.75,   bottom = 0.75,   header = 0.3,   footer = 0.3,   fitToWidth = FALSE,   fitToHeight = FALSE,   paperSize = NULL,   printTitleRows = NULL,   printTitleCols = NULL,   summaryRow = NULL,   summaryCol = NULL )"},{"path":"/dev/reference/ws_page_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set page margins, orientation and print scaling — ws_page_setup","text":"wb workbook object sheet name index worksheet orientation Page orientation. One \"portrait\" \"landscape\" scale Print scaling. Numeric value 10 400 left left page margin inches right right page margin inches top top page margin inches bottom bottom page margin inches header header margin inches footer footer margin inches fitToWidth TRUE, worksheet scaled fit page width printing. fitToHeight TRUE, worksheet scaled fit page height printing. paperSize See details. Default value 9 (A4 paper). printTitleRows Rows repeat top page printing. Integer vector. printTitleCols Columns repeat left printing. Integer vector. summaryRow Location summary rows groupings. One \"\" \"\". summaryCol Location summary columns groupings. One \"Right\" \"Left\".","code":""},{"path":"/dev/reference/ws_page_setup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set page margins, orientation and print scaling — ws_page_setup","text":"paperSize integer corresponding : 1 Letter paper (8.5 . 11 .) 2 Letter small paper (8.5 . 11 .) 3 Tabloid paper (11 . 17 .) 4 Ledger paper (17 . 11 .) 5 Legal paper (8.5 . 14 .) 6 Statement paper (5.5 . 8.5 .) 7 Executive paper (7.25 . 10.5 .) 8 A3 paper (297 mm 420 mm) 9 A4 paper (210 mm 297 mm) 10 A4 small paper (210 mm 297 mm) 11 A5 paper (148 mm 210 mm) 12 B4 paper (250 mm 353 mm) 13 B5 paper (176 mm 250 mm) 14 Folio paper (8.5 . 13 .) 15 Quarto paper (215 mm 275 mm) 16 Standard paper (10 . 14 .) 17 Standard paper (11 . 17 .) 18 Note paper (8.5 . 11 .) 19 #9 envelope (3.875 . 8.875 .) 20 #10 envelope (4.125 . 9.5 .) 21 #11 envelope (4.5 . 10.375 .) 22 #12 envelope (4.75 . 11 .) 23 #14 envelope (5 . 11.5 .) 24 C paper (17 . 22 .) 25 D paper (22 . 34 .) 26 E paper (34 . 44 .) 27 DL envelope (110 mm 220 mm) 28 C5 envelope (162 mm 229 mm) 29 C3 envelope (324 mm 458 mm) 30 C4 envelope (229 mm 324 mm) 31 C6 envelope (114 mm 162 mm) 32 C65 envelope (114 mm 229 mm) 33 B4 envelope (250 mm 353 mm) 34 B5 envelope (176 mm 250 mm) 35 B6 envelope (176 mm 125 mm) 36 Italy envelope (110 mm 230 mm) 37 Monarch envelope (3.875 . 7.5 .). 38 6 3/4 envelope (3.625 . 6.5 .) 39 US standard fanfold (14.875 . 11 .) 40 German standard fanfold (8.5 . 12 .) 41 German legal fanfold (8.5 . 13 .) 42 ISO B4 (250 mm 353 mm) 43 Japanese double postcard (200 mm 148 mm) 44 Standard paper (9 . 11 .) 45 Standard paper (10 . 11 .) 46 Standard paper (15 . 11 .) 47 Invite envelope (220 mm 220 mm) 50 Letter extra paper (9.275 . 12 .) 51 Legal extra paper (9.275 . 15 .) 52 Tabloid extra paper (11.69 . 18 .) 53 A4 extra paper (236 mm 322 mm) 54 Letter transverse paper (8.275 . 11 .) 55 A4 transverse paper (210 mm 297 mm) 56 Letter extra transverse paper (9.275 . 12 .) 57 SuperA/SuperA/A4 paper (227 mm 356 mm) 58 SuperB/SuperB/A3 paper (305 mm 487 mm) 59 Letter plus paper (8.5 . 12.69 .) 60 A4 plus paper (210 mm 330 mm) 61 A5 transverse paper (148 mm 210 mm) 62 JIS B5 transverse paper (182 mm 257 mm) 63 A3 extra paper (322 mm 445 mm) 64 A5 extra paper (174 mm 235 mm) 65 ISO B5 extra paper (201 mm 276 mm) 66 A2 paper (420 mm 594 mm) 67 A3 transverse paper (297 mm 420 mm) 68 A3 extra transverse paper (322 mm 445 mm)","code":""},{"path":"/dev/reference/ws_page_setup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set page margins, orientation and print scaling — ws_page_setup","text":"","code":"wb <- wb_workbook() wb$add_worksheet(\"S1\") wb$add_worksheet(\"S2\") wb$add_data_table(1, x = iris[1:30, ]) wb$add_data_table(2, x = iris[1:30, ], dims = c(\"C5\"))  ## landscape page scaled to 50% wb$page_setup(sheet = 1, orientation = \"landscape\", scale = 50)  ## portrait page scales to 300% with 0.5in left and right margins wb$page_setup(sheet = 2, orientation = \"portrait\", scale = 300, left = 0.5, right = 0.5)   ## print titles wb$add_worksheet(\"print_title_rows\") wb$add_worksheet(\"print_title_cols\")  wb$add_data(\"print_title_rows\", rbind(iris, iris, iris, iris)) wb$add_data(\"print_title_cols\", x = rbind(mtcars, mtcars, mtcars), rowNames = TRUE)  wb$page_setup(sheet = \"print_title_rows\", printTitleRows = 1) ## first row wb$page_setup(sheet = \"print_title_cols\", printTitleCols = 1, printTitleRows = 1)"},{"path":"/dev/reference/xl_open.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a Microsoft Excel file (xls/xlsx) or an openxlsx2 wbWorkbook — xl_open","title":"Open a Microsoft Excel file (xls/xlsx) or an openxlsx2 wbWorkbook — xl_open","text":"function tries open Microsoft Excel (xls/xlsx) file openxlsx2 wbWorkbook proper application, portable manner. Windows uses base::shell.exec() (Windows function) determine appropriate program. Mac (c) uses system default handlers, given file type. Linux searches (via ) available xls/xlsx reader applications (unless options('openxlsx2.excelApp') set app bin path), finds anything, sets options('openxlsx2.excelApp') program chosen user via menu (many present, otherwise set available). Currently searched apps Libreoffice/Openoffice (soffice bin), Gnumeric (gnumeric) Calligra Sheets (calligrasheets).","code":""},{"path":"/dev/reference/xl_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a Microsoft Excel file (xls/xlsx) or an openxlsx2 wbWorkbook — xl_open","text":"","code":"xl_open(x, interactive = NA)  # S3 method for wbWorkbook xl_open(x, interactive = NA)  # S3 method for default xl_open(x, interactive = NA)"},{"path":"/dev/reference/xl_open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a Microsoft Excel file (xls/xlsx) or an openxlsx2 wbWorkbook — xl_open","text":"x path Excel (xls/xlsx) file Workbook object. interactive FALSE throw warning open path. can manually set TRUE, otherwise NA (default) uses value returned base::interactive()","code":""},{"path":"/dev/reference/xl_open.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open a Microsoft Excel file (xls/xlsx) or an openxlsx2 wbWorkbook — xl_open","text":"","code":"# \\donttest{ if (interactive()) {   xlsxFile <- system.file(\"extdata\", \"readTest.xlsx\", package = \"openxlsx2\")   xl_open(xlsxFile)    # (not yet saved) Workbook example   wb <- wb_workbook()   x <- mtcars[1:6, ]   wb$add_worksheet(\"Cars\")   wb$add_data(\"Cars\", x, startCol = 2, startRow = 3, rowNames = TRUE)   xl_open(wb) } # }"},{"path":"/dev/reference/xml_add_child.html","id":null,"dir":"Reference","previous_headings":"","what":"append xml child to node — xml_add_child","title":"append xml child to node — xml_add_child","text":"append xml child node","code":""},{"path":"/dev/reference/xml_add_child.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"append xml child to node — xml_add_child","text":"","code":"xml_add_child(xml_node, xml_child, level, pointer = FALSE, ...)"},{"path":"/dev/reference/xml_add_child.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"append xml child to node — xml_add_child","text":"xml_node xml_node xml_child xml_child level optional level, missing first child picked pointer pointer ... additional arguments passed read_xml()","code":""},{"path":"/dev/reference/xml_add_child.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"append xml child to node — xml_add_child","text":"","code":"xml_node <- \"<a><b/><\/a>\" xml_child <- \"<c/>\"  # add child to first level node xml_add_child(xml_node, xml_child) #> [1] \"<a><b/><c/><\/a>\"  # add child to second level node as request xml_node <- xml_add_child(xml_node, xml_child, level = c(\"b\"))  # add child to third level node as request xml_node <- xml_add_child(xml_node, \"<d/>\", level = c(\"b\", \"c\"))"},{"path":"/dev/reference/xml_attr_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"adds or updates attribute(s) in existing xml node — xml_attr_mod","title":"adds or updates attribute(s) in existing xml node — xml_attr_mod","text":"Needs xml node named character vector input. Modifies arguments first child found xml node adds updates attribute vector.","code":""},{"path":"/dev/reference/xml_attr_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"adds or updates attribute(s) in existing xml node — xml_attr_mod","text":"","code":"xml_attr_mod(   xml_content,   xml_attributes,   escapes = FALSE,   declaration = FALSE,   remove_empty_attr = TRUE )"},{"path":"/dev/reference/xml_attr_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"adds or updates attribute(s) in existing xml node — xml_attr_mod","text":"xml_content valid xml_node xml_attributes R vector named attributes escapes bool escapes used declaration bool declaration imported remove_empty_attr bool remove empty attributes ignore ","code":""},{"path":"/dev/reference/xml_attr_mod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"adds or updates attribute(s) in existing xml node — xml_attr_mod","text":"named attribute xml_attributes \"\" remove attribute node. xml_attributes contains named entry found xml node, updated else added attribute.","code":""},{"path":"/dev/reference/xml_attr_mod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"adds or updates attribute(s) in existing xml node — xml_attr_mod","text":"","code":"# add single node     xml_node <- \"<a foo=\\\"bar\\\">openxlsx2<\/a><b />\"     xml_attr <- c(qux = \"quux\")     # \"<a foo=\\\"bar\\\" qux=\\\"quux\\\">openxlsx2<\/a><b qux=\\\"quux\\\"/>\"     xml_attr_mod(xml_node, xml_attr) #> [1] \"<a foo=\\\"bar\\\" qux=\\\"quux\\\">openxlsx2<\/a><b qux=\\\"quux\\\"/>\"    # update node and add node     xml_node <- \"<a foo=\\\"bar\\\">openxlsx2<\/a><b />\"     xml_attr <- c(foo = \"baz\", qux = \"quux\")     # \"<a foo=\\\"baz\\\" qux=\\\"quux\\\">openxlsx2<\/a><b foo=\\\"baz\\\" qux=\\\"quux\\\"/>\"     xml_attr_mod(xml_node, xml_attr) #> [1] \"<a foo=\\\"baz\\\" qux=\\\"quux\\\">openxlsx2<\/a><b foo=\\\"baz\\\" qux=\\\"quux\\\"/>\"    # remove node and add node     xml_node <- \"<a foo=\\\"bar\\\">openxlsx2<\/a><b />\"     xml_attr <- c(foo = \"\", qux = \"quux\")     # \"<a qux=\\\"quux\\\">openxlsx2<\/a><b qux=\\\"quux\\\"/>\"     xml_attr_mod(xml_node, xml_attr) #> [1] \"<a qux=\\\"quux\\\">openxlsx2<\/a><b qux=\\\"quux\\\"/>\""},{"path":"/dev/reference/xml_node_create.html","id":null,"dir":"Reference","previous_headings":"","what":"create xml_node from R objects — xml_node_create","title":"create xml_node from R objects — xml_node_create","text":"takes xml_name, xml_children xml_attributes create new xml_node.","code":""},{"path":"/dev/reference/xml_node_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create xml_node from R objects — xml_node_create","text":"","code":"xml_node_create(   xml_name,   xml_children = NULL,   xml_attributes = NULL,   escapes = FALSE,   declaration = FALSE )"},{"path":"/dev/reference/xml_node_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create xml_node from R objects — xml_node_create","text":"xml_name name new xml_node xml_children character vector children attached xml_node xml_attributes named character vector attributes xml_node escapes bool escapes used declaration bool declaration imported","code":""},{"path":"/dev/reference/xml_node_create.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"create xml_node from R objects — xml_node_create","text":"xml_children xml_attributes empty, use NULL","code":""},{"path":"/dev/reference/xml_node_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create xml_node from R objects — xml_node_create","text":"","code":"xml_name <- \"a\" # \"<a/>\" xml_node_create(xml_name) #> [1] \"<a/>\"  xml_child <- \"openxlsx\" # \"<a>openxlsx<\/a>\" xml_node_create(xml_name, xml_children = xml_child) #> [1] \"<a>openxlsx<\/a>\"  xml_attr <- c(foo = \"baz\", qux = \"quux\") # \"<a foo=\\\"baz\\\" qux=\\\"quux\\\"/>\" xml_node_create(xml_name, xml_attributes = xml_attr) #> [1] \"<a foo=\\\"baz\\\" qux=\\\"quux\\\"/>\"  # \"<a foo=\\\"baz\\\" qux=\\\"quux\\\">openxlsx<\/a>\" xml_node_create(xml_name, xml_children = xml_child, xml_attributes = xml_attr) #> [1] \"<a foo=\\\"baz\\\" qux=\\\"quux\\\">openxlsx<\/a>\""},{"path":"/dev/reference/xml_rm_child.html","id":null,"dir":"Reference","previous_headings":"","what":"remove xml child to node — xml_rm_child","title":"remove xml child to node — xml_rm_child","text":"remove xml child node","code":""},{"path":"/dev/reference/xml_rm_child.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"remove xml child to node — xml_rm_child","text":"","code":"xml_rm_child(xml_node, xml_child, level, which = 0, pointer = FALSE, ...)"},{"path":"/dev/reference/xml_rm_child.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"remove xml child to node — xml_rm_child","text":"xml_node xml_node xml_child xml_child level optional level, missing first child picked optional index node remove, multiple available. Default disabled removed pointer pointer ... additional arguments passed read_xml()","code":""},{"path":"/dev/reference/xml_rm_child.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"remove xml child to node — xml_rm_child","text":"","code":"xml_node <- \"<a><b><c><d/><\/c><\/b><c/><\/a>\" xml_child <- \"c\"  xml_rm_child(xml_node, xml_child) #> [1] \"<a><b><c><d/><\/c><\/b><\/a>\"  xml_rm_child(xml_node, xml_child, level = c(\"b\")) #> [1] \"<a><b/><c/><\/a>\"  xml_rm_child(xml_node, \"d\", level = c(\"b\", \"c\")) #> [1] \"<a><b><c/><\/b><c/><\/a>\""},{"path":[]},{"path":"/dev/news/index.html","id":"fixes-development-version","dir":"Changelog","previous_headings":"","what":"Fixes","title":"openxlsx2 (development version)","text":"load app.xml now assigned wb$app. Previously loaded assigned.","code":""},{"path":"/dev/news/index.html","id":"openxlsx2-07","dir":"Changelog","previous_headings":"","what":"openxlsx2 0.7","title":"openxlsx2 0.7","text":"CRAN release: 2023-05-26","code":""},{"path":"/dev/news/index.html","id":"new-features-0-7","dir":"Changelog","previous_headings":"","what":"New features","title":"openxlsx2 0.7","text":"dims argument wb_add_formula() can used create array references. new cm argument added might useful, formulas previously created addition @ spreadsheet software. Examples use formulas added new vignette. 593 Allow using custom data table styles. fixes minor style inconsistencies. 594 Allow reading writing hms columns. 601 Import tableStyles wb_load() improve dxf style creation. 603 Add fmt_txt() style character strings. 607 Add new wrapper ignore worksheet errors wb_add_ignore_error(). 617 Add new wrapper update table references wb_update_table(). 606","code":""},{"path":"/dev/news/index.html","id":"fixes-0-7","dir":"Changelog","previous_headings":"","what":"Fixes","title":"openxlsx2 0.7","text":"Improve handling non standard OutDec options. 611 openxlsx2 now better job trying return character values classes foreign . going quite time, although previously bug treated classes numeric, resulting corrupted xlsx files. 615 now return additional xml arguments worksheets. 617","code":""},{"path":"/dev/news/index.html","id":"openxlsx2-061","dir":"Changelog","previous_headings":"","what":"openxlsx2 0.6.1","title":"openxlsx2 0.6.1","text":"CRAN release: 2023-04-21","code":""},{"path":"/dev/news/index.html","id":"new-features-0-6-1","dir":"Changelog","previous_headings":"","what":"New features","title":"openxlsx2 0.6.1","text":"Improve col2int() accept column ranges like col2int(\":Z\"). allow using column ranges various places like wb_merge_cells(cols = \"B:D\", ...) wb_read(cols = c(\"\",\"C:D\")). 575 Add dims argument wb_add_image() wb_add_plot(). can used place images starting cell span cell range. deprecates xy wb_add_plot(). adds colOffset rowOffset wb_add_drawing() wb_add_mschart() wb_add_chart_xml(). 578 Add skipHiddenCols skipHiddenRows wb_to_df(). way, hidden columns rows ignored, assuming person hidden assumes important. 579 writing tibble use .data.frame() just like data.table case. 582 Add cleanup internal comment code write_comment(). impact workbook wrapper code wb_add_comment(). 586 Added chain functions wb_to_df() wb_load(). 587","code":""},{"path":"/dev/news/index.html","id":"openxlsx2-06","dir":"Changelog","previous_headings":"","what":"openxlsx2 0.6","title":"openxlsx2 0.6","text":"CRAN release: 2023-04-02","code":""},{"path":"/dev/news/index.html","id":"new-features-0-6","dir":"Changelog","previous_headings":"","what":"New features","title":"openxlsx2 0.6","text":"Styles arguments now accept logical numeric arguments applicable. 558 Adding dims argument wb_clean_sheet(). allows clean selected range. 563","code":""},{"path":"/dev/news/index.html","id":"fixes-0-6","dir":"Changelog","previous_headings":"","what":"Fixes","title":"openxlsx2 0.6","text":"na.strings = NULL longer ignored write_xlsx() 552 Explicit type conversion date datetime finally available. 551","code":""},{"path":"/dev/news/index.html","id":"breaking-changes-0-6","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"openxlsx2 0.6","text":"skipEmptyCols skipEmptyRows behavior wb_to_df() related functions switched include empty columns name. Previously exclude columns empty, even name. 555 Cleanups 548 cloneSheetStyle() get_cell_style() set_cell_style() wb_conditional_formatting() xy argument write_data_table() interacting functions file xl_open() definedName wb_to_df() interacting functions get_named_regions() wb_get_named_regions()","code":""},{"path":"/dev/news/index.html","id":"openxlsx2-051","dir":"Changelog","previous_headings":"","what":"openxlsx2 0.5.1","title":"openxlsx2 0.5.1","text":"CRAN release: 2023-02-26","code":""},{"path":"/dev/news/index.html","id":"new-features-0-5-1","dir":"Changelog","previous_headings":"","what":"New features","title":"openxlsx2 0.5.1","text":"Allow hierarchical grouping. wb_group_cols/wb_group_rows now accept nested lists grouping variable. 537 now possible add form control types Checkbox, Radio Drop workbook using wb_add_form_control(). 533 Improve wb_to_df(fillMergedCells = TRUE) work better dimensions. now possible fill cells merged cells intersect selected dimensions. 541 Speedup cell initialization. used wb_style functions like wb_add_numfmt(). previous loop replaced faster implementation. 545 Improve date detection wb_to_df(). improves date posix detection custom date formats. 547 na_strings() now used explicit default value na.strings parameters exported workbook functions. 473 waiver functions (.e., next_worksheet(), current_worksheet(), na_strings()) now exports 474","code":""},{"path":"/dev/news/index.html","id":"fixes-0-5-1","dir":"Changelog","previous_headings":"","what":"Fixes","title":"openxlsx2 0.5.1","text":"Fixed bug loading input multiple sheets every sheet contains drawing/comment. Previously assumed every sheet comment ordered incorrectly. caused confusion spreadsheet software. 536 Fixed bug files containing 10 external references. case load references numeric order instead “1.xml”, “10.xml”, …, “2.xml”, … jumbled external references. 538","code":""},{"path":"/dev/news/index.html","id":"openxlsx2-05","dir":"Changelog","previous_headings":"","what":"openxlsx2 0.5","title":"openxlsx2 0.5","text":"CRAN release: 2023-01-29","code":""},{"path":"/dev/news/index.html","id":"new-features-0-5","dir":"Changelog","previous_headings":"","what":"New features","title":"openxlsx2 0.5","text":"Improve column row grouping. now possible group list, can create various levels groupings. 486 writeData() calls force(x) evaluate object options set (#264) tabColor wb_add_worksheet() now allows passing wb_color(). 500 Add wb_copy_cells() wrapper allows copying cell ranges workbook direct copy, reference value. 515 Experimental option: openxlsx2.string_nums write string numerics differently. string numeric numeric string like: .character(1.5). option can 0 = current default. Writes string numeric string (incorrect way according spreadsheet software) 1 = writes string numeric numeric character flag (correct way according spreadsheet software) 2 = convert string numeric numeric writing experimental, impact somewhat unknown. might trigger unintended side effects. Feedback requested. Enable writing strings sharedStrings argument inline_strings = FALSE. creates sharedStrings table openxml allows reuse strings workbook efficiently can reduce file size workbook many cells duplicates. 499 Initial implementation wb_add_pivot_table(). allows adding native pivot tables openxlsx2 workbooks. pivot table area remain empty sheet opened spreadsheet software evaluated successfully. feature newly developed can cause unexpected side effects. aware using might currently break workbooks.","code":""},{"path":"/dev/news/index.html","id":"fixes-0-5","dir":"Changelog","previous_headings":"","what":"Fixes","title":"openxlsx2 0.5","text":"Reading files frozen panes one section node restored. 495 Fixed copy paste mistake add_border() used left borders right borders. 496 Improve XML unescaping. 497 Fix reading saving workbooks multiple slicers per sheet. 505 Fix tab selection always selecting first sheet since #303. 506","code":""},{"path":"/dev/news/index.html","id":"breaking-changes-0-5","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"openxlsx2 0.5","text":"export write_data2() anymore. used development early stages package used directly anymore. documentation: openxlsx2 defaults American English ‘color’ now . Though, fully support previous ‘colour’. Users adjust code. documentation lists color, can pass colour just way used . 501 502","code":""},{"path":"/dev/news/index.html","id":"openxlsx2-041","dir":"Changelog","previous_headings":"","what":"openxlsx2 0.4.1","title":"openxlsx2 0.4.1","text":"CRAN release: 2022-12-18","code":""},{"path":"/dev/news/index.html","id":"new-features-0-4-1","dir":"Changelog","previous_headings":"","what":"New features","title":"openxlsx2 0.4.1","text":"Provide new argument calc_chain wb_load(). set FALSE per default, ignore calculation chain found. change reflects files imported third party spreadsheet software visible user. 461 Tweaks wb_data(). Dims now optional select data similar wb_to_df(), similar allows passing wb_to_df() arguments. Though, probably good idea creative passing arguments, result usable wb_data object. 462 Add hidden argument change default heights NULL set_row_heights(). allows changing row height /hiding selected rows. yet provide way hide rows per default. 475 Add wb_add_chartsheet() chart sheet support. Along internal cleanup around chart sheet code. 466","code":""},{"path":"/dev/news/index.html","id":"fixes-0-4-1","dir":"Changelog","previous_headings":"","what":"Fixes","title":"openxlsx2 0.4.1","text":"Fix wb_freeze_pane(). changes load logic bit. Previously put everything sheetViews (frozen pane part ). Though wb_freeze_pane() assumes freezePane used. now try smart split sheetViews upon loading. 465 Previously, adding mschart objects sheets possible (1) worksheet already contained drawing (workbook loaded) (2) last sheet workbook. now fixed. Adding mschart objects worksheet workbook now possible intended. 458 Really fix double xml escaping saving. 467 Improving drawing logic. workbooks various drawings per sheet previously combinations possible reflecting . 478","code":""},{"path":"/dev/news/index.html","id":"openxlsx2-04","dir":"Changelog","previous_headings":"","what":"openxlsx2 0.4","title":"openxlsx2 0.4","text":"CRAN release: 2022-12-05","code":""},{"path":"/dev/news/index.html","id":"new-features-0-4","dir":"Changelog","previous_headings":"","what":"New features","title":"openxlsx2 0.4","text":"Provide rvg support via wb_add_drawing(). allows integrating rvg plots xlsx files. 449 Improve print options. Defaults printing grid lines, worksheet contains grid lines. 440 Support reading files form control. 426 Handle input files chart extensions. 443 Improve writing styles workbook. Previously every cell checked, changed check unique styles. 423 Implement reading custom file properties. 418 Improved add_named_region(). function includes now various xml options. 386 Add … argument read_xlsx() wb_read(). 381 Allow reading files xml namespace created third party software. 405","code":""},{"path":"/dev/news/index.html","id":"fixes-0-4","dir":"Changelog","previous_headings":"","what":"Fixes","title":"openxlsx2 0.4","text":"Update remove calculation chain overwriting formulas workbook. 438 Fix double xml escaping saving. 435 Minor tweak POSIXct dates try avoid notorious 29Feb1900. 424 Implement reading customXml folder input files connection. 419 Fixed saving files <sheetPr/> tag. Previously wrapped second sheetPr node. issue occurs xlsm files . 417 Fixed case embedded files assigned incorrectly worksheet relationships. caused corrupted output. 403","code":""},{"path":"/dev/news/index.html","id":"breaking-changes-0-4","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"openxlsx2 0.4","text":"Remove merge_ functions styles. 450 Previously loaded workbook contained formulas pointing cells modified openxlsx2, formulas updated, workbook opened spreadsheet software. now enforced, unless option openxlsx2.disableFullCalcOnLoad set. case respect original calculation properties workbook. wb_save() longer returns path object saved , instead wbWorkbook object, invisibly. consistent behavior others wrappers. 378 Remove never used .equal.wbWorkbook(). idea nice, never developed something useful. Remove never used wb_chart_sheet() function. 399","code":""},{"path":"/dev/news/index.html","id":"internal-changes-0-4","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"openxlsx2 0.4","text":"Provide set_sheetview() sheets. Can used provide wbWorkbook function wrapper future. 399","code":""},{"path":"/dev/news/index.html","id":"openxlsx2-031","dir":"Changelog","previous_headings":"","what":"openxlsx2 0.3.1","title":"openxlsx2 0.3.1","text":"CRAN release: 2022-10-31","code":""},{"path":"/dev/news/index.html","id":"new-features-0-3-1","dir":"Changelog","previous_headings":"","what":"New features","title":"openxlsx2 0.3.1","text":"Functions adding data workbook now bring applyCellStyle argument. TRUE openxlsx2 apply numeric style, FALSE simply add numeric value without additional styling use previous cell style. 365 Reading file workbook showFormula now returns formulas found workbook. Previously type e str returned. Now able see formulas like hyperlinks . 352","code":""},{"path":"/dev/news/index.html","id":"internal-changes-0-3-1","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"openxlsx2 0.3.1","text":"Moved data validation list x14 data validation. enables data validation lists without x14 extension openxlsx 386. 347 Removed build_cell_merges() replaced plain R solution. 390","code":""},{"path":"/dev/news/index.html","id":"fixes-0-3-1","dir":"Changelog","previous_headings":"","what":"Fixes","title":"openxlsx2 0.3.1","text":"Improvements setting column widths. Previously values set set_col_widths() little . now improved. still corner cases column width set openxlsx2 match shown spreadsheet software. Notable differences can seen floating point values (e.g., 10L works 10.1 slightly ) column width Mac. 350 Improve rowNames writing data worksheet. Previously name rownames column defaulted 1. changed. Now data defaults empty cell data table defaults _rowNames_. 375 Fix workbook xml relationship file include reference shared strings per default. solves 360 plain data files written openxlsx2. 363 Adding cell styles streamlined increase consistency. includes style functions like wb_add_font() covers cases hyperlinks. 365 Fix cloning pivot charts. 361 Fix loading writing files slicers. Loading add empty slicer xml files Content_Types workbook.xml.rels. 361 Align logic writing data empty worksheets updating/writing worksheets data. removes update_cell_loop() changes update_cell() behaves. remove duplicated code, also brings great speed improvements (issue 356). 356 now possible use special characters formulas without coding. Previously & encoded like &amp; 251","code":""},{"path":"/dev/news/index.html","id":"breaking-changes-0-3-1","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"openxlsx2 0.3.1","text":"Previously deprecated names.wbWorkbook() names<-.wbWorkbook() removed. 367 Conditional style defaults create_dxfs_style() changed permissive. Previously shipped default font, default font size font color. changed better reflect behavior user expects. 343","code":""},{"path":"/dev/news/index.html","id":"openxlsx2-03","dir":"Changelog","previous_headings":"","what":"openxlsx2 0.3","title":"openxlsx2 0.3","text":"CRAN release: 2022-09-30","code":""},{"path":"/dev/news/index.html","id":"new-features-0-3","dir":"Changelog","previous_headings":"","what":"New features","title":"openxlsx2 0.3","text":"New argument startCol read data frame functions wb_to_df(), wb_read() read_xlsx(). 330 New function wb_colour() ease working color vectors used openxlsx2 styles. 292 Deprecated get_cell_style() set_cell_style() favor newly introduced wrapper functions wb_get_cell_style() wb_set_cell_style(). 306 Improvements wb_clone_worksheet(). Cloning chartsheets well worksheets containing charts, pivot tables, drawings tables now possible tweaked. Slicers removed cloned worksheet. 305 Allow writing class data.table. 313 Provide na.numbers reading functions, convert numbers NA R output. Handle na.strings write_xlsx(). 301 Add new option add sparklines various style options worksheets: wb_add_sparklines(). Sparklines can created create_sparklines(). manual page contains example. 280 Add new options data validation. allow type custom, add arguments errorStyle, errorTitle, error, promptTitle, prompt. 271 Provide wb_clone_sheet_style(). improves upon now deprecatedcloneSheetStyle() existed early draft. 233 wb$add_data() now checks earlier missing x argument. 246","code":""},{"path":"/dev/news/index.html","id":"internal-changes-0-3","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"openxlsx2 0.3","text":"Worksheets added wbWorkbook longer contain default references drawings vmlDrawings directories. Previously, references added rId1 rId2 even worksheet contain drawing (e.g., image chart) vml drawing (e.g., comment button). cases certain third party software, strictly following references worksheet Content_Types complained missing files import files failed completely. 311 Implement loading user defined chartShapes. Previously implemented instead previous logic assumed every sheet matching drawing. chartShapes longer true. number drawings number worksheets/chartsheets must match. 323 loading files charts, now imported wbWorkbook object. Previously simply copied. allow easier interaction charts future. 304 Moving data validation code workbook worksheet. Also, data_validation_list() longer stored dataValidationLst. moved extLst, fixing bug saving adding another data validation list. code retrieving date origin workbook improved get_date_origin(wb, origin = TRUE) now returns origin integer wbWorkbook. 299 Removed level4 XML functions. single use case level4 function solved differently. level4 needed, can solved using level3 additional level2 functions. addition xml_nodes now return nodes reachable nestings, therefore xml_node(\"<\/><\/>\", \"\") now return character vector length two. xml_node(\"<\/><b/>\", \"\") single character vector returned. 280 Changes various internal pugixml functions, improve handling XML strings. 279 Provide internal helper xml_rm_child() remove children XML strings. 273 Fixes bug update_cell() slowed writing worksheets data. addition, function cleaned improved. longer exported, users need use wb_add_data() write_data(), calls update_cell() hood. 275 276 Various (mostly internal) changes conditional_formatting. Created style_mgr integration dxf (cf-styles) cleaned internal code. syntax changed slightly, see conditional formatting vignette reference. Add whitespace argument read_xml(). 268","code":""},{"path":"/dev/news/index.html","id":"breaking-changes-0-3","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"openxlsx2 0.3","text":"Order arguments reading functions wb_to_df(), wb_read() read_xls() changed.","code":""},{"path":[]},{"path":"/dev/news/index.html","id":"new-features-0-2-1","dir":"Changelog","previous_headings":"","what":"New features","title":"openxlsx2 0.2.1","text":"Data adding functions now ship dims argument can used determine startCol startRow x object added worksheet. Works add_data(), add_data_table(), add_formula() underlying write_ functions well wrappers. Provide optional na.strings argument writing data sheets. can used add custom character string writing numeric data. Improve writing NA, NaN, -Inf/Inf. NA converted #N/; NaN converted #VALUE!; Inf converted #NUM!. conversion applied reading workbook. 256 Many wbWorkbook methods now contain default sheet values current_sheet() next_sheet() (e.g., $add_worksheet(sheet = next_sheet()), $write_data(sheet = curret_sheet()). internal waiver functions allow wbWorkbook object use default expectations sheet interact . allows easier workflow wb$add_worksheet()$add_data(x = data.frame()) $add_worksheet() knows add new worksheet (default name), sets new worksheet current worksheet, $add_data() picks new sheet places data . 165, 179 New functions wb_add_cell_style() wb$add_cell_style() simplify creation cell styles cells sheet. provides fast way create cell styles regions worksheet. cells cell format created must already exist worksheet. cells already contain cell format, preserved, except updated cell format entries, always created. function applied continuous cell worksheet. 230 New functions wb_add_numfmt() wb$add_numfmt() simplify creation number formats cells sheet. provides fast way create number formats regions worksheet. cells number format created must already exist worksheet. cells already contain cell style, preserved, except number format, always created. function applied continuous cell worksheet. 229 New functions wb_add_font() wb$add_font() simplify creation fonts cells sheet. provides fast way create fonts regions worksheet. cells font created must already exist worksheet. cells already contain cell style, preserved, except font, always created. function applied continuous cell worksheet. 228 New functions wb_add_fill() wb$add_fill() simplify creation fills cells sheet. provides fast way create color filled regions worksheet. cells fill created must already exist worksheet. cells already contain cell style, preserved, except filled color, always created. function applied continuous cell worksheet allows change color every n-th column row. 222 New functions wb_add_border() wb$add_border() simplify creation borders cells sheet. especially useful creating surrounding borders different border styles various cells. cells border created must already exist worksheet. cells already contain cell style, preserved, except border, always created. function applied continuous cell worksheet allows change horizontal vertical internal border grid independently. 220 Enable reading tables wb_to_df(). Tables handled similar defined names. 193 Several enhancements added checking validation worksheet names 165 adding new worksheet via wbWorkbook$add_worksheet() provided name checked illegal characters (see note Breaking changes) wbWorkbook$get_sheet_names() (wb_get_sheet_names() wrapper) added. return formatted original sheet names make names.wbWorkbook() names<-.wbWorkbook() deprecated wbWorkbook$setSheetName() deprecated clean_worksheet_names() added support removing characters allowed worksheet names","code":""},{"path":"/dev/news/index.html","id":"fixes-0-2-1","dir":"Changelog","previous_headings":"","what":"Fixes","title":"openxlsx2 0.2.1","text":"Various fixes enable handling non unicode R environments 243 Fix issue broken pageSetup reference causing corrupt excel files 216 Fix reading writing comments workbooks already provide comments 209 Fix issue broken xml Excels vml files enable opening xlsm files wb$open() 202 Fix reading writing non UTF-8 systems 198 199 207 Instruct parser import nodes whitespaces. fixes complaint spreadsheet software. 189 Fix reading file without row attribute. 187 190 Remove reference printerSettings.bin loading. binary blob included reference caused file corruption warnings. 185 Fix loading writing xlsx files workbook$extLst. Previously loaded sheet contains slicer, second extLst added confused spreadsheet software. Now combined single node. Fix writing xlsx file multiple entries conditional formatting type databar sheet. 174 Cell fields cm, ph vm now implemented reading writing. first step handle functions use metadata. 173 wbWorkbook: $open() longer overwrites $path field temporary file 171 xl_open() works (better) Windows 170","code":""},{"path":"/dev/news/index.html","id":"breaking-changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"openxlsx2 0.2.1","text":"writing existing workbooks, default value removeCellStyle now FALSE. Therefore cell contains style, attempted replace value, style cell . wb_conditional_formatting() deprecated favor wb_add_conditional_formatting() wbWorkbook$add_conditional_formatting(). type must now match exactly one : \"expression\", \"colorScale\", \"dataBar\", \"duplicatedValues\", \"containsText\", \"notContainsText\", \"beginsWith\", \"endsWith\", \"\", \"topN\", \"bottomN\" Assigning new worksheet illegal character now prompts error 165. See ?clean_worksheet_name easy method replacing bad characters. openxlsx2Coerce() (called x objects adding data workbook) removed. Users can longer pass arbitrary objects need format objects appropriately rely .data.frame methods 167 xl_open(file = ) longer valid throw warning; first argument changes x highlight xl_open() can called file path wbWorkbook object 171","code":""},{"path":"/dev/news/index.html","id":"internal-changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"openxlsx2 0.2.1","text":"Remove wb$createFontNode() never used. Switch modern xlsx template, creating workbooks. Imported workbooks use imported template Rewrite wb$tables use data frame approach. simplifies code bit makes easier implement upcoming changes 191 Update internal pugixml library two functions write_data() write_datatable() now use internal function write_data_table() add data sheet. simplifies code ensures functions tested. pull request, documentation updated stack= option, present , removed 175 wbWorkbook$validate_sheet() added object methods private wbWorkbook field original_sheet_names added track original names passed sheets private $get_sheet() removed favor explicit private wbWorkbook methods additions: $get_sheet_id_max(), $get_sheet_index() getting ids $get_sheet_name() getting sheet name $set_single_sheet_name() setting sheet names $pappend() general private appending $validate_new_sheet() checking new sheet names $append_workbook_field() self$workbook[[field]] $append_sheet_rels() self$worksheet_rels[[sheet]] $get_worksheet() replace $ws()","code":""},{"path":"/dev/news/index.html","id":"openxlsx2-020","dir":"Changelog","previous_headings":"","what":"openxlsx2 0.2.0","title":"openxlsx2 0.2.0","text":"Added NEWS.md file track changes package. First public release","code":""}]
