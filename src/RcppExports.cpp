// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "openxlsx2_types.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// int_to_col
std::string int_to_col(uint32_t cell);
RcppExport SEXP _openxlsx2_int_to_col(SEXP cellSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< uint32_t >::type cell(cellSEXP);
    rcpp_result_gen = Rcpp::wrap(int_to_col(cell));
    return rcpp_result_gen;
END_RCPP
}
// col_to_int
Rcpp::IntegerVector col_to_int(Rcpp::CharacterVector x);
RcppExport SEXP _openxlsx2_col_to_int(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(col_to_int(x));
    return rcpp_result_gen;
END_RCPP
}
// rbindlist
SEXP rbindlist(Rcpp::List x);
RcppExport SEXP _openxlsx2_rbindlist(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rbindlist(x));
    return rcpp_result_gen;
END_RCPP
}
// col_to_df
Rcpp::DataFrame col_to_df(XPtrXML doc);
RcppExport SEXP _openxlsx2_col_to_df(SEXP docSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    rcpp_result_gen = Rcpp::wrap(col_to_df(doc));
    return rcpp_result_gen;
END_RCPP
}
// df_to_xml
Rcpp::CharacterVector df_to_xml(std::string name, Rcpp::DataFrame df_col);
RcppExport SEXP _openxlsx2_df_to_xml(SEXP nameSEXP, SEXP df_colSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type df_col(df_colSEXP);
    rcpp_result_gen = Rcpp::wrap(df_to_xml(name, df_col));
    return rcpp_result_gen;
END_RCPP
}
// loadvals
void loadvals(Rcpp::Environment sheet_data, XPtrXML doc);
RcppExport SEXP _openxlsx2_loadvals(SEXP sheet_dataSEXP, SEXP docSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Environment >::type sheet_data(sheet_dataSEXP);
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    loadvals(sheet_data, doc);
    return R_NilValue;
END_RCPP
}
// si_to_txt
SEXP si_to_txt(XPtrXML doc);
RcppExport SEXP _openxlsx2_si_to_txt(SEXP docSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    rcpp_result_gen = Rcpp::wrap(si_to_txt(doc));
    return rcpp_result_gen;
END_RCPP
}
// is_to_txt
SEXP is_to_txt(Rcpp::CharacterVector is_vec);
RcppExport SEXP _openxlsx2_is_to_txt(SEXP is_vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type is_vec(is_vecSEXP);
    rcpp_result_gen = Rcpp::wrap(is_to_txt(is_vec));
    return rcpp_result_gen;
END_RCPP
}
// long_to_wide
void long_to_wide(Rcpp::DataFrame z, Rcpp::DataFrame tt, Rcpp::DataFrame zz);
RcppExport SEXP _openxlsx2_long_to_wide(SEXP zSEXP, SEXP ttSEXP, SEXP zzSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type z(zSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type tt(ttSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type zz(zzSEXP);
    long_to_wide(z, tt, zz);
    return R_NilValue;
END_RCPP
}
// readXMLPtr
SEXP readXMLPtr(std::string path, bool isfile, bool escapes, bool declaration);
RcppExport SEXP _openxlsx2_readXMLPtr(SEXP pathSEXP, SEXP isfileSEXP, SEXP escapesSEXP, SEXP declarationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type path(pathSEXP);
    Rcpp::traits::input_parameter< bool >::type isfile(isfileSEXP);
    Rcpp::traits::input_parameter< bool >::type escapes(escapesSEXP);
    Rcpp::traits::input_parameter< bool >::type declaration(declarationSEXP);
    rcpp_result_gen = Rcpp::wrap(readXMLPtr(path, isfile, escapes, declaration));
    return rcpp_result_gen;
END_RCPP
}
// readXML
SEXP readXML(std::string path, bool isfile, bool escapes, bool declaration);
RcppExport SEXP _openxlsx2_readXML(SEXP pathSEXP, SEXP isfileSEXP, SEXP escapesSEXP, SEXP declarationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type path(pathSEXP);
    Rcpp::traits::input_parameter< bool >::type isfile(isfileSEXP);
    Rcpp::traits::input_parameter< bool >::type escapes(escapesSEXP);
    Rcpp::traits::input_parameter< bool >::type declaration(declarationSEXP);
    rcpp_result_gen = Rcpp::wrap(readXML(path, isfile, escapes, declaration));
    return rcpp_result_gen;
END_RCPP
}
// getXMLXPtrName
SEXP getXMLXPtrName(XPtrXML doc);
RcppExport SEXP _openxlsx2_getXMLXPtrName(SEXP docSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    rcpp_result_gen = Rcpp::wrap(getXMLXPtrName(doc));
    return rcpp_result_gen;
END_RCPP
}
// getXMLXPtr0
SEXP getXMLXPtr0(XPtrXML doc);
RcppExport SEXP _openxlsx2_getXMLXPtr0(SEXP docSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    rcpp_result_gen = Rcpp::wrap(getXMLXPtr0(doc));
    return rcpp_result_gen;
END_RCPP
}
// getXMLXPtr1
SEXP getXMLXPtr1(XPtrXML doc, std::string child);
RcppExport SEXP _openxlsx2_getXMLXPtr1(SEXP docSEXP, SEXP childSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< std::string >::type child(childSEXP);
    rcpp_result_gen = Rcpp::wrap(getXMLXPtr1(doc, child));
    return rcpp_result_gen;
END_RCPP
}
// getXMLXPtr2
SEXP getXMLXPtr2(XPtrXML doc, std::string level1, std::string child);
RcppExport SEXP _openxlsx2_getXMLXPtr2(SEXP docSEXP, SEXP level1SEXP, SEXP childSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< std::string >::type level1(level1SEXP);
    Rcpp::traits::input_parameter< std::string >::type child(childSEXP);
    rcpp_result_gen = Rcpp::wrap(getXMLXPtr2(doc, level1, child));
    return rcpp_result_gen;
END_RCPP
}
// getXMLXPtr3
SEXP getXMLXPtr3(XPtrXML doc, std::string level1, std::string level2, std::string child);
RcppExport SEXP _openxlsx2_getXMLXPtr3(SEXP docSEXP, SEXP level1SEXP, SEXP level2SEXP, SEXP childSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< std::string >::type level1(level1SEXP);
    Rcpp::traits::input_parameter< std::string >::type level2(level2SEXP);
    Rcpp::traits::input_parameter< std::string >::type child(childSEXP);
    rcpp_result_gen = Rcpp::wrap(getXMLXPtr3(doc, level1, level2, child));
    return rcpp_result_gen;
END_RCPP
}
// unkgetXMLXPtr3
SEXP unkgetXMLXPtr3(XPtrXML doc, std::string level1, std::string child);
RcppExport SEXP _openxlsx2_unkgetXMLXPtr3(SEXP docSEXP, SEXP level1SEXP, SEXP childSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< std::string >::type level1(level1SEXP);
    Rcpp::traits::input_parameter< std::string >::type child(childSEXP);
    rcpp_result_gen = Rcpp::wrap(unkgetXMLXPtr3(doc, level1, child));
    return rcpp_result_gen;
END_RCPP
}
// getXMLXPtr4
SEXP getXMLXPtr4(XPtrXML doc, std::string level1, std::string level2, std::string level3, std::string child);
RcppExport SEXP _openxlsx2_getXMLXPtr4(SEXP docSEXP, SEXP level1SEXP, SEXP level2SEXP, SEXP level3SEXP, SEXP childSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< std::string >::type level1(level1SEXP);
    Rcpp::traits::input_parameter< std::string >::type level2(level2SEXP);
    Rcpp::traits::input_parameter< std::string >::type level3(level3SEXP);
    Rcpp::traits::input_parameter< std::string >::type child(childSEXP);
    rcpp_result_gen = Rcpp::wrap(getXMLXPtr4(doc, level1, level2, level3, child));
    return rcpp_result_gen;
END_RCPP
}
// getXMLXPtr1val
SEXP getXMLXPtr1val(XPtrXML doc, std::string child);
RcppExport SEXP _openxlsx2_getXMLXPtr1val(SEXP docSEXP, SEXP childSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< std::string >::type child(childSEXP);
    rcpp_result_gen = Rcpp::wrap(getXMLXPtr1val(doc, child));
    return rcpp_result_gen;
END_RCPP
}
// getXMLXPtr2val
SEXP getXMLXPtr2val(XPtrXML doc, std::string level1, std::string child);
RcppExport SEXP _openxlsx2_getXMLXPtr2val(SEXP docSEXP, SEXP level1SEXP, SEXP childSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< std::string >::type level1(level1SEXP);
    Rcpp::traits::input_parameter< std::string >::type child(childSEXP);
    rcpp_result_gen = Rcpp::wrap(getXMLXPtr2val(doc, level1, child));
    return rcpp_result_gen;
END_RCPP
}
// getXMLXPtr3val
SEXP getXMLXPtr3val(XPtrXML doc, std::string level1, std::string level2, std::string child);
RcppExport SEXP _openxlsx2_getXMLXPtr3val(SEXP docSEXP, SEXP level1SEXP, SEXP level2SEXP, SEXP childSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< std::string >::type level1(level1SEXP);
    Rcpp::traits::input_parameter< std::string >::type level2(level2SEXP);
    Rcpp::traits::input_parameter< std::string >::type child(childSEXP);
    rcpp_result_gen = Rcpp::wrap(getXMLXPtr3val(doc, level1, level2, child));
    return rcpp_result_gen;
END_RCPP
}
// getXMLXPtr4val
SEXP getXMLXPtr4val(XPtrXML doc, std::string level1, std::string level2, std::string level3, std::string child);
RcppExport SEXP _openxlsx2_getXMLXPtr4val(SEXP docSEXP, SEXP level1SEXP, SEXP level2SEXP, SEXP level3SEXP, SEXP childSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< std::string >::type level1(level1SEXP);
    Rcpp::traits::input_parameter< std::string >::type level2(level2SEXP);
    Rcpp::traits::input_parameter< std::string >::type level3(level3SEXP);
    Rcpp::traits::input_parameter< std::string >::type child(childSEXP);
    rcpp_result_gen = Rcpp::wrap(getXMLXPtr4val(doc, level1, level2, level3, child));
    return rcpp_result_gen;
END_RCPP
}
// setXMLXPtr1val
SEXP setXMLXPtr1val(XPtrXML doc, std::string child, std::string value, bool no_escapes, bool raw);
RcppExport SEXP _openxlsx2_setXMLXPtr1val(SEXP docSEXP, SEXP childSEXP, SEXP valueSEXP, SEXP no_escapesSEXP, SEXP rawSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< std::string >::type child(childSEXP);
    Rcpp::traits::input_parameter< std::string >::type value(valueSEXP);
    Rcpp::traits::input_parameter< bool >::type no_escapes(no_escapesSEXP);
    Rcpp::traits::input_parameter< bool >::type raw(rawSEXP);
    rcpp_result_gen = Rcpp::wrap(setXMLXPtr1val(doc, child, value, no_escapes, raw));
    return rcpp_result_gen;
END_RCPP
}
// setXMLXPtr2val
SEXP setXMLXPtr2val(XPtrXML doc, std::string level1, std::string child, std::string value, bool no_escapes, bool raw);
RcppExport SEXP _openxlsx2_setXMLXPtr2val(SEXP docSEXP, SEXP level1SEXP, SEXP childSEXP, SEXP valueSEXP, SEXP no_escapesSEXP, SEXP rawSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< std::string >::type level1(level1SEXP);
    Rcpp::traits::input_parameter< std::string >::type child(childSEXP);
    Rcpp::traits::input_parameter< std::string >::type value(valueSEXP);
    Rcpp::traits::input_parameter< bool >::type no_escapes(no_escapesSEXP);
    Rcpp::traits::input_parameter< bool >::type raw(rawSEXP);
    rcpp_result_gen = Rcpp::wrap(setXMLXPtr2val(doc, level1, child, value, no_escapes, raw));
    return rcpp_result_gen;
END_RCPP
}
// setXMLXPtr3val
SEXP setXMLXPtr3val(XPtrXML doc, std::string level1, std::string level2, std::string child, std::string value, bool no_escapes, bool raw);
RcppExport SEXP _openxlsx2_setXMLXPtr3val(SEXP docSEXP, SEXP level1SEXP, SEXP level2SEXP, SEXP childSEXP, SEXP valueSEXP, SEXP no_escapesSEXP, SEXP rawSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< std::string >::type level1(level1SEXP);
    Rcpp::traits::input_parameter< std::string >::type level2(level2SEXP);
    Rcpp::traits::input_parameter< std::string >::type child(childSEXP);
    Rcpp::traits::input_parameter< std::string >::type value(valueSEXP);
    Rcpp::traits::input_parameter< bool >::type no_escapes(no_escapesSEXP);
    Rcpp::traits::input_parameter< bool >::type raw(rawSEXP);
    rcpp_result_gen = Rcpp::wrap(setXMLXPtr3val(doc, level1, level2, child, value, no_escapes, raw));
    return rcpp_result_gen;
END_RCPP
}
// setXMLXPtr4val
SEXP setXMLXPtr4val(XPtrXML doc, std::string level1, std::string level2, std::string level3, std::string child, std::string value, bool no_escapes, bool raw);
RcppExport SEXP _openxlsx2_setXMLXPtr4val(SEXP docSEXP, SEXP level1SEXP, SEXP level2SEXP, SEXP level3SEXP, SEXP childSEXP, SEXP valueSEXP, SEXP no_escapesSEXP, SEXP rawSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< std::string >::type level1(level1SEXP);
    Rcpp::traits::input_parameter< std::string >::type level2(level2SEXP);
    Rcpp::traits::input_parameter< std::string >::type level3(level3SEXP);
    Rcpp::traits::input_parameter< std::string >::type child(childSEXP);
    Rcpp::traits::input_parameter< std::string >::type value(valueSEXP);
    Rcpp::traits::input_parameter< bool >::type no_escapes(no_escapesSEXP);
    Rcpp::traits::input_parameter< bool >::type raw(rawSEXP);
    rcpp_result_gen = Rcpp::wrap(setXMLXPtr4val(doc, level1, level2, level3, child, value, no_escapes, raw));
    return rcpp_result_gen;
END_RCPP
}
// getXMLXPtr1attr
SEXP getXMLXPtr1attr(XPtrXML doc, std::string child);
RcppExport SEXP _openxlsx2_getXMLXPtr1attr(SEXP docSEXP, SEXP childSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< std::string >::type child(childSEXP);
    rcpp_result_gen = Rcpp::wrap(getXMLXPtr1attr(doc, child));
    return rcpp_result_gen;
END_RCPP
}
// getXMLXPtr2attr
Rcpp::List getXMLXPtr2attr(XPtrXML doc, std::string level1, std::string child);
RcppExport SEXP _openxlsx2_getXMLXPtr2attr(SEXP docSEXP, SEXP level1SEXP, SEXP childSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< std::string >::type level1(level1SEXP);
    Rcpp::traits::input_parameter< std::string >::type child(childSEXP);
    rcpp_result_gen = Rcpp::wrap(getXMLXPtr2attr(doc, level1, child));
    return rcpp_result_gen;
END_RCPP
}
// getXMLXPtr3attr
SEXP getXMLXPtr3attr(XPtrXML doc, std::string level1, std::string level2, std::string child);
RcppExport SEXP _openxlsx2_getXMLXPtr3attr(SEXP docSEXP, SEXP level1SEXP, SEXP level2SEXP, SEXP childSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< std::string >::type level1(level1SEXP);
    Rcpp::traits::input_parameter< std::string >::type level2(level2SEXP);
    Rcpp::traits::input_parameter< std::string >::type child(childSEXP);
    rcpp_result_gen = Rcpp::wrap(getXMLXPtr3attr(doc, level1, level2, child));
    return rcpp_result_gen;
END_RCPP
}
// getXMLXPtr4attr
Rcpp::List getXMLXPtr4attr(XPtrXML doc, std::string level1, std::string level2, std::string level3, std::string child);
RcppExport SEXP _openxlsx2_getXMLXPtr4attr(SEXP docSEXP, SEXP level1SEXP, SEXP level2SEXP, SEXP level3SEXP, SEXP childSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< std::string >::type level1(level1SEXP);
    Rcpp::traits::input_parameter< std::string >::type level2(level2SEXP);
    Rcpp::traits::input_parameter< std::string >::type level3(level3SEXP);
    Rcpp::traits::input_parameter< std::string >::type child(childSEXP);
    rcpp_result_gen = Rcpp::wrap(getXMLXPtr4attr(doc, level1, level2, level3, child));
    return rcpp_result_gen;
END_RCPP
}
// printXPtr
std::string printXPtr(XPtrXML doc, bool no_escapes, bool raw);
RcppExport SEXP _openxlsx2_printXPtr(SEXP docSEXP, SEXP no_escapesSEXP, SEXP rawSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type doc(docSEXP);
    Rcpp::traits::input_parameter< bool >::type no_escapes(no_escapesSEXP);
    Rcpp::traits::input_parameter< bool >::type raw(rawSEXP);
    rcpp_result_gen = Rcpp::wrap(printXPtr(doc, no_escapes, raw));
    return rcpp_result_gen;
END_RCPP
}
// write_xml_file
void write_xml_file(std::string xml_content, std::string fl, bool escapes);
RcppExport SEXP _openxlsx2_write_xml_file(SEXP xml_contentSEXP, SEXP flSEXP, SEXP escapesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type xml_content(xml_contentSEXP);
    Rcpp::traits::input_parameter< std::string >::type fl(flSEXP);
    Rcpp::traits::input_parameter< bool >::type escapes(escapesSEXP);
    write_xml_file(xml_content, fl, escapes);
    return R_NilValue;
END_RCPP
}
// xml_attr_mod
Rcpp::CharacterVector xml_attr_mod(std::string xml_content, Rcpp::CharacterVector xml_attributes, bool escapes, bool declaration);
RcppExport SEXP _openxlsx2_xml_attr_mod(SEXP xml_contentSEXP, SEXP xml_attributesSEXP, SEXP escapesSEXP, SEXP declarationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type xml_content(xml_contentSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type xml_attributes(xml_attributesSEXP);
    Rcpp::traits::input_parameter< bool >::type escapes(escapesSEXP);
    Rcpp::traits::input_parameter< bool >::type declaration(declarationSEXP);
    rcpp_result_gen = Rcpp::wrap(xml_attr_mod(xml_content, xml_attributes, escapes, declaration));
    return rcpp_result_gen;
END_RCPP
}
// xml_node_create
Rcpp::CharacterVector xml_node_create(std::string xml_name, Rcpp::Nullable<Rcpp::CharacterVector> xml_children, Rcpp::Nullable<Rcpp::CharacterVector> xml_attributes, bool escapes, bool declaration);
RcppExport SEXP _openxlsx2_xml_node_create(SEXP xml_nameSEXP, SEXP xml_childrenSEXP, SEXP xml_attributesSEXP, SEXP escapesSEXP, SEXP declarationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type xml_name(xml_nameSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::CharacterVector> >::type xml_children(xml_childrenSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::CharacterVector> >::type xml_attributes(xml_attributesSEXP);
    Rcpp::traits::input_parameter< bool >::type escapes(escapesSEXP);
    Rcpp::traits::input_parameter< bool >::type declaration(declarationSEXP);
    rcpp_result_gen = Rcpp::wrap(xml_node_create(xml_name, xml_children, xml_attributes, escapes, declaration));
    return rcpp_result_gen;
END_RCPP
}
// xml_append_child
SEXP xml_append_child(XPtrXML node, XPtrXML child, bool pointer, bool escapes);
RcppExport SEXP _openxlsx2_xml_append_child(SEXP nodeSEXP, SEXP childSEXP, SEXP pointerSEXP, SEXP escapesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type node(nodeSEXP);
    Rcpp::traits::input_parameter< XPtrXML >::type child(childSEXP);
    Rcpp::traits::input_parameter< bool >::type pointer(pointerSEXP);
    Rcpp::traits::input_parameter< bool >::type escapes(escapesSEXP);
    rcpp_result_gen = Rcpp::wrap(xml_append_child(node, child, pointer, escapes));
    return rcpp_result_gen;
END_RCPP
}
// read_xf
Rcpp::DataFrame read_xf(XPtrXML xml_doc_xf);
RcppExport SEXP _openxlsx2_read_xf(SEXP xml_doc_xfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type xml_doc_xf(xml_doc_xfSEXP);
    rcpp_result_gen = Rcpp::wrap(read_xf(xml_doc_xf));
    return rcpp_result_gen;
END_RCPP
}
// write_xf
Rcpp::CharacterVector write_xf(Rcpp::DataFrame df_xf);
RcppExport SEXP _openxlsx2_write_xf(SEXP df_xfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type df_xf(df_xfSEXP);
    rcpp_result_gen = Rcpp::wrap(write_xf(df_xf));
    return rcpp_result_gen;
END_RCPP
}
// read_font
Rcpp::DataFrame read_font(XPtrXML xml_doc_font);
RcppExport SEXP _openxlsx2_read_font(SEXP xml_doc_fontSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type xml_doc_font(xml_doc_fontSEXP);
    rcpp_result_gen = Rcpp::wrap(read_font(xml_doc_font));
    return rcpp_result_gen;
END_RCPP
}
// write_font
Rcpp::CharacterVector write_font(Rcpp::DataFrame df_font);
RcppExport SEXP _openxlsx2_write_font(SEXP df_fontSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type df_font(df_fontSEXP);
    rcpp_result_gen = Rcpp::wrap(write_font(df_font));
    return rcpp_result_gen;
END_RCPP
}
// read_numfmt
Rcpp::DataFrame read_numfmt(XPtrXML xml_doc_numfmt);
RcppExport SEXP _openxlsx2_read_numfmt(SEXP xml_doc_numfmtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type xml_doc_numfmt(xml_doc_numfmtSEXP);
    rcpp_result_gen = Rcpp::wrap(read_numfmt(xml_doc_numfmt));
    return rcpp_result_gen;
END_RCPP
}
// write_numfmt
Rcpp::CharacterVector write_numfmt(Rcpp::DataFrame df_numfmt);
RcppExport SEXP _openxlsx2_write_numfmt(SEXP df_numfmtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type df_numfmt(df_numfmtSEXP);
    rcpp_result_gen = Rcpp::wrap(write_numfmt(df_numfmt));
    return rcpp_result_gen;
END_RCPP
}
// read_border
Rcpp::DataFrame read_border(XPtrXML xml_doc_border);
RcppExport SEXP _openxlsx2_read_border(SEXP xml_doc_borderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type xml_doc_border(xml_doc_borderSEXP);
    rcpp_result_gen = Rcpp::wrap(read_border(xml_doc_border));
    return rcpp_result_gen;
END_RCPP
}
// write_border
Rcpp::CharacterVector write_border(Rcpp::DataFrame df_border);
RcppExport SEXP _openxlsx2_write_border(SEXP df_borderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type df_border(df_borderSEXP);
    rcpp_result_gen = Rcpp::wrap(write_border(df_border));
    return rcpp_result_gen;
END_RCPP
}
// read_fill
Rcpp::DataFrame read_fill(XPtrXML xml_doc_fill);
RcppExport SEXP _openxlsx2_read_fill(SEXP xml_doc_fillSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type xml_doc_fill(xml_doc_fillSEXP);
    rcpp_result_gen = Rcpp::wrap(read_fill(xml_doc_fill));
    return rcpp_result_gen;
END_RCPP
}
// write_fill
Rcpp::CharacterVector write_fill(Rcpp::DataFrame df_fill);
RcppExport SEXP _openxlsx2_write_fill(SEXP df_fillSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type df_fill(df_fillSEXP);
    rcpp_result_gen = Rcpp::wrap(write_fill(df_fill));
    return rcpp_result_gen;
END_RCPP
}
// read_cellStyle
Rcpp::DataFrame read_cellStyle(XPtrXML xml_doc_cellStyle);
RcppExport SEXP _openxlsx2_read_cellStyle(SEXP xml_doc_cellStyleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type xml_doc_cellStyle(xml_doc_cellStyleSEXP);
    rcpp_result_gen = Rcpp::wrap(read_cellStyle(xml_doc_cellStyle));
    return rcpp_result_gen;
END_RCPP
}
// write_cellStyle
Rcpp::CharacterVector write_cellStyle(Rcpp::DataFrame df_cellstyle);
RcppExport SEXP _openxlsx2_write_cellStyle(SEXP df_cellstyleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type df_cellstyle(df_cellstyleSEXP);
    rcpp_result_gen = Rcpp::wrap(write_cellStyle(df_cellstyle));
    return rcpp_result_gen;
END_RCPP
}
// read_tableStyle
Rcpp::DataFrame read_tableStyle(XPtrXML xml_doc_tableStyle);
RcppExport SEXP _openxlsx2_read_tableStyle(SEXP xml_doc_tableStyleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type xml_doc_tableStyle(xml_doc_tableStyleSEXP);
    rcpp_result_gen = Rcpp::wrap(read_tableStyle(xml_doc_tableStyle));
    return rcpp_result_gen;
END_RCPP
}
// write_tableStyle
Rcpp::CharacterVector write_tableStyle(Rcpp::DataFrame df_tablestyle);
RcppExport SEXP _openxlsx2_write_tableStyle(SEXP df_tablestyleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type df_tablestyle(df_tablestyleSEXP);
    rcpp_result_gen = Rcpp::wrap(write_tableStyle(df_tablestyle));
    return rcpp_result_gen;
END_RCPP
}
// read_dxf
Rcpp::DataFrame read_dxf(XPtrXML xml_doc_dxf);
RcppExport SEXP _openxlsx2_read_dxf(SEXP xml_doc_dxfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type xml_doc_dxf(xml_doc_dxfSEXP);
    rcpp_result_gen = Rcpp::wrap(read_dxf(xml_doc_dxf));
    return rcpp_result_gen;
END_RCPP
}
// write_dxf
Rcpp::CharacterVector write_dxf(Rcpp::DataFrame df_dxf);
RcppExport SEXP _openxlsx2_write_dxf(SEXP df_dxfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type df_dxf(df_dxfSEXP);
    rcpp_result_gen = Rcpp::wrap(write_dxf(df_dxf));
    return rcpp_result_gen;
END_RCPP
}
// read_colors
Rcpp::DataFrame read_colors(XPtrXML xml_doc_colors);
RcppExport SEXP _openxlsx2_read_colors(SEXP xml_doc_colorsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrXML >::type xml_doc_colors(xml_doc_colorsSEXP);
    rcpp_result_gen = Rcpp::wrap(read_colors(xml_doc_colors));
    return rcpp_result_gen;
END_RCPP
}
// write_colors
Rcpp::CharacterVector write_colors(Rcpp::DataFrame df_colors);
RcppExport SEXP _openxlsx2_write_colors(SEXP df_colorsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type df_colors(df_colorsSEXP);
    rcpp_result_gen = Rcpp::wrap(write_colors(df_colors));
    return rcpp_result_gen;
END_RCPP
}
// build_cell_merges
Rcpp::List build_cell_merges(Rcpp::List comps);
RcppExport SEXP _openxlsx2_build_cell_merges(SEXP compsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type comps(compsSEXP);
    rcpp_result_gen = Rcpp::wrap(build_cell_merges(comps));
    return rcpp_result_gen;
END_RCPP
}
// set_sst
Rcpp::CharacterVector set_sst(Rcpp::CharacterVector sharedStrings);
RcppExport SEXP _openxlsx2_set_sst(SEXP sharedStringsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type sharedStrings(sharedStringsSEXP);
    rcpp_result_gen = Rcpp::wrap(set_sst(sharedStrings));
    return rcpp_result_gen;
END_RCPP
}
// write_worksheet_xml_2
SEXP write_worksheet_xml_2(std::string prior, std::string post, Rcpp::Environment sheet_data, Rcpp::CharacterVector cols_attr, std::string R_fileName);
RcppExport SEXP _openxlsx2_write_worksheet_xml_2(SEXP priorSEXP, SEXP postSEXP, SEXP sheet_dataSEXP, SEXP cols_attrSEXP, SEXP R_fileNameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type prior(priorSEXP);
    Rcpp::traits::input_parameter< std::string >::type post(postSEXP);
    Rcpp::traits::input_parameter< Rcpp::Environment >::type sheet_data(sheet_dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type cols_attr(cols_attrSEXP);
    Rcpp::traits::input_parameter< std::string >::type R_fileName(R_fileNameSEXP);
    rcpp_result_gen = Rcpp::wrap(write_worksheet_xml_2(prior, post, sheet_data, cols_attr, R_fileName));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_openxlsx2_int_to_col", (DL_FUNC) &_openxlsx2_int_to_col, 1},
    {"_openxlsx2_col_to_int", (DL_FUNC) &_openxlsx2_col_to_int, 1},
    {"_openxlsx2_rbindlist", (DL_FUNC) &_openxlsx2_rbindlist, 1},
    {"_openxlsx2_col_to_df", (DL_FUNC) &_openxlsx2_col_to_df, 1},
    {"_openxlsx2_df_to_xml", (DL_FUNC) &_openxlsx2_df_to_xml, 2},
    {"_openxlsx2_loadvals", (DL_FUNC) &_openxlsx2_loadvals, 2},
    {"_openxlsx2_si_to_txt", (DL_FUNC) &_openxlsx2_si_to_txt, 1},
    {"_openxlsx2_is_to_txt", (DL_FUNC) &_openxlsx2_is_to_txt, 1},
    {"_openxlsx2_long_to_wide", (DL_FUNC) &_openxlsx2_long_to_wide, 3},
    {"_openxlsx2_readXMLPtr", (DL_FUNC) &_openxlsx2_readXMLPtr, 4},
    {"_openxlsx2_readXML", (DL_FUNC) &_openxlsx2_readXML, 4},
    {"_openxlsx2_getXMLXPtrName", (DL_FUNC) &_openxlsx2_getXMLXPtrName, 1},
    {"_openxlsx2_getXMLXPtr0", (DL_FUNC) &_openxlsx2_getXMLXPtr0, 1},
    {"_openxlsx2_getXMLXPtr1", (DL_FUNC) &_openxlsx2_getXMLXPtr1, 2},
    {"_openxlsx2_getXMLXPtr2", (DL_FUNC) &_openxlsx2_getXMLXPtr2, 3},
    {"_openxlsx2_getXMLXPtr3", (DL_FUNC) &_openxlsx2_getXMLXPtr3, 4},
    {"_openxlsx2_unkgetXMLXPtr3", (DL_FUNC) &_openxlsx2_unkgetXMLXPtr3, 3},
    {"_openxlsx2_getXMLXPtr4", (DL_FUNC) &_openxlsx2_getXMLXPtr4, 5},
    {"_openxlsx2_getXMLXPtr1val", (DL_FUNC) &_openxlsx2_getXMLXPtr1val, 2},
    {"_openxlsx2_getXMLXPtr2val", (DL_FUNC) &_openxlsx2_getXMLXPtr2val, 3},
    {"_openxlsx2_getXMLXPtr3val", (DL_FUNC) &_openxlsx2_getXMLXPtr3val, 4},
    {"_openxlsx2_getXMLXPtr4val", (DL_FUNC) &_openxlsx2_getXMLXPtr4val, 5},
    {"_openxlsx2_setXMLXPtr1val", (DL_FUNC) &_openxlsx2_setXMLXPtr1val, 5},
    {"_openxlsx2_setXMLXPtr2val", (DL_FUNC) &_openxlsx2_setXMLXPtr2val, 6},
    {"_openxlsx2_setXMLXPtr3val", (DL_FUNC) &_openxlsx2_setXMLXPtr3val, 7},
    {"_openxlsx2_setXMLXPtr4val", (DL_FUNC) &_openxlsx2_setXMLXPtr4val, 8},
    {"_openxlsx2_getXMLXPtr1attr", (DL_FUNC) &_openxlsx2_getXMLXPtr1attr, 2},
    {"_openxlsx2_getXMLXPtr2attr", (DL_FUNC) &_openxlsx2_getXMLXPtr2attr, 3},
    {"_openxlsx2_getXMLXPtr3attr", (DL_FUNC) &_openxlsx2_getXMLXPtr3attr, 4},
    {"_openxlsx2_getXMLXPtr4attr", (DL_FUNC) &_openxlsx2_getXMLXPtr4attr, 5},
    {"_openxlsx2_printXPtr", (DL_FUNC) &_openxlsx2_printXPtr, 3},
    {"_openxlsx2_write_xml_file", (DL_FUNC) &_openxlsx2_write_xml_file, 3},
    {"_openxlsx2_xml_attr_mod", (DL_FUNC) &_openxlsx2_xml_attr_mod, 4},
    {"_openxlsx2_xml_node_create", (DL_FUNC) &_openxlsx2_xml_node_create, 5},
    {"_openxlsx2_xml_append_child", (DL_FUNC) &_openxlsx2_xml_append_child, 4},
    {"_openxlsx2_read_xf", (DL_FUNC) &_openxlsx2_read_xf, 1},
    {"_openxlsx2_write_xf", (DL_FUNC) &_openxlsx2_write_xf, 1},
    {"_openxlsx2_read_font", (DL_FUNC) &_openxlsx2_read_font, 1},
    {"_openxlsx2_write_font", (DL_FUNC) &_openxlsx2_write_font, 1},
    {"_openxlsx2_read_numfmt", (DL_FUNC) &_openxlsx2_read_numfmt, 1},
    {"_openxlsx2_write_numfmt", (DL_FUNC) &_openxlsx2_write_numfmt, 1},
    {"_openxlsx2_read_border", (DL_FUNC) &_openxlsx2_read_border, 1},
    {"_openxlsx2_write_border", (DL_FUNC) &_openxlsx2_write_border, 1},
    {"_openxlsx2_read_fill", (DL_FUNC) &_openxlsx2_read_fill, 1},
    {"_openxlsx2_write_fill", (DL_FUNC) &_openxlsx2_write_fill, 1},
    {"_openxlsx2_read_cellStyle", (DL_FUNC) &_openxlsx2_read_cellStyle, 1},
    {"_openxlsx2_write_cellStyle", (DL_FUNC) &_openxlsx2_write_cellStyle, 1},
    {"_openxlsx2_read_tableStyle", (DL_FUNC) &_openxlsx2_read_tableStyle, 1},
    {"_openxlsx2_write_tableStyle", (DL_FUNC) &_openxlsx2_write_tableStyle, 1},
    {"_openxlsx2_read_dxf", (DL_FUNC) &_openxlsx2_read_dxf, 1},
    {"_openxlsx2_write_dxf", (DL_FUNC) &_openxlsx2_write_dxf, 1},
    {"_openxlsx2_read_colors", (DL_FUNC) &_openxlsx2_read_colors, 1},
    {"_openxlsx2_write_colors", (DL_FUNC) &_openxlsx2_write_colors, 1},
    {"_openxlsx2_build_cell_merges", (DL_FUNC) &_openxlsx2_build_cell_merges, 1},
    {"_openxlsx2_set_sst", (DL_FUNC) &_openxlsx2_set_sst, 1},
    {"_openxlsx2_write_worksheet_xml_2", (DL_FUNC) &_openxlsx2_write_worksheet_xml_2, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_openxlsx2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
